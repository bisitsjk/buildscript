<?xml version="1.0"?>
<ruleset name="Custom ruleset" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
	<description>LECS 3.0 PMD Ruleset</description>


	<!-- Basic -->

	<rule ref="rulesets/java/basic.xml/AvoidThreadGroup" />
	<rule ref="rulesets/java/basic.xml/AvoidUsingHardCodedIP" />
	<rule ref="rulesets/java/basic.xml/AvoidUsingOctalValues" />
	<rule ref="rulesets/java/basic.xml/BigIntegerInstantiation" />
	<rule ref="rulesets/java/basic.xml/BrokenNullCheck" />
	<rule ref="rulesets/java/basic.xml/ClassCastExceptionWithToArray" />
	<rule ref="rulesets/java/basic.xml/DoubleCheckedLocking" />
	<rule ref="rulesets/java/basic.xml/MisplacedNullCheck" />
	<rule ref="rulesets/java/basic.xml/OverrideBothEqualsAndHashcode" />
	<rule ref="rulesets/java/basic.xml/ReturnFromFinallyBlock" />
	<rule ref="rulesets/java/basic.xml/UnconditionalIfStatement" />

	<!-- Empty -->
	<rule ref="rulesets/java/empty.xml/EmptyFinallyBlock" />
	<rule ref="rulesets/java/empty.xml/EmptyIfStmt" />
	<rule ref="rulesets/java/empty.xml/EmptyStatementNotInLoop" />
	<rule ref="rulesets/java/empty.xml/EmptyTryBlock" />
	<rule ref="rulesets/java/empty.xml/EmptyWhileStmt" />

	<!-- Unnecessary -->
	<rule ref="rulesets/java/unnecessary.xml/UnnecessaryConversionTemporary" />
	<rule ref="rulesets/java/unnecessary.xml/UnnecessaryFinalModifier" />
	<rule ref="rulesets/java/unnecessary.xml/UnnecessaryReturn" />
	<rule ref="rulesets/java/unnecessary.xml/UselessOverridingMethod" />
	
	
	<!-- Braces -->
	<rule ref="rulesets/java/braces.xml/ForLoopsMustUseBraces" />
	<rule ref="rulesets/java/braces.xml/IfElseStmtsMustUseBraces" />
	<rule ref="rulesets/java/braces.xml/IfStmtsMustUseBraces" />
	<rule ref="rulesets/java/braces.xml/WhileLoopsMustUseBraces" />

	<!-- Clone --><!-- <rule ref="rulesets/java/clone.xml/CloneMethodMustImplementCloneable" /> 
		<rule ref="rulesets/java/clone.xml/CloneThrowsCloneNotSupportedException" /> <rule 
		ref="rulesets/java/clone.xml/ProperCloneImplementation" /> --><!-- Code Size -->
	<rule ref="rulesets/java/codesize.xml/ExcessiveClassLength" />
	<rule ref="rulesets/java/codesize.xml/ExcessiveMethodLength" />
	<rule ref="rulesets/java/codesize.xml/ExcessiveParameterList" />

	<rule ref="rulesets/java/controversial.xml/AvoidFinalLocalVariable" />
	<rule ref="rulesets/java/controversial.xml/AvoidUsingNativeCode" />
	<!-- <rule ref="rulesets/java/controversial.xml/AvoidUsingShortType" /> --><!-- 논란. 별로 필요없고 POI에서 주로 short를 사용. -->
	<rule ref="rulesets/java/controversial.xml/BooleanInversion" />
	<!--<rule ref="rulesets/java/controversial.xml/DefaultPackage" /> -->
	<rule ref="rulesets/java/controversial.xml/DontImportSun" />
	<rule ref="rulesets/java/controversial.xml/UnnecessaryParentheses" />

	<rule ref="rulesets/java/coupling.xml/LooseCoupling" />

	<!-- Design -->
	<rule ref="rulesets/java/design.xml/AbstractClassWithoutAbstractMethod" />
	<rule ref="rulesets/java/design.xml/AbstractClassWithoutAnyMethod" />
	<rule ref="rulesets/java/design.xml/AccessorClassGeneration" />
	<rule ref="rulesets/java/design.xml/AssignmentToNonFinalStatic" />
	<rule ref="rulesets/java/design.xml/AvoidConstantsInterface" />
	<rule ref="rulesets/java/design.xml/AvoidInstanceofChecksInCatchClause" />
	<rule ref="rulesets/java/design.xml/AvoidProtectedFieldInFinalClass" />
	<rule ref="rulesets/java/design.xml/AvoidSynchronizedAtMethodLevel" />
	<rule
		ref="rulesets/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal" />
	<rule ref="rulesets/java/design.xml/CloseResource" />
	<rule ref="rulesets/java/design.xml/CompareObjectsWithEquals" />
	<rule ref="rulesets/java/design.xml/EmptyMethodInAbstractClassShouldBeAbstract" />
	<rule ref="rulesets/java/design.xml/EqualsNull" />
	<rule ref="rulesets/java/design.xml/FinalFieldCouldBeStatic" />
	<rule ref="rulesets/java/design.xml/IdempotentOperations" />
	<rule ref="rulesets/java/design.xml/InstantiationToGetClass" />
	<rule ref="rulesets/java/design.xml/MissingBreakInSwitch" />
	<rule ref="rulesets/java/design.xml/NonStaticInitializer" />
	<rule ref="rulesets/java/design.xml/OptimizableToArrayCall" />
	<rule ref="rulesets/java/design.xml/PositionLiteralsFirstInComparisons" />
	<rule ref="rulesets/java/design.xml/PreserveStackTrace" />
	<rule ref="rulesets/java/design.xml/ReturnEmptyArrayRatherThanNull" />
	<rule ref="rulesets/java/design.xml/SimplifyConditional" />
	<rule ref="rulesets/java/design.xml/SwitchDensity" />
	<rule ref="rulesets/java/design.xml/SwitchStmtsShouldHaveDefault" />
	<rule ref="rulesets/java/design.xml/UncommentedEmptyConstructor" />
	<rule ref="rulesets/java/design.xml/UncommentedEmptyMethod" />
	<!--<rule ref="rulesets/java/design.xml/UnnecessaryLocalBeforeReturn" /> -->
	<rule ref="rulesets/java/design.xml/UnsynchronizedStaticDateFormatter" />
	<rule ref="rulesets/java/design.xml/UseCollectionIsEmpty" />
	<rule ref="rulesets/java/design.xml/UseNotifyAllInsteadOfNotify" />

	<!-- Finalizers -->
	<rule ref="rulesets/java/finalizers.xml/AvoidCallingFinalize" />
	<rule ref="rulesets/java/finalizers.xml/FinalizeDoesNotCallSuperFinalize" />

	<!-- Imports -->
	<rule ref="rulesets/java/imports.xml/DontImportJavaLang" />
	<rule ref="rulesets/java/imports.xml/DuplicateImports" />
	<rule ref="rulesets/java/imports.xml/ImportFromSamePackage" />
	<rule ref="rulesets/java/imports.xml/UnusedImports" />


	<!-- Java Logging -->
	<!--<rule ref="rulesets/java/logging-jakarta-commons.xml/UseCorrectExceptionLogging" 
		/> -->
	<rule ref="rulesets/java/logging-java.xml/AvoidPrintStackTrace" />
	<!-- <rule ref="rulesets/java/logging-java.xml/SystemPrintln" /> -->

	<rule ref="rulesets/java/junit.xml/JUnitSpelling" />
	<rule ref="rulesets/java/migrating.xml/ByteInstantiation" />
	<rule ref="rulesets/java/migrating.xml/IntegerInstantiation" />
	<rule ref="rulesets/java/migrating.xml/LongInstantiation" />
	<rule ref="rulesets/java/migrating.xml/ReplaceHashtableWithMap" />
	<rule ref="rulesets/java/migrating.xml/ReplaceVectorWithList" />
	<rule ref="rulesets/java/migrating.xml/ShortInstantiation" />

	<rule ref="rulesets/java/naming.xml/AvoidDollarSigns" />
	<rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingMethodName" />
	<!--<rule ref="rulesets/java/naming.xml/BooleanGetMethodName" /> -->
	<rule ref="rulesets/java/naming.xml/ClassNamingConventions" />
	<rule ref="rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass" />
	<rule ref="rulesets/java/naming.xml/NoPackage" />
	<rule ref="rulesets/java/naming.xml/PackageCase" />
	<rule ref="rulesets/java/naming.xml/ShortMethodName" />
	<!--<rule ref="rulesets/java/naming.xml/ShortVariable" /> -->
	<rule ref="rulesets/java/naming.xml/SuspiciousConstantFieldName" />

	<!-- Optimizations -->
	<!--<rule ref="rulesets/java/optimizations.xml/AddEmptyString" /> -->
	<rule ref="rulesets/java/optimizations.xml/AvoidArrayLoops" />
	<rule ref="rulesets/java/optimizations.xml/UnnecessaryWrapperObjectCreation" />
	<rule ref="rulesets/java/optimizations.xml/UseArrayListInsteadOfVector" />
	<rule ref="rulesets/java/optimizations.xml/UseArraysAsList" />
	<!--<rule ref="rulesets/java/optimizations.xml/UseStringBufferForStringAppends" 
		/> --><!-- Strict exceptions -->
	<rule ref="rulesets/java/strictexception.xml/AvoidCatchingNPE" />
	<rule ref="rulesets/java/strictexception.xml/AvoidCatchingThrowable" />
	<rule
		ref="rulesets/java/strictexception.xml/AvoidThrowingNewInstanceOfSameException" />
	<rule ref="rulesets/java/strictexception.xml/AvoidThrowingNullPointerException" />
	<rule ref="rulesets/java/strictexception.xml/AvoidThrowingRawExceptionTypes" />
	<rule ref="rulesets/java/strictexception.xml/DoNotThrowExceptionInFinally" />
	<rule ref="rulesets/java/strictexception.xml/ExceptionAsFlowControl" />

	<!-- Strings -->
	<rule ref="rulesets/java/strings.xml/AppendCharacterWithChar" />
	<rule ref="rulesets/java/strings.xml/AvoidStringBufferField" />
	<rule ref="rulesets/java/strings.xml/ConsecutiveLiteralAppends" />
	<!--<rule ref="rulesets/java/strings.xml/InefficientEmptyStringCheck" /> -->
	<rule ref="rulesets/java/strings.xml/InefficientStringBuffering" />
	<rule ref="rulesets/java/strings.xml/InsufficientStringBufferDeclaration" />
	<rule ref="rulesets/java/strings.xml/StringInstantiation" />
	<rule ref="rulesets/java/strings.xml/StringToString" />
	<rule ref="rulesets/java/strings.xml/UnnecessaryCaseChange" />
	<rule ref="rulesets/java/strings.xml/UseEqualsToCompareStrings" />
	<rule ref="rulesets/java/strings.xml/UseIndexOfChar" />
	<!-- <rule ref="rulesets/java/strings.xml/UselessStringValueOf" /> -->

	<!-- Type resolution -->
	<!--<rule ref="rulesets/java/typeresolution.xml/CloneMethodMustImplementCloneable" 
		/> -->
	<rule ref="rulesets/java/typeresolution.xml/UnusedImports" />

	<!-- Unused code -->
	<rule ref="rulesets/java/unusedcode.xml/UnusedFormalParameter" />
	<!--<rule ref="rulesets/java/unusedcode.xml/UnusedLocalVariable" /> -->
	<rule ref="rulesets/java/unusedcode.xml/UnusedPrivateField" />
	<rule ref="rulesets/java/unusedcode.xml/UnusedPrivateMethod" />
</ruleset>
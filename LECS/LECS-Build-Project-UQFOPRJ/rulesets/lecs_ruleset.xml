<?xml version="1.0"?>
<ruleset name="Custom ruleset" xmlns="http://pmd.sf.net/ruleset/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
	xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">

	<description>
		LECS Ruleset
  </description>


	<!--  Basic  -->

	<rule ref="rulesets/basic.xml/AvoidThreadGroup" />
	<rule ref="rulesets/basic.xml/AvoidUsingHardCodedIP" />
	<rule ref="rulesets/basic.xml/AvoidUsingOctalValues" />
	<rule ref="rulesets/basic.xml/BigIntegerInstantiation" />
	<rule ref="rulesets/basic.xml/BrokenNullCheck" />
	<rule ref="rulesets/basic.xml/ClassCastExceptionWithToArray" />
	<rule ref="rulesets/basic.xml/DoubleCheckedLocking" />
	<rule ref="rulesets/basic.xml/EmptyFinallyBlock" />
	<rule ref="rulesets/basic.xml/EmptyIfStmt" />
	<rule ref="rulesets/basic.xml/EmptyStatementNotInLoop" />
	<rule ref="rulesets/basic.xml/EmptyTryBlock" />
	<rule ref="rulesets/basic.xml/EmptyWhileStmt" />
	<rule ref="rulesets/basic.xml/MisplacedNullCheck" />
	<rule ref="rulesets/basic.xml/OverrideBothEqualsAndHashcode" />
	<rule ref="rulesets/basic.xml/ReturnFromFinallyBlock" />
	<rule ref="rulesets/basic.xml/UnconditionalIfStatement" />
	<rule ref="rulesets/basic.xml/UnnecessaryConversionTemporary" />
	<rule ref="rulesets/basic.xml/UnnecessaryFinalModifier" />
	<rule ref="rulesets/basic.xml/UnnecessaryReturn" />
	<rule ref="rulesets/basic.xml/UselessOverridingMethod" />


	<!--  Braces  -->
	<rule ref="rulesets/braces.xml/ForLoopsMustUseBraces" />
	<rule ref="rulesets/braces.xml/IfElseStmtsMustUseBraces" />
	<rule ref="rulesets/braces.xml/IfStmtsMustUseBraces" />
	<rule ref="rulesets/braces.xml/WhileLoopsMustUseBraces" />

	<!--  Clone  --><!--
	<rule ref="rulesets/clone.xml/CloneMethodMustImplementCloneable" />
	<rule ref="rulesets/clone.xml/CloneThrowsCloneNotSupportedException" />
	<rule ref="rulesets/clone.xml/ProperCloneImplementation" />

	--><!--  Code Size -->
	<rule ref="rulesets/codesize.xml/ExcessiveClassLength" />
	<rule ref="rulesets/codesize.xml/ExcessiveMethodLength" />
	<rule ref="rulesets/codesize.xml/ExcessiveParameterList" />

	<rule ref="rulesets/controversial.xml/AvoidFinalLocalVariable" />
	<rule ref="rulesets/controversial.xml/AvoidUsingNativeCode" />
	<rule ref="rulesets/controversial.xml/AvoidUsingShortType" />
	<rule ref="rulesets/controversial.xml/BooleanInversion" />
	<!--<rule ref="rulesets/controversial.xml/DefaultPackage" />
	--><rule ref="rulesets/controversial.xml/DontImportSun" />
	<rule ref="rulesets/controversial.xml/UnnecessaryParentheses" />

	<rule ref="rulesets/coupling.xml/LooseCoupling" />

	<!--  Design  -->
	<rule ref="rulesets/design.xml/AbstractClassWithoutAbstractMethod" />
	<rule ref="rulesets/design.xml/AbstractClassWithoutAnyMethod" />
	<rule ref="rulesets/design.xml/AccessorClassGeneration" />
	<rule ref="rulesets/design.xml/AssignmentToNonFinalStatic" />
	<rule ref="rulesets/design.xml/AvoidConstantsInterface" />
	<rule ref="rulesets/design.xml/AvoidInstanceofChecksInCatchClause" />
	<rule ref="rulesets/design.xml/AvoidProtectedFieldInFinalClass" />
	<rule ref="rulesets/design.xml/AvoidSynchronizedAtMethodLevel" />
	<rule ref="rulesets/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal" />
	<rule ref="rulesets/design.xml/CloseResource" />
	<rule ref="rulesets/design.xml/CompareObjectsWithEquals" />
	<rule ref="rulesets/design.xml/EmptyMethodInAbstractClassShouldBeAbstract" />
	<rule ref="rulesets/design.xml/EqualsNull" />
	<rule ref="rulesets/design.xml/FinalFieldCouldBeStatic" />
	<rule ref="rulesets/design.xml/IdempotentOperations" />
	<rule ref="rulesets/design.xml/InstantiationToGetClass" />
	<rule ref="rulesets/design.xml/MissingBreakInSwitch" />
	<rule ref="rulesets/design.xml/NonStaticInitializer" />
	<rule ref="rulesets/design.xml/OptimizableToArrayCall" />
	<rule ref="rulesets/design.xml/PositionLiteralsFirstInComparisons" />
	<rule ref="rulesets/design.xml/PreserveStackTrace" />
	<rule ref="rulesets/design.xml/ReturnEmptyArrayRatherThanNull" />
	<rule ref="rulesets/design.xml/SimplifyConditional" />
	<rule ref="rulesets/design.xml/SwitchDensity" />
	<rule ref="rulesets/design.xml/SwitchStmtsShouldHaveDefault" />
	<rule ref="rulesets/design.xml/UncommentedEmptyConstructor" />
	<rule ref="rulesets/design.xml/UncommentedEmptyMethod" />
	<!--<rule ref="rulesets/design.xml/UnnecessaryLocalBeforeReturn" />
	--><rule ref="rulesets/design.xml/UnsynchronizedStaticDateFormatter" />
	<rule ref="rulesets/design.xml/UseCollectionIsEmpty" />
	<rule ref="rulesets/design.xml/UseNotifyAllInsteadOfNotify" />

	<!--  Finalizers -->
	<rule ref="rulesets/finalizers.xml/AvoidCallingFinalize" />
	<rule ref="rulesets/finalizers.xml/FinalizeDoesNotCallSuperFinalize" />

	<!--  Imports -->
	<rule ref="rulesets/imports.xml/DontImportJavaLang" />
	<rule ref="rulesets/imports.xml/DuplicateImports" />
	<rule ref="rulesets/imports.xml/ImportFromSamePackage" />
	<rule ref="rulesets/imports.xml/UnusedImports" />


	<!--  Java Logging -->
	<!--<rule ref="rulesets/logging-jakarta-commons.xml/UseCorrectExceptionLogging" />
	--><rule ref="rulesets/logging-java.xml/AvoidPrintStackTrace" />
	<!-- <rule ref="rulesets/logging-java.xml/SystemPrintln" /> -->

	<rule ref="rulesets/junit.xml/JUnitSpelling" />
	<rule ref="rulesets/migrating.xml/ByteInstantiation" />
	<rule ref="rulesets/migrating.xml/IntegerInstantiation" />
	<rule ref="rulesets/migrating.xml/LongInstantiation" />
	<rule ref="rulesets/migrating.xml/ReplaceHashtableWithMap" />
	<rule ref="rulesets/migrating.xml/ReplaceVectorWithList" />
	<rule ref="rulesets/migrating.xml/ShortInstantiation" />
	
	<rule ref="rulesets/naming.xml/AvoidDollarSigns" />
	<rule ref="rulesets/naming.xml/AvoidFieldNameMatchingMethodName" />
	<!--<rule ref="rulesets/naming.xml/BooleanGetMethodName" />
	--><rule ref="rulesets/naming.xml/ClassNamingConventions" />
	<rule ref="rulesets/naming.xml/MethodWithSameNameAsEnclosingClass" />
	<rule ref="rulesets/naming.xml/NoPackage" />
	<rule ref="rulesets/naming.xml/PackageCase" />
	<rule ref="rulesets/naming.xml/ShortMethodName" />
	<!--<rule ref="rulesets/naming.xml/ShortVariable" />
	--><rule ref="rulesets/naming.xml/SuspiciousConstantFieldName" />

	<!--  Optimizations -->
	<!--<rule ref="rulesets/optimizations.xml/AddEmptyString" />
	--><rule ref="rulesets/optimizations.xml/AvoidArrayLoops" />
	<rule ref="rulesets/optimizations.xml/UnnecessaryWrapperObjectCreation" />
	<rule ref="rulesets/optimizations.xml/UseArrayListInsteadOfVector" />
	<rule ref="rulesets/optimizations.xml/UseArraysAsList" />
	<!--<rule ref="rulesets/optimizations.xml/UseStringBufferForStringAppends" />

	--><!--  Strict exceptions -->
	<rule ref="rulesets/strictexception.xml/AvoidCatchingNPE" />
	<rule ref="rulesets/strictexception.xml/AvoidCatchingThrowable" />
	<rule ref="rulesets/strictexception.xml/AvoidThrowingNewInstanceOfSameException" />
	<rule ref="rulesets/strictexception.xml/AvoidThrowingNullPointerException" />
	<rule ref="rulesets/strictexception.xml/AvoidThrowingRawExceptionTypes" />
	<rule ref="rulesets/strictexception.xml/DoNotThrowExceptionInFinally" />
	<rule ref="rulesets/strictexception.xml/ExceptionAsFlowControl" />

	<!--  Strings  -->
	<rule ref="rulesets/strings.xml/AppendCharacterWithChar" />
	<rule ref="rulesets/strings.xml/AvoidStringBufferField" />
	<rule ref="rulesets/strings.xml/ConsecutiveLiteralAppends" />
	<!--<rule ref="rulesets/strings.xml/InefficientEmptyStringCheck" />
	--><rule ref="rulesets/strings.xml/InefficientStringBuffering" />
	<rule ref="rulesets/strings.xml/InsufficientStringBufferDeclaration" />
	<rule ref="rulesets/strings.xml/StringInstantiation" />
	<rule ref="rulesets/strings.xml/StringToString" />
	<rule ref="rulesets/strings.xml/UnnecessaryCaseChange" />
	<rule ref="rulesets/strings.xml/UseEqualsToCompareStrings" />
	<rule ref="rulesets/strings.xml/UseIndexOfChar" />
	<rule ref="rulesets/strings.xml/UselessStringValueOf" />

	<!--  Type resolution -->
	<!--<rule ref="rulesets/typeresolution.xml/CloneMethodMustImplementCloneable" />
	--><rule ref="rulesets/typeresolution.xml/UnusedImports" />

	<!--  Unused code -->
	<rule ref="rulesets/unusedcode.xml/UnusedFormalParameter" />
	<!--<rule ref="rulesets/unusedcode.xml/UnusedLocalVariable" />
	--><rule ref="rulesets/unusedcode.xml/UnusedPrivateField" />
	<rule ref="rulesets/unusedcode.xml/UnusedPrivateMethod" />
</ruleset>
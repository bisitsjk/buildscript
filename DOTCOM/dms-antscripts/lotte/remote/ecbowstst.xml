<?xml version="1.0" encoding="UTF-8"?>
<project name="ecbowstst">
<!-- ================================================== -->
<!-- 공통 -->
<!-- ================================================== -->
	<property name="dep.id" value="${DEPLOY_ID}" />	
	<property name="source.dir" value="/usr1/home/jeus/deploy/src/${dep.id}" />
	<property name="java.home"  value="/usr/java1.6" />
	<property name="ant.home"   value="/usr1/home/jeus/deploy/apache-ant-1.8.2" />
	<property name="docroot"    value="/h2010" />
	<property name="user.id"    value="jeus" />
	<property file="user_pwd.properties" />
		
	
	
<!-- ================================================== -->
<!-- CM  -->
<!-- ================================================== -->
		
	<!-- ================================================== -->
	<!-- check -->
	<!-- ================================================== -->
	<target name="cm.checkValid">
		<condition property="cm.isValid" value="true" else="false">
			<and>
				<contains string="${hostname}" substring="ecbowstst"/>
				<contains string="${dep.id}" substring="CM_20" casesensitive="true" />
			</and>
		</condition>
		<echo>hostname `${hostname}` is ${cm.isValid}</echo>
	</target>
	
	<target name="cm.goFail" depends="cm.checkValid" unless="cm.isValid">
		<fail message="Hostname or deploy ID is wrong."/>
	</target>
		
	<target name="cm.checkExist">
		<condition property="cm.isExistLibForBo" value="true" else="false">
			<and>
				<resourceexists>
					<file file="${source.dir}/bo/APP-INF/lib"/>
				</resourceexists>
				<contains string="${hostname}" substring="ecbowstst"/>
			</and>
		</condition>
		<condition property="cm.isExistLibForMp" value="true" else="false">
			<and>
				<resourceexists>
					<file file="${source.dir}/mpo/APP-INF/lib"/>
				</resourceexists>
				<contains string="${hostname}" substring="ecbowstst"/>
			</and>
		</condition>
		<condition property="cm.isExistCommon" value="true" else="false">
			<resourceexists>
				<file file="${source.dir}/common/conf"/>
			</resourceexists>
		</condition>
		<condition property="cm.isExistCm" value="true" else="false">
			<or>
				<istrue value="${cm.isExistLibForBo}"/>
				<istrue value="${cm.isExistLibForMp}"/>
				<istrue value="${cm.isExistCommon}"/>
			</or>
		</condition>
	</target>
			
	<!-- ================================================== -->
	<!-- init -->
	<!-- ================================================== -->
	<target name="cm.init" depends="cm.goFail">
		<delete dir="${source.dir}/bo" />
		<delete dir="${source.dir}/mpo" />
		<mkdir  dir="${source.dir}" />
	</target>
		
	<!-- ================================================== -->
	<!-- backup -->
	<!-- ================================================== -->
	<target name="cm.backupWas">
		<java jvm="${java.home}/bin/java" fork="yes"
		      failonerror="yes"
		      jar="${ant.home}/bin/lotte.jar">
			<arg value="${source.dir}"/>
			<arg value="/h2010"/>
			<arg value="${source.dir}_backup"/>
		</java>
	</target>
		
	<!-- ================================================== -->
	<!-- deploy -->
	<!-- ================================================== -->	
	<target name="cm.deploy" depends="cm.goFail,cm.checkExist" if="${cm.isExistCm}">
		<tstamp><format property="cm.time1" pattern="yyyy-MM-dd HH:mm:ss.SSS"/></tstamp>
		<echo>${dep.id} [${cm.time1}] ==========</echo>
		<antcall target="cm.backupWas"/>
		<antcall target="cm.copyCommon"/>
		<antcall target="cm.copyLibForBo"/>
		<antcall target="cm.copyLibForMp"/>
		<tstamp><format property="cm.time2" pattern="yyyy-MM-dd HH:mm:ss.SSS"/></tstamp>
		<echo>${dep.id} [${cm.time2}] ==========</echo>
	</target>	

    <target name="cm.copyLibForBo" if="${cm.isExistLibForBo}">
        <echo message="deploy library for bo"/>
        <copy todir="/h2010/bo/APP-INF" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}/bo/APP-INF"
                     includes="lib/**"/>
        </copy>
        <copy todir="/h2010/cc/APP-INF" overwrite="yes" verbose="true">
             <fileset dir="${source.dir}/bo/APP-INF"
                      includes="lib/**"/>
         </copy>
         <copy todir="/h2010/po/APP-INF" overwrite="yes" verbose="true">
             <fileset dir="${source.dir}/bo/APP-INF"
                      includes="lib/**"/>
         </copy>
         <copy todir="/h2010/oa/APP-INF" overwrite="yes" verbose="true">
             <fileset dir="${source.dir}/bo/APP-INF"
                      includes="lib/**"/>
         </copy>
    </target>
	
    <target name="cm.copyLibForMp" if="${cm.isExistLibForMp}">
        <echo message="deploy library for mp"/>
    	<copy todir="/h2010/mpo/APP-INF" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}/mpo/APP-INF"
                     includes="lib/**"/>
        </copy>
    </target>	

    <target name="cm.copyCommon" if="${cm.isExistCommon}">
		<echo message="deploy common/conf"/>
		<copy todir="/h2010/common/conf" overwrite="yes" verbose="true">
			<fileset dir="${source.dir}/common/conf" 
			         includes="**/*" 
				     excludes="*.real.properties,*.dev.properties,**/*.tar,**/*.bak,**/*.zip"/>
		</copy>
    	
    	<antcall target="cm.replaceMcashProperties"/>
    </target>

	<!-- ================================================== -->
	<!-- rollback -->
	<!-- ================================================== -->	
	<target name="cm.rollback" depends="cm.goFail,cm.checkExist" if="${cm.isExistCm}">
		<tstamp><format property="cm.time3" pattern="yyyy-MM-dd HH:mm:ss.SSS"/></tstamp>
		<echo>${dep.id} [${cm.time3}] ==========</echo>
		<antcall target="cm.rollbackCommon"/>
		<antcall target="cm.rollbackLibForBo"/>
		<antcall target="cm.rollbackLibForMp"/>
		<tstamp><format property="cm.time4" pattern="yyyy-MM-dd HH:mm:ss.SSS"/></tstamp>
		<echo>${dep.id} [${cm.time4}] ==========</echo>
	</target>	

    <target name="cm.rollbackLibForBo" if="${cm.isExistLibForBo}">
        <echo message="rollback library for bo"/>
        <copy todir="/h2010/bo/APP-INF" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}_backup/bo/APP-INF"
                     includes="lib/**"/>
        </copy>
    </target>
	
    <target name="cm.rollbackLibForMp" if="${cm.isExistLibForMp}">
        <echo message="rollback library for mp"/>
    	<copy todir="/h2010/mpo/APP-INF" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}_backup/mpo/APP-INF"
                     includes="lib/**"/>
        </copy>
    </target>	

    <target name="cm.rollbackCommon" if="${cm.isExistCommon}">
		<echo message="rollback common/conf"/>
		<copy todir="/h2010/common/conf" overwrite="yes" verbose="true">
			<fileset dir="${source.dir}_backup/common/conf" 
			         includes="**/*"/>
		</copy>
    </target>	
	
    <!-- ================================================== -->
    <!-- changing for test only -->
    <!-- ================================================== -->
    <target name="cm.replaceMcashProperties">
        <echo>[Mcash] SERVER_IP replace from 121.254.135.130 to 121.254.135.131</echo>
        <replace dir="${docroot}/common/conf" value="121.254.135.131" encoding="utf-8">
            <include name="CancelRefund.properties"/>
            <include name="MCash_Cancel.properties"/>
            <include name="Mcash.properties"/>
            <replacetoken>121.254.135.130</replacetoken>
        </replace>
        <echo>[Mcash] SWITCH_IP replace from 218.50.55.97 to 121.254.135.131</echo>
        <replace dir="${docroot}/common/conf" value="121.254.135.131" encoding="utf-8">
            <include name="CancelRefund.properties"/>
            <include name="MCash_Cancel.properties"/>
            <include name="Mcash.properties"/>
            <replacetoken>218.50.55.97</replacetoken>
        </replace>
    </target>
	
		

<!-- ================================================== -->
<!-- BO  -->
<!-- ================================================== -->
	
	<!-- ================================================== -->
	<!-- check -->
	<!-- ================================================== -->
	<target name="bo.checkValid">
		<condition property="bo.isValid" value="true" else="false">
			<and>
				<contains string="${hostname}" substring="ecbowstst"/>
				<contains string="${dep.id}" substring="BO_20" casesensitive="true" />
			</and>
		</condition>
		<echo>hostname `${hostname}` is ${bo.isValid}</echo>
	</target>
	
	<target name="bo.goFail" depends="bo.checkValid" unless="${bo.isValid}">
		<fail message="Hostname or deploy ID is wrong."/>
	</target>
			
	<target name="bo.checkExist">
		<condition property="bo.isWebHost" value="true" else="false">
			<contains string="${hostname}" substring="ecbotst"/>
		</condition>
		<condition property="bo.isWasHost" value="true" else="false">
			<contains string="${hostname}" substring="ecbowstst"/>
		</condition>
		<condition property="bo.isExistWebroot" value="true" else="false">
			<and>
				<resourceexists>
					<file file="${source.dir}/bo/webroot"/>
				</resourceexists>
				<istrue value="${bo.isWebHost}"/>
			</and>
		</condition>
		<condition property="bo.isExistWebapp" value="true" else="false">
			<and>
				<resourceexists>
					<file file="${source.dir}/bo/webapp"/>
				</resourceexists>
				<istrue value="${bo.isWasHost}"/>
			</and>
		</condition>
		<condition property="bo.isExistAppinf" value="true" else="false">
			<and>
				<resourceexists>
					<file file="${source.dir}/bo/APP-INF"/>
				</resourceexists>
				<istrue value="${bo.isWasHost}"/>
			</and>
		</condition>
		<condition property="bo.isExistCommon" value="true" else="false">
			<and>
				<resourceexists>
					<file file="${source.dir}/common/conf"/>
				</resourceexists>
				<istrue value="${bo.isWasHost}"/>
			</and>
		</condition>
		<condition property="bo.isJspAndClass" value="true" else="false">
			<and>
				<istrue value="${bo.isExistWebapp}"/>
				<istrue value="${bo.isExistAppinf}"/>
			</and>
		</condition>
		<condition property="bo.isJsp" value="true" else="false">
			<and>
				<istrue value="${bo.isExistWebapp}"/>
				<isfalse value="${bo.isExistAppinf}"/>
			</and>
		</condition>
		<condition property="bo.isClass" value="true" else="false">
			<and>
				<isfalse value="${bo.isExistWebapp}"/>
				<istrue value="${bo.isExistAppinf}"/>
			</and>
		</condition>
		<condition property="bo.isWeb" value="true" else="false">
			<istrue value="${bo.isExistWebroot}"/>
		</condition>
		<condition property="bo.isWas" value="true" else="false">
			<or>
				<istrue value="${bo.isExistWebapp}"/>
				<istrue value="${bo.isExistAppinf}"/>
				<istrue value="${bo.isExistCommon}"/>
			</or>
		</condition>
		<condition property="bo.isCommon" value="true" else="false">
			<istrue value="${bo.isExistCommon}"/>
		</condition>
	</target>

	<!-- ================================================== -->
	<!-- init -->
	<!-- ================================================== -->
	<target name="bo.init" depends="bo.goFail">
		<delete dir="${source.dir}/bo" />
		<mkdir dir="${source.dir}" />
	</target>
		
	<!-- ================================================== -->
	<!-- backup -->
	<!-- ================================================== -->
	<target name="bo.backupWeb" if="${bo.isWeb}">
		<java jvm="${java.home}/bin/java" fork="yes"
		      failonerror="yes"
		      jar="${ant.home}/bin/lotte.jar">
			<arg value="${source.dir}"/>
			<arg value="/h2010"/>
			<arg value="${source.dir}_backup"/>
		</java>
	</target>	
	
	<target name="bo.backupWas" if="${bo.isWas}">
		<java jvm="${java.home}/bin/java" fork="yes"
		      failonerror="yes"
		      jar="${ant.home}/bin/lotte.jar">
			<arg value="${source.dir}"/>
			<arg value="/h2010"/>
			<arg value="${source.dir}_backup"/>
		</java>
	</target>		
		
	<!-- ================================================== -->
	<!-- deploy -->
	<!-- ================================================== -->
	<target name="bo.deploy" depends="bo.goFail,bo.checkExist">
		<tstamp><format property="bo.time1" pattern="yyyy-MM-dd HH:mm:ss.SSS"/></tstamp>
		<echo>${dep.id} [${bo.time1}] ==========</echo>
		<antcall target="bo.backupWeb"/>
		<antcall target="bo.copyWeb"/>
		<tstamp><format property="bo.time2" pattern="yyyy-MM-dd HH:mm:ss.SSS"/></tstamp>
		<echo>${dep.id} [${bo.time2}] ==========</echo>
		<antcall target="bo.backupWas"/>
		<antcall target="bo.copyCommon"/>
		<antcall target="bo.copyClass"/>
		<antcall target="bo.copyJsp"/>
		<tstamp><format property="bo.time3" pattern="yyyy-MM-dd HH:mm:ss.SSS"/></tstamp>
		<echo>${dep.id} [${bo.time3}] ==========</echo>
	</target>

	<target name="bo.copyWeb" if="${bo.isExistWebroot}">
        <echo message=""/>
        <copy todir="/h2010/bo/webroot" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}/bo/webroot"
                     includes="**/*"/>
        </copy>
		<copy todir="/h2010/cc/webroot" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}/bo/webroot"
                     includes="**/*"/>
        </copy>
		<copy todir="/h2010/po/webroot" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}/bo/webroot"
                     includes="**/*"/>
        </copy>
		<copy todir="/h2010/oa/webroot" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}/bo/webroot"
                     includes="**/*"/>
        </copy>
	</target>
	
	<target name="bo.copyJsp" if="${bo.isExistWebapp}">
        <echo message=""/>
        <copy todir="/h2010/bo/webapp" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}/bo/webapp"
                     includes="**/* "/>
        </copy>
        <copy todir="/h2010/cc/webapp" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}/bo/webapp"
                     includes="**/* "/>
        </copy>
        <copy todir="/h2010/po/webapp" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}/bo/webapp"
                     includes="**/* "/>
        </copy>
        <copy todir="/h2010/oa/webapp" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}/bo/webapp"
                     includes="**/* "/>
        </copy>
    </target>

    <target name="bo.copyClass" if="${bo.isExistAppinf}">
        <echo message=""/>
        <copy todir="/h2010/bo/APP-INF" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}/bo/APP-INF"
                     includes="**/*"/>
        </copy>
        <copy todir="/h2010/cc/APP-INF" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}/bo/APP-INF"
                     includes="**/*"/>
        </copy>
        <copy todir="/h2010/po/APP-INF" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}/bo/APP-INF"
                     includes="**/*"/>
        </copy>
        <copy todir="/h2010/oa/APP-INF" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}/bo/APP-INF"
                     includes="**/*"/>
        </copy>
    </target>

    <target name="bo.copyCommon" if="${bo.isExistCommon}">
		<echo message="========================================"/>
		<copy todir="/h2010/common/conf" overwrite="yes" verbose="true">
			<fileset dir="${source.dir}/common/conf" 
			         includes="**/*"/>
		</copy>
    	
    	<antcall target="cm.replaceMcashProperties"/>
    </target>
	<!-- ================================================== -->
	<!-- rollback -->
	<!-- ================================================== -->
	<target name="bo.rollback" depends="bo.goFail,bo.checkExist">
		<tstamp><format property="bo.time4" pattern="yyyy-MM-dd HH:mm:ss.SSS"/></tstamp>
		<echo>${dep.id} [${bo.time4}] ==========</echo>
		<antcall target="bo.rollbackWeb"/>
		<tstamp><format property="bo.time5" pattern="yyyy-MM-dd HH:mm:ss.SSS"/></tstamp>
		<echo>${dep.id} [${bo.time5}] ==========</echo>
		<antcall target="bo.rollbackCommon"/>
		<antcall target="bo.rollbackClass"/>
		<antcall target="bo.rollbackJsp"/>
		<tstamp><format property="bo.time6" pattern="yyyy-MM-dd HH:mm:ss.SSS"/></tstamp>
		<echo>${dep.id} [${bo.time6}] ==========</echo>
	</target>

	<target name="bo.rollbackWeb" if="${bo.isExistWebroot}">
        <echo message=""/>
        <copy todir="/h2010/bo/webroot" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}_backup/bo/webroot"
                     includes="**/*"/>
        </copy>
	    <copy todir="/h2010/cc/webroot" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}_backup/bo/webroot"
                     includes="**/*"/>
        </copy>
	    <copy todir="/h2010/po/webroot" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}_backup/bo/webroot"
                     includes="**/*"/>
        </copy>
	    <copy todir="/h2010/oa/webroot" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}_backup/bo/webroot"
                     includes="**/*"/>
        </copy>
	</target>
	
	<target name="bo.rollbackJsp" if="${bo.isExistWebapp}">
        <echo message=""/>
        <copy todir="/h2010/bo/webapp" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}_backup/bo/webapp"
                     includes="**/*"/>
        </copy>
        <copy todir="/h2010/cc/webapp" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}_backup/bo/webapp"
                     includes="**/*"/>
        </copy>
        <copy todir="/h2010/po/webapp" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}_backup/bo/webapp"
                     includes="**/*"/>
        </copy>
        <copy todir="/h2010/oa/webapp" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}_backup/bo/webapp"
                     includes="**/*"/>
        </copy>
    </target>

    <target name="bo.rollbackClass" if="${bo.isExistAppinf}">
        <echo message=""/>
        <copy todir="/h2010/bo/APP-INF" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}_backup/bo/APP-INF"
                     includes="**/*"/>
        </copy>
        <copy todir="/h2010/cc/APP-INF" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}_backup/bo/APP-INF"
                     includes="**/*"/>
        </copy>
        <copy todir="/h2010/po/APP-INF" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}_backup/bo/APP-INF"
                     includes="**/*"/>
        </copy>
        <copy todir="/h2010/oa/APP-INF" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}_backup/bo/APP-INF"
                     includes="**/*"/>
        </copy>
    </target>

    <target name="bo.rollbackCommon" if="${bo.isExistCommon}">
		<echo message="========================================"/>
		<copy todir="/h2010/common/conf" overwrite="yes" verbose="true">
			<fileset dir="${source.dir}_backup/common/conf" 
			         includes="**/*"/>
		</copy>
    </target>
	
	<!-- ================================================== -->
	<!-- sync -->
	<!-- ================================================== -->
	<property name="bo.was.ip"  value="10.149.144.47" />
	
	<target name="bo.sync" depends="bo.goFail">
		<antcall target="bo.getWas"/>
		<antcall target="bo.cleanWas"/>
		<antcall target="bo.untarWas"/>
		<antcall target="cm.replaceMcashProperties"/>
	</target>
	
	<target name="bo.getWas">
		<echo>docroot에 있는 오래된 tar 파일을 지웁니다.</echo>
		<delete verbose="true">
			<fileset dir="/h2010/bo" includes="*_WAS.tar"/>
		</delete>
		<echo>운영서버에서 백업받은 tar 파일을 docroot로 가져옵니다.</echo>
		<ftp server="${bo.was.ip}" userid="${user.id}" password="${user.pwd}"
		     remotedir="/ncontents/deploy/${dep.id}/backup/bo"
		     action="get">
			<fileset dir="/h2010/bo"
				     includes="${dep.id}_WAS.tar"/>
		</ftp>
	</target>
	
	<target name="bo.cleanWas">
		<delete verbose="true">
			<dirset dir="/h2010/bo">
				<include name="z_webapp"/>
				<include name="z_APP-INF"/>
			</dirset>
		</delete>
		<move file="/h2010/bo/webapp"   tofile="/h2010/bo/z_webapp"/>
		<move file="/h2010/bo/APP-INF"  tofile="/h2010/bo/z_APP-INF"/>
		<delete verbose="true">
			<dirset dir="/h2010/cc">
				<include name="z_webapp"/>
				<include name="z_APP-INF"/>
			</dirset>
		</delete>
		<move file="/h2010/cc/webapp"   tofile="/h2010/cc/z_webapp"/>
		<move file="/h2010/cc/APP-INF"  tofile="/h2010/cc/z_APP-INF"/>
		<delete verbose="true">
			<dirset dir="/h2010/po">
				<include name="z_webapp"/>
				<include name="z_APP-INF"/>
			</dirset>
		</delete>
		<move file="/h2010/po/webapp"   tofile="/h2010/po/z_webapp"/>
		<move file="/h2010/po/APP-INF"  tofile="/h2010/po/z_APP-INF"/>
		<delete verbose="true">
			<dirset dir="/h2010/oa">
				<include name="z_webapp"/>
				<include name="z_APP-INF"/>
			</dirset>
		</delete>
		<move file="/h2010/oa/webapp"   tofile="/h2010/oa/z_webapp"/>
		<move file="/h2010/oa/APP-INF"  tofile="/h2010/oa/z_APP-INF"/>
	</target>
	
	<target name="bo.untarWas">
		<untar src="/h2010/bo/${dep.id}_WAS.tar" dest="/h2010/bo" overwrite="yes"/>
		<copy todir="/h2010/bo/APP-INF/conf" overwrite="true">
            <fileset dir="/h2010/bo/z_APP-INF/conf">
                <include name="*.tst.*"/>
            </fileset>
        </copy>
		<untar src="/h2010/bo/${dep.id}_WAS.tar" dest="/h2010/cc" overwrite="yes"/>
		<copy todir="/h2010/cc/APP-INF/conf" overwrite="true">
            <fileset dir="/h2010/cc/z_APP-INF/conf">
                <include name="*.tst.*"/>
            </fileset>
        </copy>
		<untar src="/h2010/bo/${dep.id}_WAS.tar" dest="/h2010/po" overwrite="yes"/>
		<copy todir="/h2010/po/APP-INF/conf" overwrite="true">
            <fileset dir="/h2010/po/z_APP-INF/conf">
                <include name="*.tst.*"/>
            </fileset>
        </copy>
		<untar src="/h2010/bo/${dep.id}_WAS.tar" dest="/h2010/oa" overwrite="yes"/>
		<copy todir="/h2010/oa/APP-INF/conf" overwrite="true">
            <fileset dir="/h2010/oa/z_APP-INF/conf">
                <include name="*.tst.*"/>
            </fileset>
        </copy>
	</target>	
	
	
	
<!-- ================================================== -->
<!-- MPO  -->
<!-- ================================================== -->
	
	<!-- ================================================== -->
	<!-- check -->
	<!-- ================================================== -->
	<target name="mp.checkValid">
		<condition property="mp.isValid" value="true" else="false">
			<and>
				<contains string="${hostname}" substring="ecbowstst"/>
				<contains string="${dep.id}" substring="MP_20" casesensitive="true" />
			</and>
		</condition>
		<echo>hostname `${hostname}` is ${mp.isValid}</echo>
	</target>
	
	<target name="mp.goFail" depends="mp.checkValid" unless="${mp.isValid}">
		<fail message="Hostname or deploy ID is wrong."/>
	</target>
			
	<target name="mp.checkExist">
		<condition property="mp.isWebHost" value="true" else="false">
			<contains string="${hostname}" substring="ecbotst"/>
		</condition>
		<condition property="mp.isWasHost" value="true" else="false">
			<contains string="${hostname}" substring="ecbowstst"/>
		</condition>
		<condition property="mp.isExistWebroot" value="true" else="false">
			<and>
				<resourceexists>
					<file file="${source.dir}/mpo/webroot"/>
				</resourceexists>
				<istrue value="${mp.isWebHost}"/>
			</and>
		</condition>
		<condition property="mp.isExistWebapp" value="true" else="false">
			<and>
				<resourceexists>
					<file file="${source.dir}/mpo/webapp"/>
				</resourceexists>
				<istrue value="${mp.isWasHost}"/>
			</and>
		</condition>
		<condition property="mp.isExistAppinf" value="true" else="false">
			<and>
				<resourceexists>
					<file file="${source.dir}/mpo/APP-INF"/>
				</resourceexists>
				<istrue value="${mp.isWasHost}"/>
			</and>
		</condition>
		<condition property="mp.isExistCommon" value="true" else="false">
			<and>
				<resourceexists>
					<file file="${source.dir}/common/conf"/>
				</resourceexists>
				<istrue value="${mp.isWasHost}"/>
			</and>
		</condition>
		<condition property="mp.isJspAndClass" value="true" else="false">
			<and>
				<istrue value="${mp.isExistWebapp}"/>
				<istrue value="${mp.isExistAppinf}"/>
			</and>
		</condition>
		<condition property="mp.isJsp" value="true" else="false">
			<and>
				<istrue value="${mp.isExistWebapp}"/>
				<isfalse value="${mp.isExistAppinf}"/>
			</and>
		</condition>
		<condition property="mp.isClass" value="true" else="false">
			<and>
				<isfalse value="${mp.isExistWebapp}"/>
				<istrue value="${mp.isExistAppinf}"/>
			</and>
		</condition>
		<condition property="mp.isWeb" value="true" else="false">
			<istrue value="${mp.isExistWebroot}"/>
		</condition>
		<condition property="mp.isWas" value="true" else="false">
			<or>
				<istrue value="${mp.isExistWebapp}"/>
				<istrue value="${mp.isExistAppinf}"/>
				<istrue value="${mp.isExistCommon}"/>
			</or>
		</condition>
		<condition property="mp.isCommon" value="true" else="false">
			<istrue value="${mp.isExistCommon}"/>
		</condition>
	</target>
			
	<!-- ================================================== -->
	<!-- init -->
	<!-- ================================================== -->
	<target name="mp.init" depends="mp.goFail">
		<delete dir="${source.dir}/mpo" />
		<mkdir dir="${source.dir}" />
	</target>
		
	<!-- ================================================== -->
	<!-- backup -->
	<!-- ================================================== -->
	<target name="mp.backupWeb" if="${mp.isWeb}">
		<java jvm="${java.home}/bin/java" fork="yes"
		      failonerror="yes"
		      jar="${ant.home}/bin/lotte.jar">
			<arg value="${source.dir}"/>
			<arg value="/h2010"/>
			<arg value="${source.dir}_backup"/>
		</java>
	</target>	
	
	<target name="mp.backupWas" if="${mp.isWas}">
		<java jvm="${java.home}/bin/java" fork="yes"
		      failonerror="yes"
		      jar="${ant.home}/bin/lotte.jar">
			<arg value="${source.dir}"/>
			<arg value="/h2010"/>
			<arg value="${source.dir}_backup"/>
		</java>
	</target>	
		
	<!-- ================================================== -->
	<!-- deploy -->
	<!-- ================================================== -->
	<target name="mp.deploy" depends="mp.goFail,mp.checkExist">
		<tstamp><format property="mp.time1" pattern="yyyy-MM-dd HH:mm:ss.SSS"/></tstamp>
		<echo>${dep.id} [${mp.time1}] ==========</echo>
		<antcall target="mp.backupWeb"/>
		<antcall target="mp.copyWeb"/>
		<tstamp><format property="mp.time2" pattern="yyyy-MM-dd HH:mm:ss.SSS"/></tstamp>
		<echo>${dep.id} [${mp.time2}] ==========</echo>
		<antcall target="mp.backupWas"/>
		<antcall target="mp.copyCommon"/>
		<antcall target="mp.copyClass"/>
		<antcall target="mp.copyJsp"/>
		<tstamp><format property="mp.time3" pattern="yyyy-MM-dd HH:mm:ss.SSS"/></tstamp>
		<echo>${dep.id} [${mp.time3}] ==========</echo>
	</target>

	<target name="mp.copyWeb" if="${mp.isExistWebroot}">
        <echo message=""/>
        <copy todir="/h2010/mpo/webroot" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}/mpo/webroot"
                     includes="**/*"/>
        </copy>
	</target>
	
	<target name="mp.copyJsp" if="${mp.isExistWebapp}">
        <echo message=""/>
        <copy todir="/h2010/mpo/webapp" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}/mpo/webapp"
                     includes="**/*"/>
        </copy>
    </target>

    <target name="mp.copyClass" if="${mp.isExistAppinf}">
        <echo message=""/>
        <copy todir="/h2010/mpo/APP-INF" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}/mpo/APP-INF"
                     includes="**/*"/>
        </copy>
    </target>

    <target name="mp.copyCommon" if="${mp.isExistCommon}">
		<echo message="========================================"/>
		<copy todir="/h2010/common/conf" overwrite="yes" verbose="true">
			<fileset dir="${source.dir}/common/conf" 
			         includes="**/*"/>
		</copy>
    	
    	<antcall target="cm.replaceMcashProperties"/>
    </target>
	
	<!-- ================================================== -->
	<!-- rollback -->
	<!-- ================================================== -->
	<target name="mp.rollback" depends="mp.goFail,mp.checkExist">
		<tstamp><format property="mp.time4" pattern="yyyy-MM-dd HH:mm:ss.SSS"/></tstamp>
		<echo>${dep.id} [${mp.time4}] ==========</echo>
		<antcall target="mp.rollbackWeb"/>
		<tstamp><format property="mp.time5" pattern="yyyy-MM-dd HH:mm:ss.SSS"/></tstamp>
		<echo>${dep.id} [${mp.time5}] ==========</echo>
		<antcall target="mp.rollbackCommon"/>
		<antcall target="mp.rollbackClass"/>
		<antcall target="mp.rollbackJsp"/>
		<tstamp><format property="mp.time6" pattern="yyyy-MM-dd HH:mm:ss.SSS"/></tstamp>
		<echo>${dep.id} [${mp.time6}] ==========</echo>
	</target>

	<target name="mp.rollbackWeb" if="${mp.isExistWebroot}">
        <echo message=""/>
        <copy todir="/h2010/mpo/webroot" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}_backup/mpo/webroot"
                     includes="**/*"/>
        </copy>
	</target>
	
	<target name="mp.rollbackJsp" if="${mp.isExistWebapp}">
        <echo message=""/>
        <copy todir="/h2010/mpo/webapp" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}_backup/mpo/webapp"
                     includes="**/*"/>
        </copy>
    </target>

    <target name="mp.rollbackClass" if="${mp.isExistAppinf}">
        <echo message=""/>
        <copy todir="/h2010/mpo/APP-INF" overwrite="yes" verbose="true">
            <fileset dir="${source.dir}_backup/mpo/APP-INF"
                     includes="**/*"/>
        </copy>
    </target>

    <target name="mp.rollbackCommon" if="${mp.isExistCommon}">
		<echo message="========================================"/>
		<copy todir="/h2010/common/conf" overwrite="yes" verbose="true">
			<fileset dir="${source.dir}_backup/common/conf" 
			         includes="**/*"/>
		</copy>
    </target>	
		
	<!-- ================================================== -->
	<!-- sync -->
	<!-- ================================================== -->
	<property name="mp.was.ip"  value="121.254.239.80" />
	
	<target name="mp.sync" depends="mp.goFail">
		<antcall target="mp.getWas"/>
		<antcall target="mp.cleanWas"/>
		<antcall target="mp.untarWas"/>
		<antcall target="cm.replaceMcashProperties"/>
	</target>
	
	<target name="mp.getWas">
		<echo>docroot에 있는 오래된 tar 파일을 지웁니다.</echo>
		<delete verbose="true">
			<fileset dir="/h2010/mpo" includes="*_WAS.tar"/>
		</delete>
		<echo>운영서버에서 백업받은 tar 파일을 docroot로 가져옵니다.</echo>
		<ftp server="${mp.was.ip}" userid="${user.id}" password="${user.pwd}"
		     remotedir="/ncontents/deploy/${dep.id}/backup/mpo"
		     action="get">
			<fileset dir="/h2010/mpo"
				     includes="${dep.id}_WAS.tar"/>
		</ftp>
	</target>
	
	<target name="mp.cleanWas">
		<delete verbose="true">
			<dirset dir="/h2010/mpo">
				<include name="z_webapp"/>
				<include name="z_APP-INF"/>
			</dirset>
		</delete>
		<move file="/h2010/mpo/webapp"   tofile="/h2010/mpo/z_webapp"/>
		<move file="/h2010/mpo/APP-INF"  tofile="/h2010/mpo/z_APP-INF"/>
	</target>
	
	<target name="mp.untarWas">
		<untar src="/h2010/mpo/${dep.id}_WAS.tar" dest="/h2010/mpo" overwrite="yes"/>
		<copy todir="/h2010/mpo/APP-INF/conf" overwrite="true">
            <fileset dir="/h2010/mpo/z_APP-INF/conf">
                <include name="*.tst.*"/>
            </fileset>
        </copy>
	</target>	
</project>

<?xml version="1.0" encoding="UTF-8"?>
<project name="lotte_mo" basedir=".">
	<!-- ================================================== -->
	<!-- properties -->
	<!-- ================================================== -->
	<property name="srv" value="${TARGET_SERVER}"/>
	
	<property file="build_lotte_mo_${srv}.properties" />
		
	<property name="java.dir" value="C:/Program Files (x86)/Java/jdk1.6.0_25"/>
	<property name="jeus.dir" value="C:/TmaxSoft/JEUS6.0/lib"/>
	
	<!-- **************************************************************** -->
	<!-- properties_mo -->
	<!-- **************************************************************** -->
	<property name="project.mo"       value="mo"/>
	<property name="branches.dir"          value="branches/PROJECT/mobile_renewal_20150617"/>
	<property name="lotte2010.dir.mo"          value="lotte2010/${branches.dir}/${project.mo}"/>
	<property name="lotteframework2010.dir" value="lotteframework2010/${branches.dir}"/>
	<property name="mo.src.dir"       value="${wrkspc}/${lotte2010.dir.mo}"/>
	<property name="mo.src.java.dir"  value="${mo.src.dir}/src"/>
	<property name="mo.src.class.dir" value="${mo.src.dir}/webapp/WEB-INF/classes"/>
	<property name="mo.src.web.dir" value="${mo.src.dir}/webapp/WEB-INF"/>
	<property name="mo.src.lib.dir" value="${mo.src.dir}/webapp/WEB-INF/lib"/>
	<property name="mo.cmm.dir"       value="${wrkspc}/${lotteframework2010.dir}"/>	
	<property name="mo.pkg.dir"       value="${wrkspc}"/>
	
	<!-- **************************************************************** -->
	<!-- properties_fo -->
	<!-- **************************************************************** -->
	<property name="project.fo"       value="fo"/>
	<property name="lotte2010.dir.fo"          value="lotte2010/${branches.dir}/${project.fo}"/>
	<property name="fo.src.dir"       value="${wrkspc}/${lotte2010.dir.fo}"/>
	<property name="fo.src.java.dir"  value="${fo.src.dir}/src"/>
	<property name="fo.src.class.dir" value="${fo.src.dir}/APP-INF/classes"/>
	<property name="fo.src.app.dir" value="${fo.src.dir}/APP-INF"/>
	<property name="fo.cmm.dir"       value="${wrkspc}/${lotteframework2010.dir}"/>	
	<property name="fo.pkg.dir"       value="${wrkspc}"/>
	
	<property name="tar.name" value="MO_MOBILE_RENEWAL_20150617_PROJECT"/>
	<property name="web.work.log" value="${wrkspc}/deploy_web.log"/>
	<property name="was.work.log" value="${wrkspc}/deploy_was.log"/>
	
	<!-- server inmo -->
	<property name="user.id"  value="jeus"/>
	<property name="user.pwd" value="0fa18=b08a"/>
	
	<!-- document root -->
	<property name="docroot.mo"  value="/h2010/mo"/>
	<property name="docroot.fo"  value="/h2010/fo"/>
	<property name="init.cmd"  value="morenewal20150522projectinit ${tar.name}"/>
	
	
	<!-- **************************************************************** -->
	<!-- BUILD -->
	<!-- **************************************************************** -->
	<target name="build">
		<antcall target="compile.pdk" />
		<antcall target="jar.pdk" />
		
		<antcall target="compile.if" />
		<antcall target="jar.if" />
		
		<antcall target="compile.pricemgr" />
		<antcall target="jar.pricemgr" />
		
		<antcall target="fo.compile" />
		<antcall target="framework_pack" />
		<antcall target="mo.compile" />
		
	</target>	
	
	<!-- **************************************************************** -->
		<!-- COMPILE zPDK -->
		<!-- **************************************************************** -->
		<path id="classpath.pdk">
			<fileset dir="${java.dir}/lib">
				<include name="rt.jar" />
			</fileset>		
			<fileset dir="${jeus.dir}">
				<include name="**/*.jar" />
			</fileset>
			<fileset dir="${fo.cmm.dir}/zCommon/reference">
				<include name="*.jar" />
			</fileset>		
			<fileset dir="${fo.cmm.dir}/zCommon/common_lib">
				<include name="*.jar" />
				<exclude name="commons-pionnet.jar" />
				<exclude name="commons-interfaces.jar" />
				<exclude name="commons-pricemgr.jar" />
				<exclude name="ZipIt.jar" />
			</fileset>	
		</path>
				
		<target name="compile.pdk">
			<mkdir dir="${fo.cmm.dir}/zPDK/build" />
			<delete includeemptydirs="true">
				<fileset dir="${fo.cmm.dir}/zPDK/build" includes="**/*"/>
	    	</delete>
			<javac srcdir="${fo.cmm.dir}/zPDK/src" destdir="${fo.cmm.dir}/zPDK/build"
				classpathref="classpath.pdk"
				failonerror="on" debug="on"	encoding="utf-8"
				fork="true" includeantruntime="false" />
			<copy todir="${fo.cmm.dir}/zPDK/build">
				<fileset dir="${fo.cmm.dir}/zPDK/src">
					<exclude name="**/*.java" />
					<exclude name="**/.svn/**" />
			    </fileset>
			</copy>
		</target>
		
		<target name="jar.pdk">
			<mkdir dir="${fo.cmm.dir}/zPDK/dist" />
			<delete includeemptydirs="true">
				<fileset dir="${fo.cmm.dir}/zPDK/dist" includes="**/*"/>
	    	</delete>
			<jar encoding="UTF-8" destfile="${fo.cmm.dir}/zPDK/dist/commons-pionnet.jar">
				<fileset dir="${fo.cmm.dir}/zPDK/build">
					<exclude name="**/.svn/**" />
				</fileset>
			</jar>
		</target>
		
		<!-- **************************************************************** -->
		<!-- COMPILE zInterface -->
		<!-- **************************************************************** -->			
		<path id="classpath.ifapp">
			<fileset dir="${java.dir}/jre/lib">
				<include name="rt.jar" />
			</fileset>
			<fileset dir="${fo.cmm.dir}/zCommon/common_lib">
				<include name="*.jar" />
				<exclude name="commons-pionnet.jar" />
				<exclude name="commons-interfaces.jar" />
				<exclude name="commons-pricemgr.jar" />
				<exclude name="ZipIt.jar" />			
			</fileset>
			<fileset dir="${fo.cmm.dir}/zPDK/dist">
				<include name="commons-pionnet.jar"/>
			</fileset>
		</path>
		
		<path id="classpath.if">
			<fileset dir="${java.dir}/jre/lib">
				<include name="rt.jar" />
			</fileset>
			<fileset dir="${fo.cmm.dir}/zCommon/common_lib">
				<include name="*.jar" />
				<exclude name="commons-pionnet.jar" />
				<exclude name="commons-interfaces.jar" />
				<exclude name="commons-pricemgr.jar" />
				<exclude name="ZipIt.jar" />
			</fileset>		
			<fileset dir="${fo.cmm.dir}/zPDK/dist">
				<include name="commons-pionnet.jar"/>
			</fileset>		
			<fileset dir="${fo.cmm.dir}/zInterfaces/lib">
				<include name="*.jar" />
				<exclude name="commons-pionnet.jar"/>
				<exclude name="ibatis-2.3.4.726.jar"/>
				<exclude name="mcash.jar"/>
				<exclude name="mgcs.jar"/>
			</fileset>

			<dirset dir="${fo.cmm.dir}/zInterfaces/build_app" />
		</path>
					
		<target name="compile.if">
			<mkdir dir="${fo.cmm.dir}/zInterfaces/build_app" />
			<delete includeemptydirs="true">
				<fileset dir="${fo.cmm.dir}/zInterfaces/build_app" includes="**/*"/>
	    	</delete>
			<javac 
				classpathref="classpath.ifapp"
				srcdir="${fo.cmm.dir}/zInterfaces/src_app"
				destdir="${fo.cmm.dir}/zInterfaces/build_app"
				includes="com/mall/**"
				failonerror="on" 
				debug="on"
				encoding="utf-8"
				fork="true" 
				includeantruntime="false" />
				
			<mkdir dir="${fo.cmm.dir}/zInterfaces/build" />
			<delete includeemptydirs="true">
				<fileset dir="${fo.cmm.dir}/zInterfaces/build" includes="**/*"/>
	    	</delete>
			<javac 
				srcdir="${fo.cmm.dir}/zInterfaces/src"
				classpathref="classpath.if"
				destdir="${fo.cmm.dir}/zInterfaces/build"
				failonerror="on" 
				debug="on"
				encoding="utf-8"
				fork="true" 
				includeantruntime="false" />
				
			<copy todir="${fo.cmm.dir}/zInterfaces/build">
				<fileset dir="${fo.cmm.dir}/zInterfaces/src">
					<exclude name="**/*.java" />
					<exclude name="**/.svn/**" />
			    </fileset>
			</copy>
		</target>
		
		<target name="jar.if">
			<mkdir dir="${fo.cmm.dir}/zInterfaces/dist" />
			<delete includeemptydirs="true">
				<fileset dir="${fo.cmm.dir}/zInterfaces/dist" includes="**/*"/>
	    	</delete>
			<jar encoding="UTF-8" destfile="${fo.cmm.dir}/zInterfaces/dist/commons-interfaces.jar">
				<fileset dir="${fo.cmm.dir}/zInterfaces/build">
					<exclude name="**/.svn/**" />
				</fileset>
			</jar>		
		</target>
			
		<!-- **************************************************************** -->
		<!-- COMPILE zPriceMgr -->
		<!-- **************************************************************** -->
		<path id="classpath.pricemgr">
			<fileset dir="${java.dir}/jre/lib">
				<include name="rt.jar" />
			</fileset>
			<fileset dir="${fo.cmm.dir}/zCommon/common_lib">
				<include name="*.jar" />
				<exclude name="commons-pionnet.jar"/>
				<exclude name="commons-interfaces.jar" />
				<exclude name="commons-pricemgr.jar" />
				<exclude name="ZipIt.jar" />
			</fileset>			
			<fileset dir="${fo.cmm.dir}/zPDK/dist">
				<include name="commons-pionnet.jar"/>
			</fileset>
		</path>	
			
		<target name="compile.pricemgr">
			<mkdir dir="${fo.cmm.dir}/zPriceMgr/build" />
			<delete includeemptydirs="true">
				<fileset dir="${fo.cmm.dir}/zPriceMgr/build" includes="**/*"/>
	    	</delete>
			<javac
				srcdir="${fo.cmm.dir}/zPriceMgr/src"
				classpathref="classpath.pricemgr"
				destdir="${fo.cmm.dir}/zPriceMgr/build"
				failonerror="on" 
				debug="on"
				encoding="utf-8"
				fork="true" 
				includeantruntime="false" />
				
			<copy todir="${fo.cmm.dir}/zPriceMgr/build">
				<fileset dir="${fo.cmm.dir}/zPriceMgr/src">
					<exclude name="**/*.java" />
					<exclude name="**/.svn/**" />
			    </fileset>
			</copy>
		</target>
		
		<target name="jar.pricemgr">
			<mkdir dir="${fo.cmm.dir}/zPriceMgr/dist" />
			<delete includeemptydirs="true">
				<fileset dir="${fo.cmm.dir}/zPriceMgr/dist" includes="**/*"/>
	    	</delete>
			<jar encoding="UTF-8" destfile="${fo.cmm.dir}/zPriceMgr/dist/commons-pricemgr.jar">
				<fileset dir="${fo.cmm.dir}/zPriceMgr/build">
					<exclude name="**/.svn/**" />
				</fileset>
			</jar>
		</target>	
		
		<!-- **************************************************************** -->
		<!-- COMPILE fo -->
		<!-- **************************************************************** -->	
		<path id="fo.classpath">
			<fileset dir="${java.dir}/jre/lib">
				<include name="rt.jar" />
			</fileset>
			<fileset dir="${fo.cmm.dir}/zCommon/reference">
				<include name="*.jar" />
			</fileset>		
			<fileset dir="${fo.cmm.dir}/zCommon/common_lib">
				<include name="*.jar" />
				<exclude name="commons-pionnet.jar" />
				<exclude name="commons-interfaces.jar" />
				<exclude name="commons-pricemgr.jar" />
			</fileset>	
			<fileset dir="${fo.cmm.dir}/zPDK/dist">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${fo.cmm.dir}/zInterfaces/dist">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${fo.cmm.dir}/zPriceMgr/dist">
				<include name="*.jar" />
			</fileset>			
			<fileset dir="${fo.src.dir}/APP-INF/lib">
				<include name="*.jar" />
				<exclude name="commons-pionnet.jar" />
				<exclude name="commons-interfaces.jar" />
				<exclude name="commons-pricemgr.jar" />
			</fileset>
		</path>	
		
		<target name="fo.compile">
			<mkdir dir="${fo.src.class.dir}" />
			<delete includeemptydirs="true">
				<fileset dir="${fo.src.class.dir}" includes="**/*"/>
	    	</delete>
			<javac srcdir="${fo.src.java.dir}" destdir="${fo.src.class.dir}"
				classpathref="fo.classpath"			
				failonerror="on" debug="on"	encoding="utf-8" fork="true" 
				memoryMaximumSize="256m" includeantruntime="false" />
		</target>
	
 		<target name="framework_pack">
			<copy todir="${fo.src.dir}/APP-INF/lib">
				<fileset dir="${fo.pkg.dir}/${lotteframework2010.dir}/zCommon/common_lib">
					<exclude name="commons-pionnet.jar" />
					<exclude name="commons-interfaces.jar" />
					<exclude name="commons-pricemgr.jar" />
					<exclude name="ZipIt.jar" />
					<exclude name="**/*.java" />
					<exclude name="**/.svn/**" />
			    </fileset>
			</copy>
			<copy todir="${fo.src.dir}/APP-INF/lib" verbose="true" overwrite="true">
				<fileset dir="${fo.pkg.dir}/${lotteframework2010.dir}/zPDK/dist">
					<exclude name="**/*.java" />
					<exclude name="**/.svn/**" />
			    </fileset>
			</copy>
			<copy todir="${fo.src.dir}/APP-INF/lib" verbose="true" overwrite="true">
				<fileset dir="${fo.pkg.dir}/${lotteframework2010.dir}/zInterfaces/dist">
					<exclude name="**/*.java" />
					<exclude name="**/.svn/**" />
			    </fileset>
			</copy>
			<copy todir="${fo.src.dir}/APP-INF/lib" verbose="true" overwrite="true">
				<fileset dir="${fo.pkg.dir}/${lotteframework2010.dir}/zPriceMgr/dist">
					<exclude name="**/*.java" />
					<exclude name="**/.svn/**" />
			    </fileset>
			</copy>
		</target>
	
	<!-- **************************************************************** -->
	<!-- COMPILE mo -->
	<!-- **************************************************************** -->	
	<path id="mo.classpath">
		<fileset dir="${fo.src.dir}/APP-INF/lib">
			<include name="*.jar" />
		</fileset>
		<pathelement path="${fo.src.dir}/APP-INF/classes/" />
		<fileset dir="${java.dir}/jre/lib">
			<include name="rt.jar" />
		</fileset>
		<fileset dir="${jeus.dir}/system">
			<include name="*.jar" />
		</fileset>
	</path>
	
	<target name="mo.compile">
		<delete includeemptydirs="true">
			<fileset dir="${mo.src.class.dir}" includes="**/*"/>
    	</delete>
		<javac srcdir="${mo.src.java.dir}"
		       destdir="${mo.src.class.dir}"
			failonerror="on" errorProperty="isBuildError"
		       classpathref="mo.classpath"
		       encoding="UTF-8" 
		       debug="on"
		       nowarn="on" 
		/>
		<copy todir="${mo.src.class.dir}">
			<fileset dir="${mo.src.java.dir}">
				<include name="*.properties"/>
			</fileset>
		</copy>
		<copy todir="${mo.src.class.dir}">
			<fileset dir="${fo.src.app.dir}/classes">
				<include name="**/*"/>
			</fileset>
		</copy>
		<copy todir="${mo.src.class.dir}">
				<fileset dir="${fo.src.app.dir}/conf">
					<include name="**/*"/>
				</fileset>
			</copy>
		<copy todir="${mo.src.lib.dir}">
			<fileset dir="${fo.src.app.dir}/lib">
				<include name="**/*"/>
			</fileset>
		</copy>
	</target>
	
	
	<!-- **************************************************************** -->
	<!-- PACKAGING -->
	<!-- **************************************************************** -->
	<target name="package">
		<antcall target="tar.web" />
		<antcall target="tar.was" />
	</target>
	<target name="tar.web">
		<delete file="${mo.pkg.dir}/${tar.name}_WEB.tar" />
		<tar destfile="${mo.pkg.dir}/${tar.name}_WEB.tar" longfile="gnu">
			<tarfileset dir="${wrkspc}/${lotte2010.dir.mo}">
				<include name="/webroot/**"/>
				<exclude name="**/.svn/**"/>
			</tarfileset>
		</tar>
	</target>
	
	<target name="tar.was">
		<delete file="${mo.pkg.dir}/${tar.name}_WAS.tar" />
		<tar destfile="${mo.pkg.dir}/${tar.name}_WAS.tar" longfile="gnu">
			<tarfileset dir="${wrkspc}/${lotte2010.dir.mo}">
				<include name="/webapp/**"/>
				<exclude name="**/.svn/**"/>
			</tarfileset>			
		</tar>
	</target>
	
	
	<!-- **************************************************************** -->
	<!-- DEPLOY -->
	<!-- **************************************************************** -->	
	<target name="deploy.was">
		<antcall target="clean.was"/>
		<antcall target="send.was"/>
		<antcall target="send.web"/>
		<antcall target="copy.was"/>
	</target>

	<!-- ================================================== -->
	<!-- INIT --> 
	<!-- ================================================== -->
	<target name="clean.was">
		<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}" 
			trust="true" verbose="true" output="${was.work.log}"
			command="cd deploy;./morenewal20150522projectinit ${tar.name}" />
		<condition property="isSuccess">
			<resourcecontains resource="${was.work.log}" substring="BUILD SUCCESSFUL" casesensitive="true" />
		</condition>
		<antcall target="check_remote_work" />	
	</target>
	
	<!-- ================================================== -->
	<!-- SEND --> 
	<!-- ================================================== -->
	<target name="send.web">
		<scp todir="${user.id}:${user.pwd}@${web.ip}:${docroot.mo}" trust="true">
			<fileset dir="${mo.pkg.dir}">
				<include name="${tar.name}_WEB.tar"></include>
			</fileset>
		</scp>
	</target>
	
	<target name="send.was">
		<scp todir="${user.id}:${user.pwd}@${was.ip}:${docroot.mo}" trust="true">
			<fileset dir="${mo.pkg.dir}">
				<include name="${tar.name}_WAS.tar"></include>
			</fileset>
		</scp>
	</target>
	
	<!-- ================================================== -->
	<!-- COPY	 --> 
	<!-- ================================================== -->	
	<target name="copy.was">
		<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}" 
			trust="true" verbose="false" output="${was.work.log}"
			command="cd deploy;./morenewal20150522projectdeploy ${tar.name}" />
		<condition property="isSuccess">
			<resourcecontains resource="${was.work.log}" substring="BUILD SUCCESSFUL" casesensitive="true" />
		</condition>
		<antcall target="check_remote_work" />		
	</target>	
	
	<target name="check_remote_work" unless="isSuccess">
		<fail message="원격지 작업이 실패하였습니다..." />
	</target>	
	
	
	<!-- **************************************************************** -->
	<!-- restart jeus -->
	<!-- **************************************************************** -->	
	<target name="restart"> <!-- test server only -->
		<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}" 
			trust="true" verbose="false" output="${was.work.log}"
			command="ja downcon ${con.name1};ja startcon ${con.name1}" />
		<condition property="isSuccess">
			<resourcecontains resource="${was.work.log}" substring="Succeeded to start" casesensitive="true" />
		</condition>
		<antcall target="check_remote_work" />			
	</target>

	<target name="restart_linux"> <!-- test server only -->
		<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}" 
			trust="true" verbose="false" output="${was.work.log}"
			command="/usr2/jeus6/bin/jeusadmin `hostname` -Uadministrator -Pjeusadmin downcon ${con.name1};/usr2/jeus6/bin/jeusadmin `hostname` -Uadministrator -Pjeusadmin startcon ${con.name1};/usr2/jeus6/bin/jeusadmin `hostname` -Uadministrator -Pjeusadmin downcon ${con.name2};/usr2/jeus6/bin/jeusadmin `hostname` -Uadministrator -Pjeusadmin startcon ${con.name2};" />
		<condition property="isSuccess">
			<resourcecontains resource="${was.work.log}" substring="Succeeded to start" casesensitive="true" />
		</condition>
		<antcall target="check_remote_work" />			
	</target>	
</project>
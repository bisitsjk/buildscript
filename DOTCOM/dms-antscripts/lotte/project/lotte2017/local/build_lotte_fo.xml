<?xml version="1.0" encoding="UTF-8"?>
<project name="lotte_fo" basedir=".">
	<!-- ================================================== -->
	<!-- properties -->
	<!-- ================================================== -->
	<property name="srv" value="${TARGET_SERVER}"/>
	
	<property file="build_lotte_fo_${srv}.properties" />
		
	<property name="java.dir" value="C:/Program Files (x86)/Java/jdk1.7.0_80"/>
	<property name="jeus.dir" value="C:/TmaxSoft/JEUS6.0/lib"/>
	
	<property name="project"       value="fo"/>
	<property name="project.dir"       value="lotte2017"/>
	<property name="branches.dir"          value="branches/PROJECT/${project.dir}"/>
	<property name="lotte2010.dir"          value="lotte2010/${branches.dir}/${project}"/>
	<property name="lotteframework2010.dir" value="lotteframework2010/${branches.dir}"/>
	<property name="fo.src.dir"       value="${wrkspc}/${lotte2010.dir}"/>
	<property name="fo.src.java.dir"  value="${fo.src.dir}/src"/>
	<property name="fo.src.class.dir" value="${fo.src.dir}/APP-INF/classes"/>
	<property name="fo.cmm.dir"       value="${wrkspc}/${lotteframework2010.dir}"/>	
	<property name="fo.pkg.dir"       value="${wrkspc}"/>
	
	<property name="tar.name" value="fo_${project.dir}_PROJECT"/>
	<property name="tar.name.17" value="fo17"/>
	<property name="tar.name.pdk" value="pionnet"/>
	<property name="web.work.log" value="${wrkspc}/deploy_web.log"/>
	<property name="was.work.log" value="${wrkspc}/deploy_was.log"/>
	
	<!-- server info -->
	<property name="user.id"  value="jeus"/>
	<!-- <property name="user.pwd" value="w&uch6raDa*r"/> -->
	
	<!-- document root -->
	<property name="docroot"  value="/h2010/fo_tomcat"/>
	
	<!-- cmd -->
	<property name="init.cmd"  value="${project.dir}${project}init ${tar.name}"/>
	<property name="deploy.cmd"  value="${project.dir}${project}deploy ${tar.name}"/>
	

	
	<!-- **************************************************************** -->
	<!-- BUILD -->
	<!-- **************************************************************** -->
	<target name="build">
		<antcall target="compile.pdk" />
		<antcall target="jar.pdk" />
		
		<antcall target="compile.if" />
		<antcall target="jar.if" />
		
		<antcall target="compile.pricemgr" />
		<antcall target="jar.pricemgr" />
		
		<antcall target="compile" />
	</target>	

	
	
	<!-- **************************************************************** -->
	<!-- COMPILE zPDK -->
	<!-- **************************************************************** -->
	<path id="classpath.pdk">
		<fileset dir="${java.dir}/lib">
			<include name="rt.jar" />
		</fileset>		
		<fileset dir="${jeus.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${fo.cmm.dir}/zCommon/reference">
			<include name="*.jar" />
		</fileset>		
		<fileset dir="${fo.cmm.dir}/zCommon/common_lib">
			<include name="*.jar" />
			<exclude name="commons-pionnet.jar" />
			<exclude name="commons-interfaces.jar" />
			<exclude name="commons-pricemgr.jar" />
			<exclude name="ZipIt.jar" />
		</fileset>	
	</path>
			
	<target name="compile.pdk">
		<mkdir dir="${fo.cmm.dir}/zPDK/build" />
		<delete includeemptydirs="true">
			<fileset dir="${fo.cmm.dir}/zPDK/build" includes="**/*"/>
    	</delete>
		<javac srcdir="${fo.cmm.dir}/zPDK/src" destdir="${fo.cmm.dir}/zPDK/build"
			classpathref="classpath.pdk"
			failonerror="on" debug="on"	encoding="utf-8"
			fork="true" includeantruntime="false" />
		<copy todir="${fo.cmm.dir}/zPDK/build">
			<fileset dir="${fo.cmm.dir}/zPDK/src">
				<exclude name="**/*.java" />
				<exclude name="**/.svn/**" />
		    </fileset>
		</copy>
	</target>
	
	<target name="jar.pdk">
		<mkdir dir="${fo.cmm.dir}/zPDK/dist" />
		<delete includeemptydirs="true">
			<fileset dir="${fo.cmm.dir}/zPDK/dist" includes="**/*"/>
    	</delete>
		<jar encoding="UTF-8" destfile="${fo.cmm.dir}/zPDK/dist/commons-pionnet.jar">
			<fileset dir="${fo.cmm.dir}/zPDK/build">
				<exclude name="**/.svn/**" />
			</fileset>
		</jar>
	</target>

	
	
	<!-- **************************************************************** -->
	<!-- COMPILE zInterface -->
	<!-- **************************************************************** -->			
	<path id="classpath.ifapp">
		<fileset dir="${java.dir}/jre/lib">
			<include name="rt.jar" />
		</fileset>
		<fileset dir="${fo.cmm.dir}/zCommon/common_lib">
			<include name="*.jar" />
			<exclude name="commons-pionnet.jar" />
			<exclude name="commons-interfaces.jar" />
			<exclude name="commons-pricemgr.jar" />
			<exclude name="ZipIt.jar" />			
		</fileset>
		<fileset dir="${fo.cmm.dir}/zPDK/dist">
			<include name="commons-pionnet.jar"/>
		</fileset>
	</path>
	
	<path id="classpath.if">
		<fileset dir="${java.dir}/jre/lib">
			<include name="rt.jar" />
		</fileset>
		<fileset dir="${fo.cmm.dir}/zCommon/common_lib">
			<include name="*.jar" />
			<exclude name="commons-pionnet.jar" />
			<exclude name="commons-interfaces.jar" />
			<exclude name="commons-pricemgr.jar" />
			<exclude name="ZipIt.jar" />
		</fileset>		
		<fileset dir="${fo.cmm.dir}/zPDK/dist">
			<include name="commons-pionnet.jar"/>
		</fileset>		
		<fileset dir="${fo.cmm.dir}/zInterfaces/lib">
			<include name="*.jar" />
			<exclude name="commons-pionnet.jar"/>
			<exclude name="ibatis-2.3.4.726.jar"/>
			<exclude name="mcash.jar"/>
			<exclude name="mgcs.jar"/>
		</fileset>

		<dirset dir="${fo.cmm.dir}/zInterfaces/build_app" />
	</path>
				
	<target name="compile.if">
		<mkdir dir="${fo.cmm.dir}/zInterfaces/build_app" />
		<delete includeemptydirs="true">
			<fileset dir="${fo.cmm.dir}/zInterfaces/build_app" includes="**/*"/>
    	</delete>
		<javac 
			classpathref="classpath.ifapp"
			srcdir="${fo.cmm.dir}/zInterfaces/src_app"
			destdir="${fo.cmm.dir}/zInterfaces/build_app"
			includes="com/mall/**"
			failonerror="on" 
			debug="on"
			encoding="utf-8"
			fork="true" 
			includeantruntime="false" />
			
		<mkdir dir="${fo.cmm.dir}/zInterfaces/build" />
		<delete includeemptydirs="true">
			<fileset dir="${fo.cmm.dir}/zInterfaces/build" includes="**/*"/>
    	</delete>
		<javac 
			srcdir="${fo.cmm.dir}/zInterfaces/src"
			classpathref="classpath.if"
			destdir="${fo.cmm.dir}/zInterfaces/build"
			failonerror="on" 
			debug="on"
			encoding="utf-8"
			fork="true" 
			includeantruntime="false" />
			
		<copy todir="${fo.cmm.dir}/zInterfaces/build">
			<fileset dir="${fo.cmm.dir}/zInterfaces/src">
				<exclude name="**/*.java" />
				<exclude name="**/.svn/**" />
		    </fileset>
		</copy>
	</target>
	
	<target name="jar.if">
		<mkdir dir="${fo.cmm.dir}/zInterfaces/dist" />
		<delete includeemptydirs="true">
			<fileset dir="${fo.cmm.dir}/zInterfaces/dist" includes="**/*"/>
    	</delete>
		<jar encoding="UTF-8" destfile="${fo.cmm.dir}/zInterfaces/dist/commons-interfaces.jar">
			<fileset dir="${fo.cmm.dir}/zInterfaces/build">
				<exclude name="**/.svn/**" />
			</fileset>
		</jar>		
	</target>
		
	<!-- **************************************************************** -->
	<!-- COMPILE zPriceMgr -->
	<!-- **************************************************************** -->
	<path id="classpath.pricemgr">
		<fileset dir="${java.dir}/jre/lib">
			<include name="rt.jar" />
		</fileset>
		<fileset dir="${fo.cmm.dir}/zCommon/common_lib">
			<include name="*.jar" />
			<exclude name="commons-pionnet.jar"/>
			<exclude name="commons-interfaces.jar" />
			<exclude name="commons-pricemgr.jar" />
			<exclude name="ZipIt.jar" />
		</fileset>			
		<fileset dir="${fo.cmm.dir}/zPDK/dist">
			<include name="commons-pionnet.jar"/>
		</fileset>
	</path>	
		
	<target name="compile.pricemgr">
		<mkdir dir="${fo.cmm.dir}/zPriceMgr/build" />
		<delete includeemptydirs="true">
			<fileset dir="${fo.cmm.dir}/zPriceMgr/build" includes="**/*"/>
    	</delete>
		<javac
			srcdir="${fo.cmm.dir}/zPriceMgr/src"
			classpathref="classpath.pricemgr"
			destdir="${fo.cmm.dir}/zPriceMgr/build"
			failonerror="on" 
			debug="on"
			encoding="utf-8"
			fork="true" 
			includeantruntime="false" />
			
		<copy todir="${fo.cmm.dir}/zPriceMgr/build">
			<fileset dir="${fo.cmm.dir}/zPriceMgr/src">
				<exclude name="**/*.java" />
				<exclude name="**/.svn/**" />
		    </fileset>
		</copy>
	</target>
	
	<target name="jar.pricemgr">
		<mkdir dir="${fo.cmm.dir}/zPriceMgr/dist" />
		<delete includeemptydirs="true">
			<fileset dir="${fo.cmm.dir}/zPriceMgr/dist" includes="**/*"/>
    	</delete>
		<jar encoding="UTF-8" destfile="${fo.cmm.dir}/zPriceMgr/dist/commons-pricemgr.jar">
			<fileset dir="${fo.cmm.dir}/zPriceMgr/build">
				<exclude name="**/.svn/**" />
			</fileset>
		</jar>
	</target>	
	
	<!-- **************************************************************** -->
	<!-- COMPILE fo -->
	<!-- **************************************************************** -->	
	<path id="classpath">
		<fileset dir="${java.dir}/jre/lib">
			<include name="rt.jar" />
		</fileset>
		<fileset dir="${fo.cmm.dir}/zCommon/reference">
			<include name="*.jar" />
		</fileset>		
		<fileset dir="${fo.cmm.dir}/zCommon/common_lib">
			<include name="*.jar" />
			<exclude name="commons-pionnet.jar" />
			<exclude name="commons-interfaces.jar" />
			<exclude name="commons-pricemgr.jar" />
		</fileset>	
		<fileset dir="${fo.cmm.dir}/zPDK/dist">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${fo.cmm.dir}/zInterfaces/dist">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${fo.cmm.dir}/zPriceMgr/dist">
			<include name="*.jar" />
		</fileset>			
		<fileset dir="${fo.src.dir}/APP-INF/lib">
			<include name="*.jar" />
			<exclude name="commons-pionnet.jar" />
			<exclude name="commons-interfaces.jar" />
			<exclude name="commons-pricemgr.jar" />
		</fileset>
	</path>	
	
	<target name="compile">
		<mkdir dir="${fo.src.class.dir}" />
		<delete includeemptydirs="true">
			<fileset dir="${fo.src.class.dir}" includes="**/*"/>
    	</delete>
		<javac srcdir="${fo.src.java.dir}" destdir="${fo.src.class.dir}"
			classpathref="classpath"
 			failonerror="on" debug="on"	encoding="utf-8" fork="true" 
			memoryMaximumSize="256m" includeantruntime="false" />
	</target>
	
	
	<!-- **************************************************************** -->
	<!-- PACKAGING -->
	<!-- **************************************************************** -->
	<target name="package">
		<antcall target="framework_pack" />
		<!-- <antcall target="tar.web" /> -->
		<antcall target="tar.was" />	
	</target>
	
		<target name="framework_pack">
			<copy todir="${fo.src.dir}/APP-INF/lib">
				<fileset dir="${fo.pkg.dir}/${lotteframework2010.dir}/zCommon/common_lib">
					<exclude name="commons-pionnet.jar" />
					<exclude name="commons-interfaces.jar" />
					<exclude name="commons-pricemgr.jar" />
					<exclude name="ZipIt.jar" />
					<exclude name="**/*.java" />
					<exclude name="**/.svn/**" />
					<include name="*.jar" />
			    </fileset>
			</copy>
			<copy todir="${fo.src.dir}/APP-INF/lib">
				<fileset dir="${fo.pkg.dir}/${lotteframework2010.dir}/zPDK/dist">
					<exclude name="**/*.java" />
					<exclude name="**/.svn/**" />
			    </fileset>
			</copy>
			<copy todir="${fo.src.dir}/APP-INF/lib">
				<fileset dir="${fo.pkg.dir}/${lotteframework2010.dir}/zInterfaces/dist">
					<exclude name="**/*.java" />
					<exclude name="**/.svn/**" />
			    </fileset>
			</copy>
			<copy todir="${fo.src.dir}/APP-INF/lib">
				<fileset dir="${fo.pkg.dir}/${lotteframework2010.dir}/zPriceMgr/dist">
					<exclude name="**/*.java" />
					<exclude name="**/.svn/**" />
			    </fileset>
			</copy>
		</target>
		<target name="tar.web">
			<delete file="${fo.pkg.dir}/${tar.name}_WEB.tar" />
			<tar destfile="${fo.pkg.dir}/${tar.name}_WEB.tar" longfile="gnu">
				<tarfileset dir="${wrkspc}/${lotte2010.dir}">
					<include name="/webroot/**"/>
					<exclude name="**/.svn/**"/>
				</tarfileset>
			</tar>
		</target>
		
		<target name="tar.was">
			<delete file="${fo.pkg.dir}/${tar.name}_WAS.tar" />
			<tar destfile="${fo.pkg.dir}/${tar.name}_WAS.tar" longfile="gnu">
				<tarfileset dir="${wrkspc}/${lotte2010.dir}">
					<include name="/APP-INF/**"/>
					<include name="/webapp/**"/>
					<exclude name="**/.svn/**"/>
				</tarfileset>			
			</tar>
		</target>		
		
	<!--	****************************************************************	-->
	<!-- 					PACKAGING ONLY CLASS FOR JDK1.7						-->
	<!-- 				수정자 및 수정 일시 : 이진영 / 2017.11.30					-->
	<!--	****************************************************************	-->
	<target name="package.NAS">
			<antcall target="framework_pack" />
			<delete file="${fo.pkg.dir}/${tar.name.17}.tar" />
			<tar destfile="${fo.pkg.dir}/${tar.name.17}.tar" longfile="gnu">
				<tarfileset dir="${wrkspc}/${lotte2010.dir}/APP-INF">
					<include name="/classes/**"/>
					<exclude name="/conf/**"/>
					<exclude name="/lib/**"/>
				</tarfileset>			
			</tar>
		</target>
	
	<target name="package.PDK">
			<delete file="${fo.pkg.dir}/${tar.name.pdk}.tar" />
			<tar destfile="${fo.pkg.dir}/${tar.name.pdk}.tar" longfile="gnu">
				<tarfileset dir="${fo.cmm.dir}/zPDK/dist/">
					<include name="commons-pionnet.jar" />
					<exclude name="**/.svn/**" />
				</tarfileset>			
			</tar>
		</target>
			
	
	<!-- **************************************************************** -->
	<!-- DEPLOY -->
	<!-- **************************************************************** -->	
	<target name="deploy.server">
		<antcall target="clean.server"/>
		<antcall target="send.was"/>
		<!-- <antcall target="send.web"/> -->
		<antcall target="copy.was.server"/>
		<!-- <antcall target="copy.web.server"/> -->
		<!-- <antcall target="chmod.was"/> -->
		<!-- <antcall target="chmod.web"/> -->
	</target>


	
	<!-- ================================================== -->
	<!-- INIT --> 
	<!-- ================================================== -->
	<target name="clean.server">
		<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}" 
			trust="true" verbose="false" output="${was.work.log}"
			command="cd deploy/lotte2017;./${init.cmd}" />
		<condition property="isSuccess">
			<resourcecontains resource="${was.work.log}" substring="BUILD SUCCESSFUL" casesensitive="true" />
		</condition>
		<antcall target="check_remote_work" />	
	</target>
	
	
	
	<!-- ================================================== -->
	<!-- SEND --> 
	<!-- ================================================== -->
	<target name="send.web">
		<scp todir="${user.id}:${user.pwd}@${web.ip}:${docroot}" trust="true">
			<fileset dir="${fo.pkg.dir}">
				<include name="${tar.name}_WEB.tar"></include>
			</fileset>
		</scp>
	</target>
	
	<target name="send.was">
		<scp todir="${user.id}:${user.pwd}@${was.ip}:${docroot}" trust="true">
			<fileset dir="${fo.pkg.dir}">
				<include name="${tar.name}_WAS.tar"></include>
			</fileset>
		</scp>
	</target>

		
	<!-- ****************************************************************	-->
	<!-- 		DEPLOY-NAS 수정자 및 수정일시 : 이진영 / 2017.11.30 			-->
	<!-- ****************************************************************	-->
	
	<target name="deploy.NAS">
		<antcall target="clean.NAS"/>
		<antcall target="send.NAS"/>
	</target>
	
	<target name="clean.NAS">
		<sshexec host="${host.ip}" username="${user.id}" password="${user.pwd}" 
			trust="true" verbose="false"
			command="\rm /ncontents/${project.dir}/${project}/${tar.name.17}.tar" />
	</target>
	
	<target name="send.NAS">
		<scp todir="${user.id}:${user.pwd}@${host.ip}:/ncontents/${project.dir}/${project}/" trust="true">
			<fileset dir="${fo.pkg.dir}">
				<include name="**/${tar.name.17}.tar"></include>
				<include name="**/${tar.name.pdk}.tar"></include>
				<exclude name="**/.svn/**"></exclude>
				<exclude name="**/*.log"></exclude>
				<exclude name="lotte2010/**/*"></exclude>
				<exclude name="lotteframework2010/**/*"></exclude>
			</fileset>
		</scp>
	</target>	
				
	<!-- ================================================== -->
	<!-- COPY	 --> 
	<!-- ================================================== -->	
	<target name="copy.web.server">
		<sshexec host="${web.ip}" username="${user.id}" password="${user.pwd}" 
			trust="true" verbose="false" output="${was.work.log}"
			command="cd deploy/lotte2017;./${deploy.cmd}" />
		<condition property="isSuccess">
			<resourcecontains resource="${was.work.log}" substring="BUILD SUCCESSFUL" casesensitive="true" />
		</condition>
		<antcall target="check_remote_work" />		
	</target>	
	
	<target name="copy.was.server">
			<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}" 
				trust="true" verbose="false" output="${was.work.log}"
				command="cd deploy/lotte2017;./${deploy.cmd}" />
			<condition property="isSuccess">
				<resourcecontains resource="${was.work.log}" substring="BUILD SUCCESSFUL" casesensitive="true" />
			</condition>
			<antcall target="check_remote_work" />		
		</target>	
	
	<target name="check_remote_work" unless="isSuccess">
		<fail message="원격지 작업이 실패하였습니다..." />
	</target>	
	
	<target name="chmod.was">
			<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}" 
				trust="true" verbose="false" output="${was.work.log}"
				command="chmod -R 775 /h2010/fo_tomacat/webapp/ /h2010/fo_tomact/APP-INF/" />
	</target>
	<target name="chmod.web">
				<sshexec host="${web.ip}" username="${user.id}" password="${user.pwd}" 
					trust="true" verbose="false" output="${was.work.log}"
					command="chmod -R 775 /h2010/fo_tomcat/webroot/" />
		
	</target>	
	
	<!-- **************************************************************** -->
	<!-- restart jeus -->
	<!-- **************************************************************** -->	
	<target name="restart_tomcat">
			<antcall target="shutdown_tomcat"/>
			<antcall target="was_status_check"/>
			<antcall target="start_tomcat"/>
			<antcall target="was_status_check"/>
			<!-- <antcall target="copy.web.server"/> -->
			<!-- <antcall target="chmod.was"/> -->
			<!-- <antcall target="chmod.web"/> -->
		</target>
	
	<target name="restart"> <!-- test server only -->
		<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}" 
			trust="true" verbose="false" output="${was.work.log}"
			command="ja downcon ${con.name1};ja startcon ${con.name1};" />
		<condition property="isSuccess">
			<resourcecontains resource="${was.work.log}" substring="Succeeded to start" casesensitive="true" />
		</condition>
		<antcall target="check_remote_work" />			
	</target>
	
		<!-- *************************************************************** -->
		<!-- ******************** RESTART APACHE-TOMCAT ******************** -->
		<!-- *************************************************************** -->
	
	<target name="shutdown_tomcat"> 
		<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}" 
			trust="true" verbose="false" output="${was.work.log}"
			command="/usr2/apache-tomcat/instance/fo11/bin/shutdown.sh" />
	</target>
	
	<target name="start_tomcat"> 
			<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}" 
				trust="true" verbose="false" output="${was.work.log}"
				command="/usr2/apache-tomcat/instance/fo11/bin/start.sh" />
		</target>
	
	<target name="was_status_check"> 
				<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}" 
					trust="true" verbose="false" output="${was.work.log}"
					command="${tomcat.check}" />
			</target>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<project name="lotte_mpo" basedir=".">
	<!-- ================================================== -->
	<!-- properties -->
	<!-- ================================================== -->
	<property name="srv" value="${TARGET_SERVER}"/>
	
	<property file="build_lotte_mpo_${srv}.properties" />
		
	<property name="java.dir" value="C:/Program Files (x86)/Java/jdk1.6.0_25"/>
	<property name="jeus.dir" value="C:/TmaxSoft/JEUS6.0/lib"/>
	
	<property name="project"       value="mpo"/>
	<property name="project.dir"       value="lotte2017"/>
	<property name="branches.dir"          value="branches/PROJECT/${project.dir}"/>
	<property name="lotte2010.dir"          value="lotte2010/${branches.dir}/${project}"/>
	<property name="lotteframework2010.dir" value="lotteframework2010/${branches.dir}"/>
	<property name="mpo.src.dir"       value="${wrkspc}/${lotte2010.dir}"/>
	<property name="mpo.src.java.dir"  value="${mpo.src.dir}/src"/>
	<property name="mpo.src.class.dir" value="${mpo.src.dir}/APP-INF/classes"/>
	<property name="mpo.cmm.dir"       value="${wrkspc}/${lotteframework2010.dir}"/>	
	<property name="mpo.pkg.dir"       value="${wrkspc}"/>
	
	<property name="tar.name" value="${project}_${project.dir}_PROJECT"/>
	<property name="web.work.log" value="${wrkspc}/deploy_web.log"/>
	<property name="was.work.log" value="${wrkspc}/deploy_was.log"/>
	
	<!-- server info -->
	<property name="user.id"  value="jeus"/>
	<!-- <property name="user.pwd" value="w&uch6raDa*r"/> -->
	
	<!-- document root -->
	<property name="docroot"  value="/h2010/mpo_tomcat"/>
	<property name="init.cmd"  value="${project.dir}${project}init ${tar.name}"/>
	<property name="deploy.cmd"  value="${project.dir}${project}deploy ${tar.name}"/>
	
	
	<!-- **************************************************************** -->
	<!-- BUILD -->
	<!-- **************************************************************** -->
	<target name="build">
		<antcall target="compile.pdk" />
		<antcall target="jar.pdk" />
		
		<antcall target="compile.if" />
		<antcall target="jar.if" />
		
		<antcall target="compile.pricemgr" />
		<antcall target="jar.pricemgr" />
		
		<antcall target="compile" />
	</target>	
	
	<!-- **************************************************************** -->
	<!-- COMPILE zPDK -->
	<!-- **************************************************************** -->
	<path id="classpath.pdk">
		<fileset dir="${java.dir}/lib">
			<include name="rt.jar" />
		</fileset>		
		<fileset dir="${jeus.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${mpo.cmm.dir}/zCommon/reference">
			<include name="*.jar" />
		</fileset>		
		<fileset dir="${mpo.cmm.dir}/zCommon/common_lib">
			<include name="*.jar" />
			<exclude name="commons-pionnet.jar" />
			<exclude name="commons-interfaces.jar" />
			<exclude name="commons-pricemgr.jar" />
			<exclude name="ZipIt.jar" />
		</fileset>	
	</path>
			
	<target name="compile.pdk">
		<mkdir dir="${mpo.cmm.dir}/zPDK/build" />
		<delete includeemptydirs="true">
			<fileset dir="${mpo.cmm.dir}/zPDK/build" includes="**/*"/>
    	</delete>
		<javac srcdir="${mpo.cmm.dir}/zPDK/src" destdir="${mpo.cmm.dir}/zPDK/build"
			classpathref="classpath.pdk"
			failonerror="on" debug="on"	encoding="utf-8"
			fork="true" includeantruntime="false" />
		<copy todir="${mpo.cmm.dir}/zPDK/build">
			<fileset dir="${mpo.cmm.dir}/zPDK/src">
				<exclude name="**/*.java" />
				<exclude name="**/.svn/**" />
		    </fileset>
		</copy>
	</target>
	
	<target name="jar.pdk">
		<mkdir dir="${mpo.cmm.dir}/zPDK/dist" />
		<delete includeemptydirs="true">
			<fileset dir="${mpo.cmm.dir}/zPDK/dist" includes="**/*"/>
    	</delete>
		<jar encoding="UTF-8" destfile="${mpo.cmm.dir}/zPDK/dist/commons-pionnet.jar">
			<fileset dir="${mpo.cmm.dir}/zPDK/build">
				<exclude name="**/.svn/**" />
			</fileset>
		</jar>
	</target>
	
	<!-- **************************************************************** -->
	<!-- COMPILE zInterface -->
	<!-- **************************************************************** -->			
	<path id="classpath.ifapp">
		<fileset dir="${java.dir}/jre/lib">
			<include name="rt.jar" />
		</fileset>
		<fileset dir="${mpo.cmm.dir}/zCommon/common_lib">
			<include name="*.jar" />
			<exclude name="commons-pionnet.jar" />
			<exclude name="commons-interfaces.jar" />
			<exclude name="commons-pricemgr.jar" />
			<exclude name="ZipIt.jar" />			
		</fileset>
		<fileset dir="${mpo.cmm.dir}/zPDK/dist">
			<include name="commons-pionnet.jar"/>
		</fileset>
	</path>
	
	<path id="classpath.if">
		<fileset dir="${java.dir}/jre/lib">
			<include name="rt.jar" />
		</fileset>
		<fileset dir="${mpo.cmm.dir}/zCommon/common_lib">
			<include name="*.jar" />
			<exclude name="commons-pionnet.jar" />
			<exclude name="commons-interfaces.jar" />
			<exclude name="commons-pricemgr.jar" />
			<exclude name="ZipIt.jar" />
		</fileset>		
		<fileset dir="${mpo.cmm.dir}/zPDK/dist">
			<include name="commons-pionnet.jar"/>
		</fileset>		
		<fileset dir="${mpo.cmm.dir}/zInterfaces/lib">
			<include name="*.jar" />
			<exclude name="commons-pionnet.jar"/>
			<exclude name="ibatis-2.3.4.726.jar"/>
			<exclude name="mcash.jar"/>
			<exclude name="mgcs.jar"/>
		</fileset>

		<dirset dir="${mpo.cmm.dir}/zInterfaces/build_app" />
	</path>
				
	<target name="compile.if">
		<mkdir dir="${mpo.cmm.dir}/zInterfaces/build_app" />
		<delete includeemptydirs="true">
			<fileset dir="${mpo.cmm.dir}/zInterfaces/build_app" includes="**/*"/>
    	</delete>
		<javac 
			classpathref="classpath.ifapp"
			srcdir="${mpo.cmm.dir}/zInterfaces/src_app"
			destdir="${mpo.cmm.dir}/zInterfaces/build_app"
			includes="com/mall/**"
			failonerror="on" 
			debug="on"
			encoding="utf-8"
			fork="true" 
			includeantruntime="false" />
			
		<mkdir dir="${mpo.cmm.dir}/zInterfaces/build" />
		<delete includeemptydirs="true">
			<fileset dir="${mpo.cmm.dir}/zInterfaces/build" includes="**/*"/>
    	</delete>
		<javac 
			srcdir="${mpo.cmm.dir}/zInterfaces/src"
			classpathref="classpath.if"
			destdir="${mpo.cmm.dir}/zInterfaces/build"
			failonerror="on" 
			debug="on"
			encoding="utf-8"
			fork="true" 
			includeantruntime="false" />
			
		<copy todir="${mpo.cmm.dir}/zInterfaces/build">
			<fileset dir="${mpo.cmm.dir}/zInterfaces/src">
				<exclude name="**/*.java" />
				<exclude name="**/.svn/**" />
		    </fileset>
		</copy>
	</target>
	
	<target name="jar.if">
		<mkdir dir="${mpo.cmm.dir}/zInterfaces/dist" />
		<delete includeemptydirs="true">
			<fileset dir="${mpo.cmm.dir}/zInterfaces/dist" includes="**/*"/>
    	</delete>
		<jar encoding="UTF-8" destfile="${mpo.cmm.dir}/zInterfaces/dist/commons-interfaces.jar">
			<fileset dir="${mpo.cmm.dir}/zInterfaces/build">
				<exclude name="**/.svn/**" />
			</fileset>
		</jar>		
	</target>
		
	<!-- **************************************************************** -->
	<!-- COMPILE zPriceMgr -->
	<!-- **************************************************************** -->
	<path id="classpath.pricemgr">
		<fileset dir="${java.dir}/jre/lib">
			<include name="rt.jar" />
		</fileset>
		<fileset dir="${mpo.cmm.dir}/zCommon/common_lib">
			<include name="*.jar" />
			<exclude name="commons-pionnet.jar"/>
			<exclude name="commons-interfaces.jar" />
			<exclude name="commons-pricemgr.jar" />
			<exclude name="ZipIt.jar" />
		</fileset>			
		<fileset dir="${mpo.cmm.dir}/zPDK/dist">
			<include name="commons-pionnet.jar"/>
		</fileset>
	</path>	
		
	<target name="compile.pricemgr">
		<mkdir dir="${mpo.cmm.dir}/zPriceMgr/build" />
		<delete includeemptydirs="true">
			<fileset dir="${mpo.cmm.dir}/zPriceMgr/build" includes="**/*"/>
    	</delete>
		<javac
			srcdir="${mpo.cmm.dir}/zPriceMgr/src"
			classpathref="classpath.pricemgr"
			destdir="${mpo.cmm.dir}/zPriceMgr/build"
			failonerror="on" 
			debug="on"
			encoding="utf-8"
			fork="true" 
			includeantruntime="false" />
			
		<copy todir="${mpo.cmm.dir}/zPriceMgr/build">
			<fileset dir="${mpo.cmm.dir}/zPriceMgr/src">
				<exclude name="**/*.java" />
				<exclude name="**/.svn/**" />
		    </fileset>
		</copy>
	</target>
	
	<target name="jar.pricemgr">
		<mkdir dir="${mpo.cmm.dir}/zPriceMgr/dist" />
		<delete includeemptydirs="true">
			<fileset dir="${mpo.cmm.dir}/zPriceMgr/dist" includes="**/*"/>
    	</delete>
		<jar encoding="UTF-8" destfile="${mpo.cmm.dir}/zPriceMgr/dist/commons-pricemgr.jar">
			<fileset dir="${mpo.cmm.dir}/zPriceMgr/build">
				<exclude name="**/.svn/**" />
			</fileset>
		</jar>
	</target>	
	
	<!-- **************************************************************** -->
	<!-- COMPILE mpo -->
	<!-- **************************************************************** -->	
	<path id="classpath">
		<fileset dir="${java.dir}/jre/lib">
			<include name="rt.jar" />
		</fileset>
		<fileset dir="${mpo.cmm.dir}/zCommon/reference">
			<include name="*.jar" />
		</fileset>		
		<fileset dir="${mpo.cmm.dir}/zCommon/common_lib">
			<include name="*.jar" />
			<exclude name="commons-pionnet.jar" />
			<exclude name="commons-interfaces.jar" />
			<exclude name="commons-pricemgr.jar" />
		</fileset>	
		<fileset dir="${mpo.cmm.dir}/zPDK/dist">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${mpo.cmm.dir}/zInterfaces/dist">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${mpo.cmm.dir}/zPriceMgr/dist">
			<include name="*.jar" />
		</fileset>			
		<fileset dir="${mpo.src.dir}/APP-INF/lib">
			<include name="*.jar" />
			<exclude name="commons-pionnet.jar" />
			<exclude name="commons-interfaces.jar" />
			<exclude name="commons-pricemgr.jar" />
		</fileset>
	</path>	
	
	<target name="compile">
		<mkdir dir="${mpo.src.class.dir}" />
		<delete includeemptydirs="true">
			<fileset dir="${mpo.src.class.dir}" includes="**/*"/>
    	</delete>
		<javac srcdir="${mpo.src.java.dir}" destdir="${mpo.src.class.dir}"
			classpathref="classpath"			
			failonerror="on" debug="on"	encoding="utf-8" fork="true" 
			memoryMaximumSize="512m" includeantruntime="false" />
	</target>
	
	
	<!-- **************************************************************** -->
	<!-- PACKAGING -->
	<!-- **************************************************************** -->
	<target name="package">
		<antcall target="framework_pack" />
		<!-- <antcall target="tar.web" /> -->
		<antcall target="tar.was" />
	</target>
	<target name="framework_pack">
		<copy todir="${mpo.src.dir}/APP-INF/lib">
			<fileset dir="${mpo.pkg.dir}/${lotteframework2010.dir}/zCommon/common_lib">
				<exclude name="commons-pionnet.jar" />
				<exclude name="commons-interfaces.jar" />
				<exclude name="commons-pricemgr.jar" />
				<exclude name="ZipIt.jar" />
				<exclude name="**/*.java" />
				<exclude name="**/.svn/**" />
		    </fileset>
		</copy>
		<copy todir="${mpo.src.dir}/APP-INF/lib">
			<fileset dir="${mpo.pkg.dir}/${lotteframework2010.dir}/zPDK/dist">
				<exclude name="**/*.java" />
				<exclude name="**/.svn/**" />
		    </fileset>
		</copy>
		<copy todir="${mpo.src.dir}/APP-INF/lib">
			<fileset dir="${mpo.pkg.dir}/${lotteframework2010.dir}/zInterfaces/dist">
				<exclude name="**/*.java" />
				<exclude name="**/.svn/**" />
		    </fileset>
		</copy>
		<copy todir="${mpo.src.dir}/APP-INF/lib">
			<fileset dir="${mpo.pkg.dir}/${lotteframework2010.dir}/zPriceMgr/dist">
				<exclude name="**/*.java" />
				<exclude name="**/.svn/**" />
		    </fileset>
		</copy>
	</target>
	<target name="tar.web">
		<delete file="${mpo.pkg.dir}/${tar.name}_WEB.tar" />
		<tar destfile="${mpo.pkg.dir}/${tar.name}_WEB.tar" longfile="gnu">
			<tarfileset dir="${wrkspc}/${lotte2010.dir}">
				<include name="/webroot/**"/>
				<exclude name="**/.svn/**"/>
			</tarfileset>
		</tar>
	</target>
	
	<target name="tar.was">
		<delete file="${mpo.pkg.dir}/${tar.name}_WAS.tar" />
		<tar destfile="${mpo.pkg.dir}/${tar.name}_WAS.tar" longfile="gnu">
			<tarfileset dir="${wrkspc}/${lotte2010.dir}">
				<include name="/APP-INF/**"/>
				<include name="/webapp/**"/>
				<exclude name="**/.svn/**"/>
			</tarfileset>			
		</tar>
	</target>
	
	
	<!-- **************************************************************** -->
	<!-- DEPLOY -->
	<!-- **************************************************************** -->	
	
	<target name="deploy.web">
		<antcall target="clean.web"/>
		<antcall target="send.web"/>
		<antcall target="copy.web"/>
	</target>
	
	<target name="deploy.was">
		<antcall target="clean.was"/>
		<antcall target="send.was"/>
		<antcall target="copy.was"/>
	</target>

	<!-- ================================================== -->
	<!-- INIT --> 
	<!-- ================================================== -->
	<target name="clean.web">
		<sshexec host="${web.ip}" username="${user.id}" password="${user.pwd}"
			trust="true" verbose="false" output="${web.work.log}"
			command="cd deploy/lotte2017;./${init.cmd}" />
		<condition property="isSuccess">
			<resourcecontains resource="${web.work.log}" substring="BUILD SUCCESSFUL" casesensitive="true" />
		</condition>
		<antcall target="check_remote_work" />		
	</target>
	
	<target name="clean.was">
		<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}" 
			trust="true" verbose="false" output="${was.work.log}"
			command="cd deploy/lotte2017;./${init.cmd}" />
		<condition property="isSuccess">
			<resourcecontains resource="${was.work.log}" substring="BUILD SUCCESSFUL" casesensitive="true" />
		</condition>
		<antcall target="check_remote_work" />	
	</target>
	
	<!-- ================================================== -->
	<!-- SEND --> 
	<!-- ================================================== -->
	<target name="send.web">
		<scp todir="${user.id}:${user.pwd}@${web.ip}:${docroot}" trust="true">
			<fileset dir="${mpo.pkg.dir}">
				<include name="${tar.name}_WEB.tar"></include>
			</fileset>
		</scp>
	</target>
	
	<target name="send.was">
		<scp todir="${user.id}:${user.pwd}@${was.ip}:${docroot}" trust="true">
			<fileset dir="${mpo.pkg.dir}">
				<include name="${tar.name}_WAS.tar"></include>
			</fileset>
		</scp>
	</target>
	
	<!-- ================================================== -->
	<!-- COPY	 --> 
	<!-- ================================================== -->	
	<target name="copy.web">
		<sshexec host="${web.ip}" username="${user.id}" password="${user.pwd}"
			trust="true" verbose="false" output="${web.work.log}"
			command="cd deploy/lotte2017;./${init.cmd}" />
		<condition property="isSuccess">
			<resourcecontains resource="${web.work.log}" substring="BUILD SUCCESSFUL" casesensitive="true" />
		</condition>
		<antcall target="check_remote_work" />	
	</target>
	
	<target name="copy.was">
		<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}" 
			trust="true" verbose="false" output="${was.work.log}"
			command="cd deploy/lotte2017;./${deploy.cmd}" />
		<condition property="isSuccess">
			<resourcecontains resource="${was.work.log}" substring="BUILD SUCCESSFUL" casesensitive="true" />
		</condition>
		<antcall target="check_remote_work" />		
	</target>	
	
	<target name="check_remote_work" unless="isSuccess">
		<fail message="원격지 작업이 실패하였습니다..." />
	</target>	
	
	
	<!-- **************************************************************** -->
	<!-- restart jeus -->
	<!-- **************************************************************** -->	
	<target name="restart_tomcat">
			<antcall target="shutdown_tomcat"/>
			<antcall target="was_status_check"/>
			<antcall target="start_tomcat"/>
			<antcall target="was_status_check"/>
	</target>
	
	<target name="restart"> <!-- test server only -->
		<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}" 
			trust="true" verbose="false" output="${was.work.log}"
			command="ja downcon ${con.name1};ja startcon ${con.name1}" />
		<condition property="isSuccess">
			<resourcecontains resource="${was.work.log}" substring="Succeeded to start" casesensitive="true" />
		</condition>
		<antcall target="check_remote_work" />			
	</target>

	<target name="restart_linux"> <!-- test server only -->
		<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}" 
			trust="true" verbose="false" output="${was.work.log}"
			command="/usr2/jeus6/bin/jeusadmin `hostname` -Uadministrator -Pjeusadmin downcon ${con.name1};/usr2/jeus6/bin/jeusadmin `hostname` -Uadministrator -Pjeusadmin startcon ${con.name1};" />
		<condition property="isSuccess">
			<resourcecontains resource="${was.work.log}" substring="Succeeded to start" casesensitive="true" />
		</condition>
		<antcall target="check_remote_work" />			
	</target>	
	
	<!-- *************************************************************** -->
	<!-- ******************** RESTART APACHE-TOMCAT ******************** -->
	<!-- *************************************************************** -->

		<target name="shutdown_tomcat"> 
			<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}" 
				trust="true" verbose="false" output="${was.work.log}"
				command="/usr2/apache-tomcat/instance/mpo11/bin/shutdown.sh" />
		</target>
		
		<target name="start_tomcat"> 
			<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}" 
				trust="true" verbose="false" output="${was.work.log}"
				command="/usr2/apache-tomcat/instance/mpo11/bin/start.sh" />
		</target>
		
		<target name="was_status_check"> 
			<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}" 
				trust="true" verbose="false" output="${was.work.log}"
				command="${tomcat.check}" />
		</target>
	
</project>
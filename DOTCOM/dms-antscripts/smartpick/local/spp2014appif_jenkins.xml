<?xml version="1.0" encoding="UTF-8"?>
<project name="spp2014appif_jenkins">
    <!-- **************************************************************** -->
	<!-- PROPERTY -->
	<!-- **************************************************************** -->
	<echo>PROPERTY FILE : ${ant.project.name}.${DEPLOY_PHASE}.properties</echo>
	<!-- system path -->
	<property name="java.home.dir"     value="C:/Program Files (x86)/Java/jdk1.7.0_45" />
	<property name="jeus.home.dir"     value="C:/TmaxSoft/JEUS6.0" />
	<property name="hudson.home.dir"   value="E:/jenkins-smartpick" />
	<property name="deployer.home.dir" value="D:/deployer" />
	<!-- parameters -->
	<property name="deploy.id"         value="${DEPLOY_ID}"/>
	<property name="comm.deploy.id"    value="${COMM_DEPLOY_ID}"/>
	<property name="deploy.phase"      value="${DEPLOY_PHASE}"/>
	<property name="was.ip"            value="${WAS_IP}"/>
	<property name="nas.dir"           value="${NAS_DIR}"/>
	<!-- properties -->
	<property file="./${ant.project.name}.${deploy.phase}.properties"/>
	<!-- commons path -->
	<!-- E:/jenkins-smartpick//jobs/SPP2014APP_CM_1_TEST_BUILD/workspace -->
	<property name="comm.wrksp.path" value="${hudson.home.dir}/jobs/SPP2014APP_CM_1_TEST_BUILD/workspace" />
	<property name="comm.svn.repos.name" value="${svnReposNm}" />
	<property name="comm.clib.path"  value="spp-app-cm/spp-app-common-lib/LIB-INF/common-lib" />
	<property name="comm.dlib.path"  value="spp-app-cm/spp-app-common-lib/LIB-INF/daemon-lib" />
	<property name="comm.cmm.path"   value="spp-app-cm/spp-app-common-lib/jar" />
	<property name="comm.srv.path"   value="spp-app-cm/spp-app-service-lib/jar" />
	<property name="comm.cm6.jar"    value="spp-app-common-lib.1.6.jar" />
	<property name="comm.cm7.jar"    value="spp-app-common-lib.1.7.jar" />
	<property name="comm.srv.jar"    value="spp-app-service-lib.jar" />
	<!-- etc path and name -->
	<property name="srv.name"       value="server_if" />
	<!-- E:/jenkins-smartpick/jobs/SPP2014APP_IF_1_TEST_BUILD/workspace/spp2014/pack/REAL/IF_20160527_1400/server_if -->
	<property name="pack.real.path" value="${hdsnWrkSpPath}/${svnReposNm}/${hdsnPackPath}/${deploy.id}/${srv.name}" />
	<property name="main.path"      value="spp-app-if/jar" />
	<property name="main.jar"       value="com.lotte.spp.platform.if.jar" />
	<property name="main.class"     value="com.lotte.spp.platform.server.CouponCommIFServer" />
	<!-- 시험배포 자동화 용 -->
	<tstamp><format property="deploy.date" pattern="yyyyMMdd"/></tstamp>
	<property name="rglr.dep.id" value="IF_${deploy.date}_${rglrDepHhmm}"/>
	<!-- 첫 접수시 0건이면, 다음 접수시 지각한 건 접수하지 않도록 하기위함 -->
	<property name="lock.workspace" value="${hdsnLockWrkSpPath}" />
	<!-- log files -->
	<property name="init.build.log" value="../logs/${ant.project.name}/${deploy.id}_BUILD.log" />
	<property name="init.was.log"   value="../logs/${ant.project.name}/${deploy.id}_INIT_WAS.log" />
	<property name="dep.was.log"    value="../logs/${ant.project.name}/${deploy.id}_DEP_WAS.log" />
	<!-- command -->
	<property name="init.cmd"  value="sppinit" />
	<property name="dep.cmd"   value="sppdeploy" />
	<property name="start.cmd" value="spp.server.if.start.sh" />
	<property name="stop.cmd"  value="spp.server.if.stop.sh" />
	
	<!-- **************************************************************** -->
	<!-- CHECK -->
	<!-- **************************************************************** -->
	<target name="check">
		<echo>♠ 공통 배포ID가 있는지 확인합니다. : ${comm.deploy.id}</echo>
		<condition property="existCommon">
			<and>
				<!-- CM_20160527_1400 -->
				<contains string="${comm.deploy.id}" substring="CM_" casesensitive="true" />
				<length string="${comm.deploy.id}" when="greater" length="15"/>
			</and>
		</condition>
		<echo>♠ result : ${existCommon}</echo>
		
		<echo>♠ 배포할 공통 jar가 있는지 확인합니다.</echo>
		<condition property="existLibJar">
			<and>
				<!-- CM_20160527_1400 -->
				<istrue value="${existCommon}"/>
				<resourcecount when="greater" count="0"><!-- 공통폴더 CM_20160713_1400/server_if/lib/*.jar 파일이 있다면 -->
					<!-- E:/jenkins-smartpick//jobs/SPP2014APP_CM_1_TEST_BUILD/workspace/spp2014/pack/REAL -->
					<fileset dir="${comm.wrksp.path}/${comm.svn.repos.name}/${hdsnPackPath}">
						<!-- CM_20160713_1400/server_if/lib/*.jar -->
						<include name="${comm.deploy.id}/${svrLibPath}/*.jar" />
					</fileset>
				</resourcecount>
			</and>
		</condition>
		<echo>♠ result : ${existLibJar}</echo>
		
		<echo>♠ 배포할 인증 jar가 있는지 확인합니다.</echo>
		<condition property="existAtJar">
			<resourcecount when="greater" count="0">
				<fileset dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnPackPath}/${deploy.id}">
					<include name="${svrClassesPath}/**/*" />
					<include name="${svrWebappPath}/*.properties" />
				</fileset>
			</resourcecount>		
		</condition>
		<echo>♠ result : ${existAtJar}</echo>
		
		<echo>♠ 배포할 쉘 스크립트가 있는지 확인합니다.</echo>
		<condition property="existShell">
			<resourcecount when="greater" count="0">
				<!-- E:/jenkins-smartpick/jobs/SPP2014APP_IF_1_TEST_BUILD/workspace/spp2014/pack/REAL/IF_20160712_1400 -->
				<fileset dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnPackPath}/${deploy.id}">
					<!-- server_if/deploy/real/*.sh -->
					<include name="${svrWebappPath}/*.sh" />
				</fileset>
			</resourcecount>		
		</condition>		
		<echo>♠ result : ${existShell}</echo>
	</target>
	
	<target name="check_remote_work" unless="isSuccess">
		<fail message="원격지 작업이 실패하였습니다..." />
	</target>
	
	<target name="check_lock_prop">
		<condition property="existLockProp">
			<resourceexists>
				<file file="${lock.workspace}/${rglr.dep.id}_lock.properties"/>
			</resourceexists>
		</condition>
		<echo>${rglr.dep.id}_lock.properties / ${existLockProp}</echo>
	</target>

	<!-- **************************************************************** -->
	<!-- ACCEPT, 접수 : 정기배포, 자동접수 시에만 사용 -->
	<!-- **************************************************************** -->
	<target name="accept" depends="check_lock_prop">
		<echo>♠ ACCEPT ${deploy.id}</echo>
		<antcall target="set_prop" />
		<antcall target="exec_app" />
	</target>	
	
	<target name="set_prop" unless="existLockProp">
		<propertyfile file="${lock.workspace}/${rglr.dep.id}_lock.properties">
			<entry key="deploy_count" type="int" value="0" />
			<entry key="first_error" value="false" />
		</propertyfile>
	</target>
		
	<target name="exec_app">
		<property file="${lock.workspace}/${rglr.dep.id}_lock.properties" />
		
		<condition property="isStop">
			<equals arg1="${first_error}" arg2="true" trim="true" />
		</condition>
		<fail if="${isStop}" message="당일 접수한 배포 건이 없습니다." />		
		
		<java jvm="${java.home.dir}/bin/java" fork="yes"
		      failonerror="false"
		      jar="${deployer.home.dir}/bin/deploy-deployer.jar"
			  errorproperty="error">
			<arg value="${ant.project.name}"/>
			<arg value="${rglr.dep.id}"/>
			<arg value="${deploy.phase}"/>
			<arg value="accept"/>
		</java>
		
		<condition property="isError">
			<length string="${error}" when="greater" length="0" />
		</condition>
		
		<condition property="isFirstError">
			<and>
				<istrue value="${isError}" />
				<equals arg1="0" arg2="${deploy_count}" trim="true" />
			</and>
		</condition>
		
		<propertyfile file="${lock.workspace}/${rglr.dep.id}_lock.properties">
			<entry key="deploy_count" default="0" type="int" operation="+" />
			<entry key="first_error" value="${isFirstError}" />
		</propertyfile>
		
		<fail if="${isError}" message="." />
		
		<record name="${ant.project.name}_param.properties" emacsmode="true" action="start" />
		<echo>DEPLOY_ID=${rglr.dep.id}</echo>
		<record name="${ant.project.name}_param.properties" emacsmode="true" action="stop" />
	</target>
	
	<!-- **************************************************************** -->	
	<!-- MERGE & BUILD & PACK -->
	<!-- **************************************************************** -->	
	<target name="run_build">
		<echo>♠ BUILD ${deploy.id}</echo>
		<antcall target="merge" />
		<antcall target="build" />
		<antcall target="pre_pack" />
		<antcall target="pack" />
	</target>	
			
	<!-- **************************************************************** -->	
	<!-- MERGE -->
	<!-- **************************************************************** -->
	<target name="merge">
		<java jvm="${java.home.dir}/bin/java" fork="true"
		      failonerror="true"
		      jar="${deployer.home.dir}/bin/deploy-deployer.jar">
			<arg value="${ant.project.name}"/>
			<arg value="${deploy.id}"/>
			<arg value="${deploy.phase}"/>
			<arg value="merge"/>
		</java> 
	</target>
	
	<!-- **************************************************************** -->
	<!-- COMPILE, JAR -->
	<!-- **************************************************************** -->
	<target name="build">
		<record name="${init.build.log}" action="start"/>
				
		<path id="classpath">
			<fileset dir="${java.home.dir}/jre/lib">
				<include name="rt.jar" />
			</fileset>
			<fileset dir="${comm.wrksp.path}/${comm.svn.repos.name}/${hdsnBranchPath}/${comm.clib.path}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${comm.wrksp.path}/${comm.svn.repos.name}/${hdsnBranchPath}/${comm.dlib.path}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${comm.wrksp.path}/${comm.svn.repos.name}/${hdsnBranchPath}/${comm.cmm.path}">
				<include name="${comm.cm7.jar}" />
			</fileset>
			<fileset dir="${comm.wrksp.path}/${comm.svn.repos.name}/${hdsnBranchPath}/${comm.srv.path}">
				<include name="${comm.srv.jar}" />
			</fileset>
		</path>

		<!-- E:/jenkins-smartpick/jobs/SPP2014APP_IF_1_TEST_BUILD/workspace/spp2014/branches/REAL/spp-app-if/classes -->
		<mkdir dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${srcClassesPath}" />
		<delete includeemptydirs="true">
			<!-- E:/jenkins-smartpick/jobs/SPP2014APP_IF_1_TEST_BUILD/workspace/spp2014/branches/REAL/spp-app-if/classes -->
			<fileset dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${srcClassesPath}" includes="**/*"/>
    	</delete>

		<!-- E:/jenkins-smartpick/jobs/SPP2014APP_IF_1_TEST_BUILD/workspace/spp2014/branches/REAL/spp-app-if/src/main/java -->
		<!-- E:/jenkins-smartpick/jobs/SPP2014APP_IF_1_TEST_BUILD/workspace/spp2014/branches/REAL/spp-app-if/classes -->
		<javac classpathref="classpath" 
			srcdir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${srcJavaPath}"
			destdir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${srcClassesPath}"
			target="1.7"
			failonerror="on" debug="on"
			encoding="utf-8" 
			nowarn="on" 
			deprecation="on"
			includeantruntime="false" />
		

		<!-- E:/jenkins-smartpick/jobs/SPP2014APP_IF_1_TEST_BUILD/workspace/spp2014/branches/REAL/spp-app-if/classes -->
		<copy todir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${srcClassesPath}" overwrite="true">
			<!-- E:/jenkins-smartpick/jobs/SPP2014APP_IF_1_TEST_BUILD/workspace/spp2014/branches/REAL/spp-app-if/src/main/resources -->
			<fileset dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${srcConfPath}"> <!-- resources -->
				<include name="**/*"/>
				<exclude name="**/.svn/**"/>
		    </fileset>
		</copy>	
		

		<!-- E:/jenkins-smartpick/jobs/SPP2014APP_IF_1_TEST_BUILD/workspace/spp2014/branches/REAL/spp-app-if/classes -->
		<copy todir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${srcClassesPath}" overwrite="true">
			<!-- E:/jenkins-smartpick/jobs/SPP2014APP_IF_1_TEST_BUILD/workspace/spp2014/branches/REAL/spp-app-if/deploy/test -->
			<fileset dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${srcWebappPath}"> <!-- deploy -->
				<include name="*.properties"/>
		    </fileset>
		</copy>
		    	

		<!-- E:/jenkins-smartpick/jobs/SPP2014APP_IF_1_TEST_BUILD/workspace/spp2014/branches/REAL/spp-app-if/jar -->
		<mkdir dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${main.path}" />
		<delete includeemptydirs="true">
			<!-- E:/jenkins-smartpick/jobs/SPP2014APP_IF_1_TEST_BUILD/workspace/spp2014/branches/REAL/spp-app-if/jar/**/* -->
			<fileset dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${main.path}" includes="**/*"/>
    	</delete>

		<!-- E:/jenkins-smartpick/jobs/SPP2014APP_IF_1_TEST_BUILD/workspace/spp2014/branches/REAL/spp-app-if/jar/com.lotte.spp.platform.if.jar -->
		<jar encoding="UTF-8" destfile="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${main.path}/${main.jar}">
			<!-- E:/jenkins-smartpick/jobs/SPP2014APP_IF_1_TEST_BUILD/workspace/spp2014/branches/REAL/spp-app-if/classes -->
			<fileset dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${srcClassesPath}" />
			<manifest>
				<attribute name="Built-By" value="owner"/>
				<attribute name="Main-Class" value="${main.class}"/>
				<attribute name="Class-Path" value=".
					lib/aopalliance-1.0.jar
					lib/aspectjrt-1.6.8.jar
					lib/aspectjweaver-1.6.8.jar
					lib/barbecue-1.0.6c.jar
					lib/bcprov-jdk16-145.jar
					lib/commons-beanutils-1.8.0.jar
					lib/commons-collections-3.2.jar
					lib/commons-dbcp-1.2.2.jar
					lib/commons-lang-2.2.jar
					lib/commons-logging-1.1.1.jar
					lib/commons-net-1.4.1.jar
					lib/commons-pool-1.5.3.jar
					lib/ibatis-2.3.4.726.jar
					lib/jai_codec.jar
					lib/jai_core.jar
					lib/jdom.jar
					lib/javax.inject-1.jar
					lib/junit-4.9.jar
					lib/log4j-1.2.15.jar
					lib/log4j-1.2.8.jar
					lib/ojdbc5.jar
					lib/poi-3.6-20091214.jar
					lib/servlet-api.jar
					lib/spring-aop-3.1.1.RELEASE.jar
					lib/spring-asm-3.1.1.RELEASE.jar
					lib/spring-beans-3.1.1.RELEASE.jar
					lib/spring-context-3.1.1.RELEASE.jar
					lib/spring-core-3.1.1.RELEASE.jar
					lib/spring-expression-3.1.1.RELEASE.jar
					lib/spring-jdbc-3.1.1.RELEASE.jar
					lib/spring-orm-3.0.6.RELEASE.jar
					lib/spring-test-3.1.1.RELEASE.jar
					lib/spring-tx-3.1.1.RELEASE.jar
					lib/spring-web-3.1.1.RELEASE.jar
					lib/spring-webmvc-3.1.1.RELEASE.jar
					lib/spp-app-common-lib.1.7.jar
					lib/spp-app-service-lib.jar
					lib/commons-codec-1.9.jar
					lib/imageTransfer.jar
					lib/jettison-1.2.jar
				"/>
			</manifest>			
		</jar>
				
		<record name="${init.build.log}" action="stop"/>
	</target>
		
	<!-- **************************************************************** -->
	<!-- PACK -->
	<!-- **************************************************************** -->
	<target name="pre_pack">
		<!-- E:/jenkins-smartpick/jobs/SPP2014APP_IF_1_TEST_BUILD/workspace/spp2014/pack/REAL/IF_20160527_1400/server_if -->
		<delete dir="${pack.real.path}" />
		<mkdir dir="${pack.real.path}" />
		<java jvm="${java.home.dir}/bin/java" fork="true"
		      failonerror="true"
		      jar="${deployer.home.dir}/bin/deploy-deployer.jar">
			<arg value="${ant.project.name}"/>
			<arg value="${deploy.id}"/>
			<arg value="${deploy.phase}"/>
			<arg value="pack"/>
		</java>		
	</target>
	<target name="pack" depends="check">		
		<antcall target="copy_commons" />
		<antcall target="copy_jar" />
		<antcall target="copy_shell" />
	</target>
	
	<target name="copy_commons" if="${existLibJar}">
		<!-- E:/jenkins-smartpick/jobs/SPP2014APP_IF_1_TEST_BUILD/workspace/spp2014/pack/REAL/IF_20160527_1400/server_if/lib -->
		<copy todir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnPackPath}/${deploy.id}/${svrLibPath}" overwrite="true">
			<!-- E:/jenkins-smartpick//jobs/SPP2014APP_CM_1_TEST_BUILD/workspace/pack/REAL/CM_20160527_1400/server_if/lib/*.* -->
			<fileset dir="${comm.wrksp.path}/${comm.svn.repos.name}/${hdsnPackPath}/${comm.deploy.id}/${svrLibPath}">
				<include name="*.*"/>
		    </fileset>
		</copy>
	</target>
	
	<target name="copy_jar" if="${existAtJar}">
		<!-- E:/jenkins-smartpick/jobs/SPP2014APP_IF_1_TEST_BUILD/workspace/spp2014/pack/REAL/IF_20160713_1400/server_if -->
		<copy todir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnPackPath}/${deploy.id}/${srv.name}" overwrite="true">
			<!-- E:/jenkins-smartpick/jobs/SPP2014APP_IF_1_TEST_BUILD/workspace/spp2014/branches/REAL/spp-app-if/jar -->
			<fileset dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${main.path}">
				<!-- com.lotte.spp.platform.if.jar -->
				<include name="${main.jar}"/>
		    </fileset>
		</copy>
	</target>	
	
	<target name="copy_shell" if="${existShell}">
		<!-- E:/jenkins-smartpick//jobs/SPP2014APP_CM_1_TEST_BUILD/workspace/pack/REAL/IF_20160712_1400/server_if -->
		<copy todir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnPackPath}/${deploy.id}/${srv.name}" overwrite="true">


			<!-- ▶▶▶▶▶▶▶▶ 아래 폴더는 없음 ◀◀◀◀◀◀◀◀◀ -->
			<!-- 서버에 안보낼려고 뺀거 같은데? -->
			<!-- 

				  E:/jenkins-smartpick/jobs/SPP2014APP_IF_1_TEST_BUILD/workspace/spp2014/pack/TEST/server_if/deploy/real/*.sh 
            ====> E:/jenkins-smartpick/jobs/SPP2014APP_IF_1_TEST_BUILD/workspace/spp2014/pack/TEST/IF_20160628_1400/server_if/deploy/real/*.sh
				  위의 경로가 아닌가??? pack 할때 만들어지는데 deploy_id 가 있어야할것으로 보임.  



				  E:/jenkins-smartpick/jobs/SPP2014APP_IF_1_TEST_BUILD/workspace/spp2014/pack/REAL/server_if/deploy/real/*.sh 
            ====> E:/jenkins-smartpick/jobs/SPP2014APP_IF_1_TEST_BUILD/workspace/spp2014/pack/REAL/IF_20160628_1400/server_if/deploy/real/*.sh
				  위의 경로가 아닌가??? pack 할때 만들어지는데 deploy_id 가 있어야할것으로 보임.  
			-->

			<!-- E:/jenkins-smartpick//jobs/SPP2014APP_CM_1_TEST_BUILD/workspace/pack/REAL/server_if/deploy/real --><!-- pack 할때 deploy.id 가 없음 -->
			<fileset dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnPackPath}/${svrWebappPath}">
			<!-- <fileset dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnPackPath}/${deploy.id}/${svrWebappPath}"> --><!-- 이것으로 써야하는것이 아닌가? -->
				<include name="*.sh"/>
		    </fileset>
		</copy>
	</target>	
	
	<!-- **************************************************************** -->
	<!-- SEND -->
	<!-- **************************************************************** -->	
	<target name="send_plat">
		<echo>♠ SEND ${deploy.id}</echo>
		<antcall target="init" />
		<antcall target="send_app_src" />
	</target>
	
	<target name="init">
		<tstamp>
			<format property="conn_time" pattern="yyyy-MM-dd HH:mm:ss.SSS"/>
		</tstamp>
		<echo>초기화 작업을 진행합니다... 이 작업은 원격지에 접속하여 수행합니다...</echo>
		<echo>${was.ip} 접속을 시작합니다... [${conn_time}]</echo>
		<record name="${init.was.log}" action="start"/>
		<telnet server="${was.ip}" userid="${svrUserId}" password="${svrUserPassword}">
			<read>/xclass]#</read>
			<write>cd deploy</write>
			<read>/xclass/deploy]#</read>
			<write>./${init.cmd} ${deploy.id}</write>
			<read>/xclass/deploy]#</read>
			<write>exit</write>
		</telnet>
		<record name="${init.was.log}" action="stop"/>
		<tstamp>
			<format property="disconn_time" pattern="yyyy-MM-dd HH:mm:ss.SSS"/>
		</tstamp>
		<echo>${was.ip} 접속을 종료했습니다... [${disconn_time}]</echo>
		<condition property="isSuccess">
			<resourcecontains resource="${init.was.log}" substring="BUILD SUCCESSFUL" casesensitive="true" />
		</condition>
		<antcall target="check_remote_work" />
		<echo>초기화 작업이 완료되었습니다...</echo>
	</target>
		
	<target name="send_app_src">
		<ftp server="${was.ip}" userid="${svrUserId}" password="${svrUserPassword}"
		     remotedir="${nas.dir}/${deploy.id}"
		     action="put" verbose="yes"
			 passive="yes">
			<!-- fileset dir = E:/jenkins-smartpick//jobs/SPP2014APP_CM_1_TEST_BUILD/workspace/pack/REAL/IF_20160712_1400 -->
			<fileset dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnPackPath}/${deploy.id}">
				<!-- server_if/**/*.jar -->
				<include name="${srv.name}/**/*.jar"></include>
				<!-- server_if/**/*.sh -->
				<!-- 운영 서버로 *.sh 파일들을 보내는데 왜 서버의 배포스크립트에서는 jar 파일만 복사하게 되어있는가? -->
				<!--
					## 서버 스크립트 ##
					## spp2014app_if_real.xml ##
					<target name="copy_if" if="isExistIf">
						<copy todir="/lotte/spp_platform/servers/server_if" overwrite="yes" verbose="true">
							<fileset dir="${source.dir}/server_if"
									 includes="**/*.jar"/>
						</copy>
					</target>
				-->
				<include name="${srv.name}/*.sh"></include>
				<exclude name="${svrClassesPath}/**/*"></exclude>
				<exclude name="${svrWebappPath}/**/*"></exclude>
			</fileset>
		</ftp>
	</target>
					
	<!-- **************************************************************** -->
	<!-- BACKUP & DEPLOY -->
	<!-- **************************************************************** -->
	<target name="deploy_plat">
		<echo>♠ DEPLOY ${deploy.id}</echo>
		<antcall target="backup" />
		<antcall target="deploy_app" />
	</target>
	
	<!-- **************************************************************** -->
	<!-- BACKUP -->
	<!-- **************************************************************** -->
	<target name="backup">
		<java jvm="${java.home.dir}/bin/java" fork="true"
		      failonerror="true"
		      jar="${deployer.home.dir}/bin/deploy-deployer.jar">
			<arg value="${ant.project.name}"/>
			<arg value="${deploy.id}"/>
			<arg value="${deploy.phase}"/>
			<arg value="deploy"/>
			<arg value="${was.ip}" />
			<arg value="21" />
			<arg value="${svrUserId}" />
			<arg value="${svrUserPassword}" />
		</java>
	</target>
	
	<!-- **************************************************************** -->
	<!-- DEPLOY -->
	<!-- **************************************************************** -->
	<target name="deploy_app">
		<tstamp>
			<format property="conn_time" pattern="yyyy-MM-dd HH:mm:ss.SSS"/>
		</tstamp>
		<echo>배포 작업을 진행합니다... 이 작업은 원격지에 접속하여 수행합니다...</echo>
		<echo>${was.ip} 접속을 시작합니다... [${conn_time}]</echo>
		<record name="${dep.was.log}" action="start"/>		
		<telnet server="${was.ip}" userid="${svrUserId}" password="${svrUserPassword}">
			<read>/xclass]#</read>
			<write>cd ${svrDocRoot}/${srv.name}</write>
			<read>/${srv.name}]#</read>
			<write>sh ./${stop.cmd}</write>
			<read>/${srv.name}]#</read>
			<write>/usr1/home/xclass/deploy/${dep.cmd} ${deploy.id}</write>
			<read>/${srv.name}]#</read>
			<write>sh ./${start.cmd}</write>
			<read>/${srv.name}]#</read>
			<write>exit</write>
		</telnet>
		<record name="${dep.was.log}" action="stop"/>
		<tstamp>
			<format property="disconn_time" pattern="yyyy-MM-dd HH:mm:ss.SSS"/>
		</tstamp>
		<echo>${was.ip} 접속을 종료했습니다... [${disconn_time}]</echo>
		<condition property="isSuccess">
			<resourcecontains resource="${dep.was.log}" substring="BUILD SUCCESSFUL" casesensitive="true" />
		</condition>
		<antcall target="check_remote_work" />
		<echo>배포 작업이 완료되었습니다...</echo>
	</target>
	
	<!-- **************************************************************** -->
	<!-- RECORD -->
	<!-- **************************************************************** -->	
	<target name="record">
		<java jvm="${java.home.dir}/bin/java" fork="true"
		      failonerror="true"
		      jar="${deployer.home.dir}/bin/deploy-deployer.jar">
			<arg value="${ant.project.name}"/>
			<arg value="${deploy.id}"/>
			<arg value="${deploy.phase}"/>
			<arg value="record"/>
		</java> 
	</target>
	
	<!-- **************************************************************** -->
	<!-- NOTICE -->
	<!-- **************************************************************** -->	
	<target name="notice_fail">
		<java jvm="${java.home.dir}/bin/java" fork="true"
		      failonerror="true"
		      jar="${deployer.home.dir}/bin/deploy-deployer.jar">
			<arg value="${ant.project.name}"/>
			<arg value="${deploy.id}"/>
			<arg value="${deploy.phase}"/>
			<arg value="notice"/>
			<arg value="FAIL"/>
		</java> 
	</target>
	
	<target name="notice_success">
		<java jvm="${java.home.dir}/bin/java" fork="true"
		      failonerror="true"
		      jar="${deployer.home.dir}/bin/deploy-deployer.jar">
			<arg value="${ant.project.name}"/>
			<arg value="${deploy.id}"/>
			<arg value="${deploy.phase}"/>
			<arg value="notice"/>
			<arg value="SUCCESS"/>
		</java> 
	</target>	
		
	<!-- **************************************************************** -->
	<!-- ROLLBACK FOR TEST SERVER -->
	<!-- **************************************************************** -->		
	<target name="run_rollback">
		<echo>♠ ROLLBACK ${deploy.id}</echo>
		<antcall target="rollback" />
	</target>
	
	<target name="rollback">
		<!-- /lotte/spp_platform/servers -->
		<ftp server="${was.ip}" userid="${svrUserId}" password="${svrUserPassword}"
		     remotedir="${svrDocRoot}"
		     action="put"
			 passive="yes">
			<!-- E:/jenkins-smartpick/jobs/SPP2014APP_IF_1_TEST_BUILD/workspace/spp2014/pack/REAL/IF_20160530_1400_backup/server_if/**/* -->
			<fileset dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnPackPath}/${deploy.id}_backup">
				<include name="${srv.name}/**/*"></include>
			</fileset>
		</ftp>
	</target>
</project>
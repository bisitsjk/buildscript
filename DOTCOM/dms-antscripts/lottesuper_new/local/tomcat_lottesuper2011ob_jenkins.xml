<?xml version="1.0" encoding="UTF-8"?>
<project name="tomcat_lottesuper2011ob_jenkins">
    <!-- **************************************************************** -->
	<!-- PROPERTY -->
	<!-- **************************************************************** -->
	<property name="deploy.id" value="${DEPLOY_ID}"/>
	
	<property file="${deployer.home.dir}/scripts/${ant.project.name}.${deploy.phase}.properties"/>


	<!-- E:/jenkins-lottesuper/jobs/TOMCAT_LOTTESUPER_OCEANBATCH_1_REAL_BUILD/workspace/lottesuper2011/pack/REAL/OB_20160626_1330/classes/esuper -->
	<property name="pack.real.path" value="${hdsnWrkSpPath}/${svnReposNm}/${hdsnPackPath}/${deploy.id}/${svrWebappPath}" />
	<property name="dist.path" value="aws-lotte-super-ocean-batch/dist" />
	
	<property name="init.build.log" value="../logs/${ant.project.name}/${deploy.id}_BUILD.log" />
	<property name="init.was.log" value="../logs/${ant.project.name}/${deploy.id}_INIT.log" />
	<property name="dep.was.log" value="../logs/${ant.project.name}/${deploy.id}_DEPLOY.log" />
	<property name="rollback.was.log" value="../logs/${ant.project.name}/${deploy.id}_ROLLBACK.log" />
	
	<property name="user.id" value="${svrUserId}"/>
	<property name="user.pwd" value="${svrUserPassword}"/>

	<property name="ssh.init.cmd" value="ssh_obinit" />
	<property name="ssh.dep.cmd" value="ssh_obdeploy" />
	<property name="ssh.rollback.cmd" value="ssh_obrollback" /><!-- 2017/01/23/22:51 Rollback 추가 -->

	<!-- 시험배포 자동화용 -->
	<tstamp><format property="deploy.date" pattern="yyyyMMdd"/></tstamp>
	<property name="rglr.dep.id" value="OB_${deploy.date}_1330"/>

	<!-- 첫 접수시 0건이면, 다음 접수시 지각한 건 접수하지 않도록 하기위함 -->
	<property name="lock.workspace" value="E:/jenkins-lottesuper/jobs/LOTTESUPER_OCEANBATCH_0_TEST_LOCK/workspace" />

	<!-- properties -->
	<!-- hudson setting properties
		deployer.home.dir
		java.home.dir
		jeus.home.dir
		deploy.phase
	-->
	
	<target name="run_build">
		<antcall target="merge" />
		<antcall target="build" />
		<antcall target="pack" />
	</target>
	
	<target name="run_deploy">
		<antcall target="backup" />
		<antcall target="deploy" />
	</target>

	
	<target name="ssh_run_deploy">
		<echo>♠ OCEANBATCH DEPLOY ${deploy.id}</echo>
		<antcall target="ssh_init_was" />
		<antcall target="ssh_send_was" />
		<antcall target="ssh_copy_was" />
	</target>

	

	<!-- **************************************************************** -->
	<!-- CHECK -->
	<!-- **************************************************************** -->
	<!-- 오션 배치는 롯데슈퍼-공통을 사용하지 않음 -->
	
	<target name="check_lock_prop">
		<condition property="existLockProp">
			<resourceexists>
				<file file="${lock.workspace}/${rglr.dep.id}_lock.properties"/>
			</resourceexists>
		</condition>
	</target>
	
	
	<target name="check_remote_work" unless="isSuccess">
		<fail message="원격지 작업이 실패하였습니다..." />
	</target>	

	<!-- **************************************************************** -->
	<!-- LOCK, 접수 : 정기배포, 자동접수 시에만 사용 -->
	<!-- **************************************************************** -->
	<target name="set_prop" unless="existLockProp"><!-- 처음에 기록 -->
		<propertyfile file="${lock.workspace}/${rglr.dep.id}_lock.properties">
			<entry key="deploy_count" type="int" value="0" />
			<entry key="first_error" value="false" />
		</propertyfile>
	</target>
		
	<target name="exec_app">
		<property file="${lock.workspace}/${rglr.dep.id}_lock.properties" />
		
		<condition property="isStop">
			<equals arg1="${first_error}" arg2="true" trim="true" />
		</condition>
		<fail if="${isStop}" message="당일 접수한 배포 건이 없습니다." />		
		
		<!-- deploy_count , first_error 를 교체하는가? -->
		<java jvm="${java.home.dir}/bin/java" fork="yes"
		      failonerror="false"
		      jar="${deployer.home.dir}/bin/deploy-deployer.jar"
			  errorproperty="error">
			<arg value="${ant.project.name}"/>
			<arg value="${rglr.dep.id}"/>
			<arg value="${deploy.phase}"/>
			<arg value="accept"/>
		</java>
		<condition property="isError">
			<length string="${error}" when="greater" length="0" />
		</condition>
		
		<condition property="isFirstError">
			<and>
				<istrue value="${isError}" />
				<equals arg1="0" arg2="${deploy_count}" trim="true" />
			</and>
		</condition>
		
		<propertyfile file="${lock.workspace}/${rglr.dep.id}_lock.properties">
			<entry key="deploy_count" default="0" type="int" operation="+" />
			<entry key="first_error" value="${isFirstError}" />
		</propertyfile>
		
		<fail if="${isError}" message="." /><!-- isError 가 true 가 아니면 -->
		
		<record name="${ant.project.name}_param.properties" emacsmode="true" action="start" />
		<echo>DEPLOY_ID=${rglr.dep.id}</echo>
		<record name="${ant.project.name}_param.properties" emacsmode="true" action="stop" />
	</target>
	
	<target name="accept" depends="check_lock_prop">
		<antcall target="set_prop" />
		<antcall target="exec_app" />
	</target>
	
	
	<!-- **************************************************************** -->
	<!-- 시험배포 -->
	<!-- **************************************************************** -->	
	<target name="record">
		<java jvm="${java.home.dir}/bin/java" fork="yes"
		      failonerror="true"
		      jar="${deployer.home.dir}/bin/deploy-deployer.jar">
			<arg value="${ant.project.name}"/>
			<arg value="${deploy.id}"/>
			<arg value="${deploy.phase}"/>
			<arg value="record"/>
		</java>
	</target>	
	
	
	<!-- **************************************************************** -->	
	<!-- MERGE -->
	<!-- **************************************************************** -->
	<target name="merge">
		<java jvm="${java.home.dir}/bin/java" fork="true"
		      failonerror="true"
		      jar="${deployer.home.dir}/bin/deploy-deployer.jar">
			<arg value="${ant.project.name}"/>
			<arg value="${deploy.id}"/>
			<arg value="${deploy.phase}"/>
			<arg value="merge"/>
		</java> 
	</target>
	
	<!-- **************************************************************** -->
	<!-- BUILD -->
	<!-- **************************************************************** -->
	<target name="build"><!-- info 파일 생성후 기록 : 근데 왜 기록하지? -->
		<record name="${init.build.log}" action="start"/>
		<!-- 빌드에 필요한 추가정보 획득  -->
		<!-- 파일로 저장 -->
		<java jvm="${java.home.dir}/bin/java" fork="true"
		      failonerror="true"
		      jar="${deployer.home.dir}/bin/deploy-deployer.jar">
			<arg value="${ant.project.name}"/>
			<arg value="${deploy.id}"/>
			<arg value="${deploy.phase}"/>
			<arg value="build"/>
		</java>		
				
		<path id="classpath">
			<fileset dir="${java.home.dir}/jre/lib">
				<include name="rt.jar" />
			</fileset>
			<!-- E:/jenkins-lottesuper/jobs/TOMCAT_LOTTESUPER_OCEANBATCH_1_REAL_BUILD/workspace/lottesuper2011/branches/REAL/aws-lotte-super-ocean-batch/lib/*.jar -->
			<fileset dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${srcLibPath}">
				<include name="*.jar" />
			</fileset>
		</path>
		
	    <!-- static -->
		<!-- E:/jenkins-lottesuper/jobs/TOMCAT_LOTTESUPER_OCEANBATCH_1_REAL_BUILD/workspace/lottesuper2011/branches/REAL/aws-lotte-super-ocean-batch/build -->
		<delete dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${srcClassesPath}" />
		<!-- E:/jenkins-lottesuper/jobs/TOMCAT_LOTTESUPER_OCEANBATCH_1_REAL_BUILD/workspace/lottesuper2011/branches/REAL/aws-lotte-super-ocean-batch/build -->
	    <mkdir dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${srcClassesPath}" />


		<!-- srcJavaPath    = E:/jenkins-lottesuper/jobs/TOMCAT_LOTTESUPER_OCEANBATCH_1_REAL_BUILD/workspace/lottesuper2011/branches/REAL/aws-lotte-super-ocean-batch/src -->
	    <!-- srcClassesPath = E:/jenkins-lottesuper/jobs/TOMCAT_LOTTESUPER_OCEANBATCH_1_REAL_BUILD/workspace/lottesuper2011/branches/REAL/aws-lotte-super-ocean-batch/build -->
		<javac source="1.6"
			target="1.6"
			srcdir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${srcJavaPath}"
			classpathref="classpath"
			destdir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${srcClassesPath}"
			failonerror="on" 
			debug="on"
			encoding="utf-8"
			compiler="modern"
			fork="true" 
			memoryMaximumSize="256m"
			includeantruntime="false"/>	
		
		<record name="${init.build.log}" action="stop"/>
	</target>
	
	<!-- **************************************************************** -->
	<!-- PACK -->
	<!-- **************************************************************** -->
	<target name="pack">
		<!-- E:/jenkins-lottesuper/jobs/TOMCAT_LOTTESUPER_OCEANBATCH_1_REAL_BUILD/workspace/lottesuper2011/pack/REAL/OB_20160626_1330/classes/esuper -->
		<delete dir="${pack.real.path}" /> <!-- 2013-01-02 추가 -->
		<mkdir dir="${pack.real.path}" />  <!-- 2013-01-02 추가 -->

		<java jvm="${java.home.dir}/bin/java" fork="true"
		      failonerror="true"
		      jar="${deployer.home.dir}/bin/deploy-deployer.jar">
			<arg value="${ant.project.name}"/>
			<arg value="${deploy.id}"/>
			<arg value="${deploy.phase}"/>
			<arg value="pack"/>
		</java>
		<antcall target="pack_jar" />
	</target>
	
	<target name="pack_jar">		
		<delete includeemptydirs="true">
			<!-- E:/jenkins-lottesuper/jobs/TOMCAT_LOTTESUPER_OCEANBATCH_1_REAL_BUILD/workspace/lottesuper2011/branches/REAL/aws-lotte-super-ocean-batch/dist/**/* -->
			<fileset dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${dist.path}" includes="**/*" />
    	</delete>


		<!-- E:/jenkins-lottesuper/jobs/TOMCAT_LOTTESUPER_OCEANBATCH_1_REAL_BUILD/workspace/lottesuper2011/branches/REAL/aws-lotte-super-ocean-batch/dist/lottesuper-batch.jar -->
		<jar encoding="UTF-8" destfile="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${dist.path}/lottesuper-batch.jar">
			<!-- E:/jenkins-lottesuper/jobs/TOMCAT_LOTTESUPER_OCEANBATCH_1_REAL_BUILD/workspace/lottesuper2011/branches/REAL/aws-lotte-super-ocean-batch/build -->
			<fileset dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${srcClassesPath}" />
		</jar>



		<!-- E:/jenkins-lottesuper/jobs/LOTTESUPER_OCEANBATCH_1_TEST_BUILD/workspace/lottesuper2011/pack/REAL/OB_20160427_1330/classes/esuper/lib -->
		<copy todir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnPackPath}/${deploy.id}/${svrLibPath}">
			<!-- E:/jenkins-lottesuper/jobs/TOMCAT_LOTTESUPER_OCEANBATCH_1_REAL_BUILD/workspace/lottesuper2011/branches/REAL/aws-lotte-super-ocean-batch/dist/lottesuper-batch.jar -->
			<fileset dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${dist.path}">
				<include name="lottesuper-batch.jar"/>
		    </fileset>
		</copy>
	</target>
	
	<!-- **************************************************************** -->
	<!-- BACKUP -->
	<!-- **************************************************************** -->
	<target name="backup">
		<java jvm="${java.home.dir}/bin/java" fork="true"
		      failonerror="true"
		      jar="${deployer.home.dir}/bin/deploy-deployer.jar">
			<arg value="${ant.project.name}"/>
			<arg value="${deploy.id}"/>
			<arg value="${deploy.phase}"/>
			<arg value="deploy"/>
			<arg value="${was.ip}" />
			<arg value="21" />
			<arg value="${user.id}" />
			<arg value="${user.pwd}" />
		</java> 
	</target>
	
	<!-- **************************************************************** -->
	<!-- DEPLOY -->
	<!-- **************************************************************** -->	
	<target name="deploy">
		<!-- 1. FTP (from local to nas) -->
		<!-- nas.dir=/usr1/home/xclass -->
		<!--
			web.ip=211.233.44.19
			was.ip=211.233.44.19
		-->
		<ftp server="${was.ip}" userid="${user.id}" password="${user.pwd}"
		     remotedir="${nas.dir}"
		     action="put"
			 passive="yes">
			<!-- E:/jenkins-lottesuper/jobs/LOTTESUPER_OCEANBATCH_1_TEST_BUILD/workspace/lottesuper2011/pack/TEST/OB_20160427_1330 -->
			<!-- build, dist 제외하고 lib 폴더 및 다른폴더들 전송 -->
			<fileset dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnPackPath}/${deploy.id}">
				<include name="classes/esuper/**/*"></include>
				<exclude name="classes/esuper/build/**/*"></exclude>
				<exclude name="classes/esuper/dist/**/*"></exclude>
				<exclude name="**/.svn/**"></exclude>
			</fileset>
		</ftp>
	</target>


	
	<!-- ##### SSH INIT ##### -->
	<target name="ssh_init_was">
			<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}" 
				trust="true" verbose="false" output="${init.was.log}"
				command="cd deploy;./${ssh.init.cmd} ${deploy.id}" />
			<condition property="isSuccess">
				<resourcecontains resource="${init.was.log}" substring="BUILD SUCCESSFUL" casesensitive="true" />
			</condition>
			<antcall target="check_remote_work" />			
		</target>
	
	
	<!-- ##### SSH SEND ##### -->
	<!-- 기존 Ocean 2번 서버 -->
    <!-- <scp todir="xclass:s7uxEDRe#8R=@211.233.44.19:/usr1/home/xclass/deploy/src_super/OB_20170123_1330 trust="true"> -->
	<!-- LotteBatch 서버 -->
	<!-- <scp todir="xclass:s7uxEDRe#8R=@211.172.253.250:/usr1/home/xclass/deploy/src_super/OB_20170123_1330 trust="true"> -->
	<!-- fileset dir = E:/jenkins-lottesuper/jobs/TOMCAT_LOTTESUPER_OCEANBATCH_1_REAL_BUILD/workspace/lottesuper2011/pack/REAL/OB_20170123_1330  -->
	
	<target name="ssh_send_was">
			<scp todir="${user.id}:${user.pwd}@${was.ip}:${nas.dir}/${deploy.id}" trust="true">
				<fileset dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnPackPath}/${deploy.id}">
					<include name="classes/esuper/**/*"></include>
					<exclude name="classes/esuper/build/**/*"></exclude>
					<exclude name="classes/esuper/dist/**/*"></exclude>
					<exclude name="**/.svn/**"></exclude>
				</fileset>
		</scp>
	</target>	

				
	<!-- ##### SSH COPY ##### -->
	<target name="ssh_copy_was">
		<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}"
			trust="true" verbose="false" output="${dep.was.log}"
			command="cd deploy;./${ssh.dep.cmd} ${deploy.id}" />
		<condition property="isSuccess">
			<resourcecontains resource="${dep.was.log}" substring="BUILD SUCCESSFUL" casesensitive="true" />
		</condition>
		<antcall target="check_remote_work" />		
	</target>

					
	<!-- **************************************************************** -->
	<!-- ROLLBACK FOR TEST SERVER -->
	<!-- **************************************************************** -->
	<target name="rollback_was">
		<antcall target="rollback_start_time" />
		<antcall target="rollback" />
		<antcall target="rollback_end_time" />
	</target>
	
	<target name="rollback_start_time">
		<tstamp>
			<format property="DSTAMP" pattern="yyyy.MM.dd"/>
			<format property="TSTAMP" pattern="HH:mm"/>
		</tstamp>
		<echo message="Rollback Start ==> ${DSTAMP}-${TSTAMP}"/>
	</target>
	
	<target name="rollback_end_time">
		<tstamp>
			<format property="DSTAMP" pattern="yyyy.MM.dd"/>
			<format property="TSTAMP" pattern="HH:mm"/>
		</tstamp>
		<echo message="Rollback End ==> ${DSTAMP}-${TSTAMP}"/>
	</target>
	
	<!-- 2. FTP (from local to nas) -->
	<target name="rollback">
		<!--
		     svrDocRoot=/usr1/home/xclass 
			 web.ip=211.233.44.19
			 was.ip=211.233.44.19
			 nas.dir=/usr1/home/xclass
        -->
		<!-- E:/jenkins-lottesuper/jobs/TOMCAT_LOTTESUPER_OCEANBATCH_1_REAL_BUILD/workspace/lottesuper2011/pack/REAL/OB_20160626_1330_backup -->
		<ftp server="${was.ip}" userid="${user.id}" password="${user.pwd}"
		     remotedir="${svrDocRoot}"
		     action="put"
			 verbose="yes"
			 passive="yes">
			<fileset dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnPackPath}/${deploy.id}_backup">
				<include name="classes/esuper/**/*"></include>
			</fileset>
		</ftp>
	</target>
	
	
	<!-- **************************************************************** -->
	<!-- ROLLBACK FOR SSH TEST SERVER -->
	<!-- 2. SSH (from Back to DocRoot) -->
	<!-- **************************************************************** -->
	<!-- ssh.rollback.cmd = ssh_borollback -->
		
    <target name="ssh_rollback_was">
		<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}"
			trust="true" verbose="false" output="${rollback.was.log}"
			command="cd deploy;./${ssh.rollback.cmd} ${deploy.id}" />
		<condition property="isSuccess">
			<resourcecontains resource="${rollback.was.log}" substring="BUILD SUCCESSFUL" casesensitive="true" />
		</condition>
		<antcall target="check_remote_work" />		
	</target>


</project>
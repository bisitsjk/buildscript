<?xml version="1.0" encoding="UTF-8"?>
<project name="sync_lottesuper_company_esptstf" basedir=".">
	<!-- ================================================== -->
	<!-- properties -->
	<!-- ================================================== -->
	<!-- test and real server info -->
	<property name="tst.web.ip" value="10.149.199.31"/>
	<property name="tst.was.ip" value="10.149.199.31"/>
	<property name="real.was.ip" value="110.45.204.159"/>
	<property name="tst.user.id" value="jeus"/>
	<property name="tst.user.pwd" value="w&uch6raDa*r"/>
	<property name="real.user.id" value="jeus"/>
	<property name="real.user.pwd" value="w&uch6raDa*r"/>
	
	<!-- path -->
	<property name="con_company"     value="esptstf_companydev" />
	
	<property name="request.dir" value="E:/jenkins-lottesuper/jobs/SYNC_LOTTESUPER_COMPANY_esptstf/workspace/WebContent"/>
	<property name="dep.dir" value="/esuper/project/company/WEB-INF"/>
	
	<!-- ================================================== -->
	<!-- check -->
	<!-- ================================================== -->		
	<target name="check_host">
		<condition property="isHost">
			<contains string="${hostname}" substring="esptstf"/>
		</condition>
		<echo>hostname is `${hostname}`</echo>
	</target>
			
	<target name="check_valid" depends="check_host" unless="isHost">
		<fail message="동기화 대상 서버가 아닙니다."/>
	</target>
	
	<!-- ================================================== -->
	<!-- Sync -->
	<!-- ================================================== -->
	<target name="sync_was">
		<echo>=================================================================================== sync 시작 ==========</echo>
		<antcall target="tar_was"/>
		<antcall target="check_valid"/>
		<antcall target="backup_was"/>		
		<antcall target="sync_rename"/>
		<antcall target="config_send_was"/>
		<antcall target="config_was"/>
		<echo>=================================================================================== sync 종료 ==========</echo>
	</target>
	
	<!-- ================================================== -->
	<!-- 테스트 서버 프로젝트 백업(이동) : 유닉스 mv명령어 사용 --> 
	<!-- ================================================== -->
	<target name="backup_was">
		<tstamp>
			<format property="conn_time" pattern="yyyy-MM-dd HH:mm:ss.SSS"/>
		</tstamp>
		<tstamp>
			<format property="backup_day" pattern="yyyyMMdd"/>
		</tstamp>
		<echo>테스트서버 소스를 백업(이동)합니다... 이 작업은 원격지에 접속하여 수행합니다...</echo>
		<echo>${tst.was.ip} 접속을 시작합니다... [${conn_time}]</echo>
		<telnet server="${tst.was.ip}" userid="${tst.user.id}" password="${tst.user.pwd}">
			<read>/jeus]%</read>
			<write>cd /esuper/project/company</write>	<!-- 경로이동 -->
			<read>/company]%</read>
			<write>mv WEB-INF ${backup_day}_company</write> <!-- 파일백업(이동) -->
			<read>/company]%</read>
			<write>tar xpf CP_SYNC.tar</write> <!-- 운영파일 tar풀기 -->
			<read>/company]%</read>
			<write>exit</write>
		</telnet>
		<tstamp>
			<format property="disconn_time" pattern="yyyy-MM-dd HH:mm:ss.SSS"/>
		</tstamp>
		<echo>${tst.was.ip} 접속을 종료했습니다... [${disconn_time}]</echo>
	</target>
	
	<!-- ================================================== -->
	<!-- 운영서버 프로젝트 백업 : 유닉스 tar명령어 사용 --> 
	<!-- ================================================== -->
	<target name="tar_was">
		<tstamp>
			<format property="conn_time" pattern="yyyy-MM-dd HH:mm:ss.SSS"/>
		</tstamp>
		<tstamp>
			<format property="backup_day" pattern="yyyyMMdd"/>
		</tstamp>
		<echo>운영 서버 소스를 백업(tar묶기)합니다... 이 작업은 원격지에 접속하여 수행합니다...</echo>
		<echo>${real.was.ip} 접속을 시작합니다... [${conn_time}]</echo>
			<telnet server="${real.was.ip}" userid="${real.user.id}" password="${real.user.pwd}">
				<read>/jeus]%</read>
				<write>cd /esuper/project/company</write> <!-- 경로이동 -->
				<read>/company]%</read>
				<write>tar cf CP_SYNC.tar WEB-INF</write> <!-- tar 묶기 -->
				<read>/company]%</read>
				<write>ftp ${tst.was.ip}</write> <!-- ftp 접속 -->
				<read>:jeus):</read>
				<write>${tst.user.id}</write>	<!-- ID -->
				<read>Password:</read>
				<write>${tst.user.pwd}</write>	<!-- PASSWORD -->
				<read>ftp></read>
				<write>cd /esuper/project/company</write> <!-- 경로이동 -->
				<read>ftp></read>
				<write>pwd</write>	<!-- 경로확인 -->
				<read>ftp></read>
				<write>put CP_SYNC.tar</write> <!-- tar 파일 전송 -->
				<read>ftp></read>	
				<write>bye</write> 	<!-- ftp 접속해지 -->
				<read>/company]%</read>
				<write>exit</write>
			</telnet>
		<tstamp>
			<format property="disconn_time" pattern="yyyy-MM-dd HH:mm:ss.SSS"/>
		</tstamp>
		<echo>${tst.was.ip} 접속을 종료했습니다... [${disconn_time}]</echo>
	</target>
	
	<!-- **************************************************************** -->
	<!-- config CHECK -->
	<!-- **************************************************************** -->
	<target name="check_rename1">
		<condition property="existFile1">
			<resourceexists><file file="${request.dir}/WEB-INF/config-test.xml" /></resourceexists>
		</condition>
		<echo>config-test.xml : ${existFile1}</echo>
	</target>
	<target name="check_rename2">
		<condition property="existFile2">
			<resourceexists><file file="${request.dir}/WEB-INF/jeus-web-dd-test.xml" /></resourceexists>
		</condition>
		<echo>jeus-web-dd-test.xml : ${existFile2}</echo>
	</target>
	<target name="check_rename3">
		<condition property="existFile3">
			<resourceexists><file file="${request.dir}/WEB-INF/x2config/x2config-test.xml" /></resourceexists>
		</condition>
		<echo>x2config-test.xml : ${existFile3}</echo>
	</target>
	<target name="check_rename4">
		<condition property="existFile4">
			<resourceexists><file file="${request.dir}/WEB-INF/x2config/log4jconfig-test.xml" /></resourceexists>
		</condition>
		<echo>log4jconfig-test.xml : ${existFile4}</echo>
	</target>
	
	<!-- ================================================== -->
	<!-- config file rename -->
	<!-- ================================================== -->
	<target name="config.xml" depends="check_rename1" if="existFile1">
		<move file="${request.dir}/WEB-INF/config-test.xml" 
			  tofile="${request.dir}/WEB-INF/config.xml" overwrite="true" verbose="true" />
	</target>
	<target name="jeus-web-dd.xml" depends="check_rename2" if="existFile2">
		<move file="${request.dir}/WEB-INF/jeus-web-dd-test.xml" 
			  tofile="${request.dir}/WEB-INF/jeus-web-dd.xml" overwrite="true" verbose="true" />
	</target>
	<target name="x2config.xml" depends="check_rename3" if="existFile3">
		<move file="${request.dir}/WEB-INF/x2config/x2config-test.xml" 
			  tofile="${request.dir}/WEB-INF/x2config/x2config.xml" overwrite="true" verbose="true" />
	</target>
	<target name="log4jconfig.xml" depends="check_rename4" if="existFile4">
		<move file="${request.dir}/WEB-INF/x2config/log4jconfig-test.xml" 
			  tofile="${request.dir}/WEB-INF/x2config/log4jconfig.xml" overwrite="true" verbose="true" />
	</target>			  	
	<target name="sync_rename">
		<echo>=================================================================================== config rename 시작 ==========</echo>
		<antcall target="config.xml"/>
		<antcall target="jeus-web-dd.xml"/>
		<antcall target="x2config.xml"/>
		<antcall target="log4jconfig.xml"/>
		<echo>=================================================================================== config rename 종료 ==========</echo>
	</target>
	<!-- ================================================== -->
	<!-- 테스트서버 config파일 sync: ftp --> 
	<!-- ================================================== -->
	<target name="config_send_was">
		<!-- FTP (from local to nas) -->
		<ftp server="${tst.was.ip}" userid="${tst.user.id}" password="${tst.user.pwd}"
		     remotedir="${dep.dir}"
		     action="put" verbose="true">
			<fileset dir="${request.dir}/WEB-INF">
				<include name="config.xml"></include>
				<include name="jeus-web-dd.xml"></include>
				<include name="x2config/x2config.xml"></include>
				<include name="x2config/log4jconfig.xml"></include>
				<include name="**/.svn/**"></include>
			</fileset>
		</ftp>
	</target>
	
	<!-- ================================================== -->
		<!-- 테스트 서버 config(수정) 및 재기동  --> 
		<!-- ================================================== -->
	<target name="config_was">
		<tstamp>
			<format property="conn_time" pattern="yyyy-MM-dd HH:mm:ss.SSS"/>
		</tstamp>
		<tstamp>
			<format property="backup_day" pattern="yyyyMMdd"/>
		</tstamp>
		<echo>테스트서버 재기동 합니다... 이 작업은 원격지에 접속하여 수행합니다...</echo>
		<echo>${tst.was.ip} 접속을 시작합니다... [${conn_time}]</echo>
		<telnet server="${tst.was.ip}" userid="${tst.user.id}" password="${tst.user.pwd}">
			<read>/jeus]%</read>
			<write>cd deploy</write>
			<read>/deploy]%</read>
			<write>ja downcon ${con_company}</write>
			<read>/deploy]%</read>
			<write>ja startcon ${con_company}</write>
			<read>/deploy]%</read>
			<write>exit</write>
		</telnet>
		<tstamp>
			<format property="disconn_time" pattern="yyyy-MM-dd HH:mm:ss.SSS"/>
		</tstamp>
		<echo>${tst.was.ip} 접속을 종료했습니다... [${disconn_time}]</echo>
	</target>
	
</project>

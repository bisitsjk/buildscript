<?xml version="1.0" encoding="UTF-8"?>
<project name="aws_lottemall2013_admin">
    <!-- **************************************************************** -->
	<!-- PROPERTY -->
	<!-- **************************************************************** -->
	<property name="deploy.id" value="${DEPLOY_ID}" />
	<property file="${deployer.home.dir}/scripts/${ant.project.name}.${deploy.phase}.properties" />
	<!-- E:/jenkins-hosting/jobs/smb_aws_1-1-1.LOTTEMALL2013_ADMIN_TEST_BUILD/workspace/lottemall2013/pack/TEST/AD_220170415_1000/gimpoairportadm -->
	<property name="pack.real.path" value="${hdsnWrkSpPath}/${svnReposNm}/${hdsnPackPath}/${deploy.id}/${svrWebappPath}" />
	
	<property name="user.id" value="${svrUserId}" />
	<property name="user.pwd" value="${svrUserPassword}" />
	
	<property name="init.build.log" value="../logs/${ant.project.name}/${deploy.id}_BUILD.log" />
	<property name="init.was.log" value="../logs/${ant.project.name}/${deploy.id}_INIT_WAS.log" />
	<property name="init.web.log" value="../logs/${ant.project.name}/${deploy.id}_INIT_WEB.log" />
	<property name="dep.was.log" value="../logs/${ant.project.name}/${deploy.id}_DEP_WAS.log" />
	<property name="dep.web.log" value="../logs/${ant.project.name}/${deploy.id}_DEP_WEB.log" />
	<property name="jeus.restart.log" value="../logs/${ant.project.name}/${deploy.id}_JEUS_RESTART.log" />
	<property name="rollback.was.log" value="../logs/${ant.project.name}/${deploy.id}_ROLLBACK_WAS.log" />

	<property name="ssh.init.cmd" value="ssh_malladmin_init" />
	<property name="ssh.dep.cmd" value="ssh_malladmin_deploy" />
	<property name="ssh.rollback.cmd" value="ssh_malladmin_rollback" />
	<property name="ssh.dep.excludecopy.cmd" value="ssh_malladmin_excludecopy_deploy" />
	
	<property name="java15.home.dir" value="C:/Program Files (x86)/Java/jdk1.5.0_22"/>

	<!--<property name="con_gimpoairportadm"     value="lottemallkp1_gimpoairportadm" />-->
	
	<!-- 시험배포 자동화용 -->
	<tstamp><format property="deploy.date" pattern="yyyyMMdd"/></tstamp>
	<property name="rglr.dep.id" value="AD_${deploy.date}_1000"/>
	
	<!-- 첫 접수시 0건이면, 다음 접수시 지각한 건 접수하지 않도록 하기위함 -->
	<property name="lock.workspace" value="E:/jenkins-hosting/jobs/smb_aws_1-1-1.LOTTEMALL2013_ADMIN_TEST_BUILD/workspace" />
		
	<!-- properties -->
	<!-- hudson setting properties
		deployer.home.dir
		java.home.dir
		jeus.home.dir
		deploy.phase
	-->
	
	<target name="run_build">
		<antcall target="merge" />
		<antcall target="build" />
		<antcall target="pack" />
	</target>
	
	<target name="run_deploy">
		<antcall target="backup_was" />
		<antcall target="deploy_was" />
		<antcall target="copy_was" />
	</target>
	
	<!-- **************************************************************** -->
	<!-- CHECK -->
	<!-- **************************************************************** -->
	<target name="ip_check">
	<echo>echo ${was.ip}</echo>
	  <condition property="con_front" value="esptstf_dev">
	   		<equals arg1="${was.ip}" arg2="10.149.199.31" />
	  </condition>
	</target>

	<!-- 2013-01-02 변경 -->
	<target name="check_rename1">
		<condition property="existFile1">
			<resourceexists><file file="${pack.real.path}/WEB-INF/config_${deploy.phase}.xml" /></resourceexists>
		</condition>
		<echo>config_${deploy.phase}.xml : ${existFile1}</echo>
	</target>
	<target name="check_rename2">
		<condition property="existFile2">
			<resourceexists><file file="${pack.real.path}/WEB-INF/jeus-web-dd-${deploy.phase}.xml" /></resourceexists>
		</condition>
		<echo>jeus-web-dd-${deploy.phase}.xml : ${existFile2}</echo>
	</target>
	<target name="check_rename3">
		<condition property="existFile3">
			<resourceexists><file file="${pack.real.path}/WEB-INF/x2config/x2config_${deploy.phase}.xml" /></resourceexists>
		</condition>
		<echo>x2config_${deploy.phase}.xml : ${existFile3}</echo>
	</target>
	<target name="check_rename4">
		<condition property="existFile4">
			<resourceexists><file file="${pack.real.path}/WEB-INF/x2config/log4jconfig_${deploy.phase}.xml" /></resourceexists>
		</condition>
		<echo>log4jconfig_${deploy.phase}.xml : ${existFile4}</echo>
	</target>
	<target name="check_rename7">
		<condition property="existFile7">
			<resourceexists><file file="${pack.real.path}/WEB-INF/x2config/lgdacom/conf/mall-${deploy.phase}.conf" /></resourceexists>
		</condition>
		<echo>mall-${deploy.phase}.conf : ${existFile7}</echo>
	</target>
	<target name="check_rename8">
		<condition property="existFile8">
			<resourceexists><file file="${pack.real.path}/WEB-INF/x2config/smpi/smpi-${deploy.phase}.properties" /></resourceexists>
		</condition>
		<echo>smpi-${deploy.phase}.properties : ${existFile8}</echo>
	</target>
	<target name="check_rename9">
		<condition property="existFile9">
			<resourceexists><file file="${pack.real.path}/WEB-INF/x2config/pmpi/pmpi-${deploy.phase}.properties" /></resourceexists>
		</condition>
		<echo>pmpi-${deploy.phase}.properties : ${existFile9}</echo>
	</target>	
	
	<target name="check_remote_work" unless="isSuccess">
		<fail message="원격지 작업이 실패하였습니다..." />
	</target>
	
	<target name="check_lock_prop">
		<condition property="existLockProp">
			<resourceexists>
				<file file="${lock.workspace}/${rglr.dep.id}_lock.properties"/>
			</resourceexists>
		</condition>
	</target>

	<target name="check_exist"> 	<!--source type check-->
		<condition property="isExistClass">
			<or>
			<resourceexists><file file="${hdsnWrkSpPath}/lottemall2013/${hdsnPackPath}/${deploy.id}/gimpoairportadm/WEB-INF/dynamic_classes"/></resourceexists>
			<resourceexists><file file="${hdsnWrkSpPath}/lottemall2013/${hdsnPackPath}/${deploy.id}/gimpoairportadm/WEB-INF/classes"/></resourceexists>
			<resourceexists><file file="${hdsnWrkSpPath}/lottemall2013/${hdsnPackPath}/${deploy.id}/gimpoairportadm/WEB-INF/lib"/></resourceexists>
			<resourceexists><file file="${hdsnWrkSpPath}/lottemall2013/${hdsnPackPath}/${deploy.id}/gimpoairportadm/WEB-INF/x2config"/></resourceexists>
			<resourceexists><file file="${hdsnWrkSpPath}/lottemall2013/${hdsnPackPath}/${deploy.id}/gimpoairportadm/WEB-INF/x2scenario"/></resourceexists>
			<resourceexists><file file="${hdsnWrkSpPath}/lottemall2013/${hdsnPackPath}/${deploy.id}/gimpoairportadm/WEB-INF/config.xml"/></resourceexists>
			<resourceexists><file file="${hdsnWrkSpPath}/lottemall2013/${hdsnPackPath}/${deploy.id}/gimpoairportadm/WEB-INF/config_dev.xml"/></resourceexists>
			<resourceexists><file file="${hdsnWrkSpPath}/lottemall2013/${hdsnPackPath}/${deploy.id}/gimpoairportadm/WEB-INF/config_test.xml"/></resourceexists>
			<resourceexists><file file="${hdsnWrkSpPath}/lottemall2013/${hdsnPackPath}/${deploy.id}/gimpoairportadm/WEB-INF/config_real.xml"/></resourceexists>
			<resourceexists><file file="${hdsnWrkSpPath}/lottemall2013/${hdsnPackPath}/${deploy.id}/gimpoairportadm/WEB-INF/jeus-web-dd.xml"/></resourceexists>
			<resourceexists><file file="${hdsnWrkSpPath}/lottemall2013/${hdsnPackPath}/${deploy.id}/gimpoairportadm/WEB-INF/jeus-web-dd-dev.xml"/></resourceexists>
			<resourceexists><file file="${hdsnWrkSpPath}/lottemall2013/${hdsnPackPath}/${deploy.id}/gimpoairportadm/WEB-INF/jeus-web-dd-test.xml"/></resourceexists>
			<resourceexists><file file="${hdsnWrkSpPath}/lottemall2013/${hdsnPackPath}/${deploy.id}/gimpoairportadm/WEB-INF/jeus-web-dd-real.xml"/></resourceexists>
			<resourceexists><file file="${hdsnWrkSpPath}/lottemall2013/${hdsnPackPath}/${deploy.id}/gimpoairportadm/WEB-INF/web.xml"/></resourceexists>
			</or>
		</condition>
		<condition property="isExistJsp">
			<or>
				<resourceexists><file file="${hdsnWrkSpPath}/lottemall2013/${hdsnPackPath}/${deploy.id}/gimpoairportadm/WEB-INF/jsp"/></resourceexists>
				<resourcecount when="greater" count="0">
					<filelist dir="${hdsnWrkSpPath}/lottemall2013/${hdsnPackPath}/${deploy.id}/gimpoairportadm" files="*.jsp,*.html"/>
				</resourcecount>				
			</or>
		</condition>
		
		<condition property="isJspAndClass">
			<and>
				<istrue value="${isExistClass}"/>
				<istrue value="${isExistJsp}"/>
			</and>
		</condition>
		<condition property="isJsp">
			<and>
				<isfalse value="${isExistClass}"/>
				<istrue value="${isExistJsp}"/>
			</and>
		</condition>
		<!--
		<condition property="isClass">
			<and>
				<istrue value="${isExistClass}"/>
				<isfalse value="${isExistJsp}"/>
			</and>
		</condition>
		-->
		<condition property="isClass">
				<istrue value="${isExistClass}"/>
		</condition>
		<condition property="isExist">
			<or>
				<istrue value="${isExistClass}"/>
				<istrue value="${isExistJsp}"/>
			</or>
		</condition>
		<!--
		<condition property="isRestart">
			<or>
				<istrue value="${isJspAndClass}"/>
				<istrue value="${isClass}"/>
			</or>
		</condition>
		-->
		<condition property="isRestart">
				<istrue value="${isClass}"/>
		</condition>
	
		<echo>isJsp : ${isJsp} </echo>
		<echo>isClass : ${isClass} </echo>
		<echo>isJspAndClass : ${isJspAndClass} </echo>
		<echo>jeus restart - >> ${isRestart}</echo>
	</target>
	<!-- **************************************************************** -->
	<!-- LOCK, 접수 : 정기배포, 자동접수 시에만 사용 -->
	<!-- **************************************************************** -->
	<target name="set_prop" unless="existLockProp">
		<propertyfile file="${lock.workspace}/${rglr.dep.id}_lock.properties">
			<entry key="deploy_count" type="int" value="0" />
			<entry key="first_error" value="false" />
		</propertyfile>
	</target>
		
	<target name="exec_app">
		<property file="${lock.workspace}/${rglr.dep.id}_lock.properties" />
		
		<condition property="isStop">
			<equals arg1="${first_error}" arg2="true" trim="true" />
		</condition>
		<fail if="${isStop}" message="당일 접수한 배포 건이 없습니다." />		
		
		<java jvm="${java.home.dir}/bin/java" fork="yes"
		      failonerror="false"
		      jar="${deployer.home.dir}/bin/deploy-deployer.jar"
			  errorproperty="error">
			<arg value="${ant.project.name}"/>
			<arg value="${rglr.dep.id}"/>
			<arg value="${deploy.phase}"/>
			<arg value="accept"/>
		</java>
		<condition property="isError">
			<length string="${error}" when="greater" length="0" />
		</condition>
		
		<condition property="isFirstError">
			<and>
				<istrue value="${isError}" />
				<equals arg1="0" arg2="${deploy_count}" trim="true" />
			</and>
		</condition>
		
		<propertyfile file="${lock.workspace}/${rglr.dep.id}_lock.properties">
			<entry key="deploy_count" default="0" type="int" operation="+" />
			<entry key="first_error" value="${isFirstError}" />
		</propertyfile>
		
		<fail if="${isError}" message="." />
		
		<record name="${ant.project.name}_param.properties" emacsmode="true" action="start" />
		<echo>DEPLOY_ID=${rglr.dep.id}</echo>
		<record name="${ant.project.name}_param.properties" emacsmode="true" action="stop" />
	</target>
	
	<target name="accept" depends="check_lock_prop">
		<antcall target="set_prop" />
		<antcall target="exec_app" />
	</target>
	
	<!-- **************************************************************** -->	
	<!-- MERGE -->
	<!-- **************************************************************** -->
	<target name="merge">
		<java jvm="${java.home.dir}/bin/java" fork="true"
		      failonerror="true"
		      jar="${deployer.home.dir}/bin/deploy-deployer.jar">
			<arg value="${ant.project.name}"/>
			<arg value="${deploy.id}"/>
			<arg value="${deploy.phase}"/>
			<arg value="merge"/>
		</java> 
	</target>
	
	<!-- **************************************************************** -->
	<!-- BUILD -->
	<!-- **************************************************************** -->
	<target name="build">
		<record name="${init.build.log}" action="start"/>
		<!-- 빌드에 필요한 추가정보 획득  -->
		<!-- 파일로 저장 -->
		<java jvm="${java.home.dir}/bin/java" fork="true"
		      failonerror="true"
		      jar="${deployer.home.dir}/bin/deploy-deployer.jar">
			<arg value="${ant.project.name}"/>
			<arg value="${deploy.id}"/>
			<arg value="${deploy.phase}"/>
			<arg value="build"/>
		</java>		
		
		<!-- 추가정보가 담겨있는 파일에서 값을 획득 -->
		<!-- E:/jenkins-hosting/jobs/smb_aws_1-1-1.LOTTEMALL2013_ADMIN_TEST_BUILD/workspace/lottemall2013/AD_20170415_1000.info -->
		<property file="${hdsnWrkSpPath}/${svnReposNm}/${deploy.id}.info"/>
		
		<!-- E:/jenkins-hosting/jobs/smb_aws_1-1-1.LOTTEMALL2013_ADMIN_TEST_BUILD/workspace/lottesuper2011/branches/REAL/MallAdmin/src -->
		<property name="srcStaticJavaPath" value="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${srcJavaPath1}" />
		
		<!-- E:/jenkins-hosting/jobs/smb_aws_1-1-1.LOTTEMALL2013_ADMIN_TEST_BUILD/workspace/lottesuper2011/branches/REAL/MallAdmin/src_dynamic -->
		<property name="srcDynamicJavaPath" value="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${srcJavaPath0}" />
		
		<!-- E:/jenkins-hosting/jobs/smb_aws_1-1-1.LOTTEMALL2013_ADMIN_TEST_BUILD/workspace/lottesuper2011/branches/REAL/MallAdmin/WebContent/WEB-INF/classes -->
		<property name="srcStaticClassesPath" value="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${srcClassesPath1}" />
		
		<!-- E:/jenkins-hosting/jobs/smb_aws_1-1-1.LOTTEMALL2013_ADMIN_TEST_BUILD/workspace/lottesuper2011/branches/REAL/MallAdmin/WebContent/WEB-INF/dynamic_classes -->
		<property name="srcDynamicClassesPath" value="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${srcClassesPath0}" />		
		
		<path id="classpath">
			<fileset dir="${java.home.dir}/jre/lib">
				<include name="rt.jar" />
			</fileset>
			
			<!--
			<fileset dir="${jeus.home.dir}/lib/datasource">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${jeus.home.dir}/lib/system">
				<include name="*.jar" />
			</fileset>
			-->
			
			<!-- Tomcat Library Reference -->
			<fileset dir="${tomcat.home.dir}/lib">
				<include name="*.jar" />
			</fileset>
			
			
			<!-- E:/jenkins-hosting/jobs/smb_aws_1-1-1.LOTTEMALL2013_ADMIN_TEST_BUILD/workspace/lottemall2013/branches/REAL/MallAdmin/WebContent/WEB-INF/lib -->
			<fileset dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnBranchPath}/${srcLibPath}">
				<include name="*.jar" />
			</fileset>
			
			
			<!-- E:/jenkins-hosting/jobs/smb_aws_1-1-1.LOTTEMALL2013_ADMIN_TEST_BUILD/workspace/lottesuper2011/branches/REAL/MallAdmin/WebContent/WEB-INF/classes -->				
			<dirset dir="${srcStaticClassesPath}" />

			<!-- E:/jenkins-hosting/jobs/smb_aws_1-1-1.LOTTEMALL2013_ADMIN_TEST_BUILD/workspace/lottesuper2011/branches/REAL/MallAdmin/WebContent/WEB-INF/dynamic_classes -->			
			<dirset dir="${srcDynamicClassesPath}" />
		
		</path>

		<!-- 
		<delete dir="${srcStaticClassesPath}" />
		<delete dir="${srcDynamicClassesPath}" />
		-->
	    <mkdir dir="${srcStaticClassesPath}" />
		<mkdir dir="${srcDynamicClassesPath}" />

	    <!-- Static / Dynamic Java Compile -->
	    <!-- Static -->
			<!-- static -->	
			<!-- srcStaticJavaPath = E:/jenkins-hosting/jobs/smb_aws_1-1-1.LOTTEMALL2013_ADMIN_TEST_BUILD/workspace/lottesuper2011/branches/REAL/MallAdmin/src -->
			<!-- srcStaticClassesPath = E:/jenkins-hosting/jobs/smb_aws_1-1-1.LOTTEMALL2013_ADMIN_TEST_BUILD/workspace/lottesuper2011/branches/REAL/MallAdmin/WebContent/WEB-INF/classes -->
			
			<javac source="1.7" 
				target="1.7" 
				srcdir="${srcStaticJavaPath}"
				classpathref="classpath"
				destdir="${srcStaticClassesPath}"
				failonerror="on" 
				debug="on"
				encoding="utf-8"
				compiler="modern"
				fork="true" 
				memoryMaximumSize="256m"
				includeantruntime="false"/>
		   		
			<!-- dynamic -->		
			<!-- srcDynamicJavaPath    = E:/jenkins-hosting/jobs/smb_aws_1-1-1.LOTTEMALL2013_ADMIN_TEST_BUILD/workspace/lottemall2013/branches/REAL/MallAdmin/src_dynamic -->
			<!-- srcDynamicClassesPath = E:/jenkins-hosting/jobs/smb_aws_1-1-1.LOTTEMALL2013_ADMIN_TEST_BUILD/workspace/lottemall2013/branches/REAL/MallAdmin/WebContent/WEB-INF/dynamic_classes -->
			
			<javac source="1.7"
				target="1.7"
				srcdir="${srcDynamicJavaPath}"
				classpathref="classpath"
				destdir="${srcDynamicClassesPath}"
				failonerror="on" 
				debug="on"
				encoding="utf-8"
				compiler="modern"
				fork="true"
				memoryMaximumSize="256m"
				includeantruntime="false"/>  
			

		<!-- dynamic 폴더로 XML 파일들 전송 -->
		<!-- srcDynamicJavaPath    = E:/jenkins-hosting/jobs/smb_aws_1-1-1.LOTTEMALL2013_ADMIN_TEST_BUILD/workspace/lottemall2013/branches/REAL/MallAdmin/src_dynamic -->
		<!-- srcDynamicClassesPath = E:/jenkins-hosting/jobs/smb_aws_1-1-1.LOTTEMALL2013_ADMIN_TEST_BUILD/workspace/lottemall2013/branches/REAL/MallAdmin/WebContent/WEB-INF/dynamic_classes -->
			<!--
			<copy todir="${srcDynamicClassesPath}">
				<fileset dir="${srcDynamicJavaPath}">
					<include name="**/**/*.xml"/>
			    </fileset>
			</copy>
		
			<copy todir="${srcStaticClassesPath}">
				<fileset dir="${srcStaticJavaPath}">
					<include name="**/**/*.xml"/>
			    </fileset>
			</copy>
			-->
			<copy todir="${srcDynamicClassesPath}">
				<fileset dir="${srcDynamicJavaPath}">
					<include name="**/*"/>
					<exclude name="**/*.java"/>
			    </fileset>
			</copy>
		
			<copy todir="${srcStaticClassesPath}">
				<fileset dir="${srcStaticJavaPath}">
					<include name="**/*"/>
					<exclude name="**/*.java"/>
			    </fileset>
			</copy>

		
		<record name="${init.build.log}" action="stop"/>
	</target>
	
	<!-- **************************************************************** -->
	<!-- PACK -->
	<!-- **************************************************************** -->
	<target name="pack">
		<!-- E:/jenkins-hosting/jobs/smb_aws_1-1-1.LOTTEMALL2013_ADMIN_TEST_BUILD/workspace/lottemall2013/pack/TEST/AD_220170415_1000/gimpoairportadm -->
		<!-- 배포일자 Pack 폴더 삭제후 재생성 -->
		<delete dir="${pack.real.path}" />
		<mkdir dir="${pack.real.path}" />
		<java jvm="${java.home.dir}/bin/java" fork="true"
		      failonerror="true"
		      jar="${deployer.home.dir}/bin/deploy-deployer.jar">
			<arg value="${ant.project.name}"/>
			<arg value="${deploy.id}"/>
			<arg value="${deploy.phase}"/>
			<arg value="pack"/>
		</java>
		
		<antcall target="jeus-web-dd.xml" />
		<antcall target="x2config.xml" />

		<!-- ##### AWS_LotteMall2013 아래 파일들은 필요시 수정요망 ##### -->
		<!--
		<antcall target="config.xml" /> 
		<antcall target="log4jconfig.xml" />
		<antcall target="mall.conf" />
		<antcall target="smpi.properties" />
		<antcall target="pmpi.properties" />
		<antcall target="replace_domain" />
		-->
	</target>
	<!-- rename -->
	<target name="config.xml" depends="check_rename1" if="existFile1">
		<move file="${pack.real.path}/WEB-INF/config_${deploy.phase}.xml" 
			  tofile="${pack.real.path}/WEB-INF/config.xml" overwrite="true" verbose="true" />
	</target>
	<target name="jeus-web-dd.xml" depends="check_rename2" if="existFile2">
		<move file="${pack.real.path}/WEB-INF/jeus-web-dd-${deploy.phase}.xml" 
			  tofile="${pack.real.path}/WEB-INF/jeus-web-dd.xml" overwrite="true" verbose="true" />
	</target>
	<target name="x2config.xml" depends="check_rename3" if="existFile3">
		<move file="${pack.real.path}/WEB-INF/x2config/x2config_${deploy.phase}.xml" 
			  tofile="${pack.real.path}/WEB-INF/x2config/x2config.xml" overwrite="true" verbose="true" />
	</target>
	<target name="log4jconfig.xml" depends="check_rename4" if="existFile4">
		<move file="${pack.real.path}/WEB-INF/x2config/log4jconfig_${deploy.phase}.xml" 
			  tofile="${pack.real.path}/WEB-INF/x2config/log4jconfig.xml" overwrite="true" verbose="true" />
	</target>			  	
	<target name="mall.conf" depends="check_rename7" if="existFile7">
		<move file="${pack.real.path}/WEB-INF/x2config/lgdacom/conf/mall-${deploy.phase}.conf" 
			tofile="${pack.real.path}/WEB-INF/x2config/lgdacom/conf/mall.conf" overwrite="true" verbose="true" />
	</target>
	<target name="smpi.properties" depends="check_rename8" if="existFile8">
		<move file="${pack.real.path}/WEB-INF/x2config/smpi/smpi-${deploy.phase}.properties" 
			tofile="${pack.real.path}/WEB-INF/x2config/smpi/smpi.properties" overwrite="true" verbose="true" />
	</target>
	<target name="pmpi.properties" depends="check_rename9" if="existFile9">
		<move file="${pack.real.path}/WEB-INF/x2config/pmpi/pmpi-${deploy.phase}.properties" 
			tofile="${pack.real.path}/WEB-INF/x2config/pmpi/pmpi.properties" overwrite="true" verbose="true" />
	</target>
	
	<target name="replace_domain">
		<replace dir="${pack.real.path}" value="www.lottesuper.co.kr">
			<include name="static-root/js/**/*.js"/>
			<replacetoken>local.lottesuper.co.kr</replacetoken>
		</replace>
	</target>

	<!-- **************************************************************** -->
	<!-- BACKUP -->
	<!-- **************************************************************** -->
	<target name="backup_was">
		<java jvm="${java.home.dir}/bin/java" fork="true"
		      failonerror="true"
		      jar="${deployer.home.dir}/bin/deploy-deployer.jar">
			<arg value="${ant.project.name}"/>
			<arg value="${deploy.id}"/>
			<arg value="${deploy.phase}"/>
			<arg value="deploy"/>
			<arg value="${was.ip}" />
			<arg value="21" />
			<arg value="${user.id}" />
			<arg value="${user.pwd}" />
		</java> 
	</target>
	<target name="backup_web">
		<java jvm="${java.home.dir}/bin/java" fork="true"
		      failonerror="true"
		      jar="${deployer.home.dir}/bin/deploy-deployer.jar">
			<arg value="${ant.project.name}"/>
			<arg value="${deploy.id}"/>
			<arg value="${deploy.phase}"/>
			<arg value="deploy"/>
			<arg value="${web.ip}" />
			<arg value="21" />
			<arg value="${user.id}" />
			<arg value="${user.pwd}" />
		</java> 
	</target>
	
	<!-- **************************************************************** -->
	<!-- SSH DEPLOY -->
	<!-- **************************************************************** -->	
	<target name="ssh_deploy_was" depends="check_exist" if="isExist">
		<antcall target="ssh_init_was" />
		<antcall target="ssh_send_was" />
	</target>
			
	<!-- **************************************************************** -->
		<!-- SSH INIT_DEPLOY -->
		<!-- **************************************************************** -->
		
		<!-- ##### SSH INIT ##### -->
		<target name="ssh_init_was">
			<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}" 
				trust="true" verbose="false" output="${init.was.log}"
				command="cd deploy;./${ssh.init.cmd} ${deploy.id}" />
			<condition property="isSuccess">
				<resourcecontains resource="${init.was.log}" substring="BUILD SUCCESSFUL" casesensitive="true" />
			</condition>
			<antcall target="check_remote_work" />
		</target>

		<!-- SSH_CHECK_TEST -->
			<target name="ssh_check_test_deploy_id_was">
			<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}" 
				trust="true" verbose="false" output="${ssh_check_test_deploy_id_was.log}"
				command="cd deploy;./${ssh_check_test_deploy_id_was.cmd}" />
			<condition property="isSuccess">
				<resourcecontains resource="${ssh_check_test_deploy_id_was.log}" substring="BUILD SUCCESSFUL" casesensitive="true" />
			</condition>
			<antcall target="check_remote_work" />			
		</target>			
			
	<!-- ##### SSH SEND ##### -->
	<!-- 1. SCP (from local to nas) -->
	<!-- E:/jenkins-hosting/jobs/smb_aws_1-1-1.LOTTEMALL2013_ADMIN_TEST_BUILD/workspace/lottemall2013/pack/TEST/AD_20161205_1330 -->

	<!-- scp todir="jeus:ALcHefghi|&l@$10.149.150.31:/usr1/home/jeus/deploy/FO_20160117_1330" -->
	<!-- fileset dir="E:/jenkins-hosting/jobs/smb_aws_1-1-1.LOTTEMALL2013_ADMIN_TEST_BUILD/workspace/lottemall2013/pack/REAL/AD_20170116_1330" -->
	<!-- fileset dir="E:/jenkins-hosting/jobs/smb_aws_1-1-1.LOTTEMALL2013_ADMIN_TEST_BUILD/workspace/lottemall2013/pack/REAL/AD_20161205_1330" -->
	<target name="ssh_send_was">
		<scp todir="${user.id}:${user.pwd}@${was.ip}:${nas.dir}/${deploy.id}" trust="true">
			<fileset dir="${hdsnWrkSpPath}/${svnReposNm}/${hdsnPackPath}/${deploy.id}">
				<include name="gimpoairportadm/**/*"></include>
				<!-- pack할때 MallAdmin/WebContent 에서 gimpoairportadm 로 치환됨  -->
				<!-- Web배포로 인해 css, js 파일들이 배포될 경우 WAS 에서는 보내지 않기위해서 사용-->
                <!-- 필요시 주석풀기 -->
				<!-- <exclude name="gimpoairportadm/static-root/**/*"></exclude>--> 
				<!-- 필요시 주석풀기 -->
				<!-- <include name="gimpoairportadm/static-root/images/**/*"> -->
				<exclude name="gimpoairportadm/WEB-INF/config_*.xml"></exclude>
				<exclude name="gimpoairportadm/WEB-INF/jeus-web-dd-*.xml"></exclude>
				<exclude name="gimpoairportadm/WEB-INF/x2config/x2config_*.xml"></exclude>
				<exclude name="gimpoairportadm/WEB-INF/x2config/log4jconfig_*.xml"></exclude>
				<exclude name="gimpoairportadm/WEB-INF/x2config/lgdacom/conf/mall-*.conf"></exclude>
				<exclude name="gimpoairportadm/WEB-INF/x2config/smpi/smpi-*.properties"></exclude>
				<exclude name="gimpoairportadm/WEB-INF/x2config/pmpi/pmpi-*.properties"></exclude>
				<exclude name="**/.svn/**"></exclude>
			</fileset>
		</scp>
	</target>	
	

	<!-- ##### SSH COPY ##### -->
	<target name="ssh_copy_was">
		<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}"
			trust="true" verbose="false" output="${dep.was.log}"
			command="cd deploy;./${ssh.dep.cmd} ${deploy.id}" />
		<condition property="isSuccess">
			<resourcecontains resource="${dep.was.log}" substring="BUILD SUCCESSFUL" casesensitive="true" />
		</condition>
		<antcall target="check_remote_work" />		
	</target>

	<target name="ssh_copy_was_excludecopy">
		<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}"
			trust="true" verbose="false" output="${dep.was.log}"
			command="cd deploy;./${ssh.dep.excludecopy.cmd} ${deploy.id}" />
		<condition property="isSuccess">
			<resourcecontains resource="${dep.was.log}" substring="BUILD SUCCESSFUL" casesensitive="true" />
		</condition>
		<antcall target="check_remote_work" />		
	</target>
	
	<!-- ##### SSH TEST COPY ##### -->
	<target name="ssh_test_copy_was">
		<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}"
			trust="true" verbose="false" output="${dep.was.log}"
			command="cd deploy;./${ssh.dep.cmd} ${deploy.id}" />
		<condition property="isSuccess">
			<resourcecontains resource="${dep.was.log}" substring="BUILD SUCCESSFUL" casesensitive="true" />
		</condition>
		<antcall target="check_remote_work" />		
	</target>
		
	<!-- #### SSH JESU RESTART ####-->
	<target name="ssh_restart_jeus" depends="check_exist,ip_check" if="isRestart">	 <!-- only test - restart_jeus -->
		<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}" 
			trust="true" verbose="false" output="${jeus.restart.log}"
			command="ja downcon ${con_mall_ad};ja startcon ${con_mall_ad}" />
		<condition property="isSuccess">
			<resourcecontains resource="${jeus.restart.log}" substring="${con_mall_ad} container is started successfully" casesensitive="true" />
		</condition>
		<antcall target="check_remote_work" />
		<echo>jeus restart 작업이 완료되었습니다...</echo>
	</target>

	
	
	<!-- **************************************************************** -->
	<!-- RECORD -->
	<!-- **************************************************************** -->	
	<target name="record">
		<java jvm="${java.home.dir}/bin/java" fork="true"
		      failonerror="true"
		      jar="${deployer.home.dir}/bin/deploy-deployer.jar">
			<arg value="${ant.project.name}"/>
			<arg value="${deploy.id}"/>
			<arg value="${deploy.phase}"/>
			<arg value="record"/>
		</java> 
	</target>
	
	<!-- **************************************************************** -->
	<!-- NOTICE -->
	<!-- **************************************************************** -->	
	<target name="notice_fail">
		<java jvm="${java.home.dir}/bin/java" fork="true"
		      failonerror="true"
		      jar="${deployer.home.dir}/bin/deploy-deployer.jar">
			<arg value="${ant.project.name}"/>
			<arg value="${deploy.id}"/>
			<arg value="${deploy.phase}"/>
			<arg value="notice"/>
			<arg value="FAIL"/>
		</java> 
	</target>
	
	<target name="notice_success">
		<java jvm="${java.home.dir}/bin/java" fork="true"
		      failonerror="true"
		      jar="${deployer.home.dir}/bin/deploy-deployer.jar">
			<arg value="${ant.project.name}"/>
			<arg value="${deploy.id}"/>
			<arg value="${deploy.phase}"/>
			<arg value="notice"/>
			<arg value="SUCCESS"/>
		</java> 
	</target>	
	
	<!-- **************************************************************** -->
	<!-- ROLLBACK FOR TEST SERVER -->
	<!-- **************************************************************** -->
	<target name="rollback_was">
		<antcall target="rollback_start_time" />
		<antcall target="rollback" />
		<antcall target="rollback_end_time" />
	</target>
	
	<target name="rollback_start_time">
		<tstamp>
			<format property="DSTAMP" pattern="yyyy.MM.dd"/>
			<format property="TSTAMP" pattern="HH:mm"/>
		</tstamp>
		<echo message="Rollback Start ==> ${DSTAMP}-${TSTAMP}"/>
	</target>
	
	<target name="rollback_end_time">
		<tstamp>
			<format property="DSTAMP" pattern="yyyy.MM.dd"/>
			<format property="TSTAMP" pattern="HH:mm"/>
		</tstamp>
		<echo message="Rollback End ==> ${DSTAMP}-${TSTAMP}"/>
	</target>
	
	
	<!-- **************************************************************** -->
	<!-- ROLLBACK FOR SSH TEST SERVER -->
	<!-- 2. SSH (from Nas to DocRoot) -->
	<!-- **************************************************************** -->
	<!-- ssh.rollback.cmd = ssh_forollback -->
		
    <target name="ssh_rollback_was">
		<antcall target="rollback_start_time" />
		<sshexec host="${was.ip}" username="${user.id}" password="${user.pwd}"
			trust="true" verbose="false" output="${rollback.was.log}"
			command="cd deploy;./${ssh.rollback.cmd} ${deploy.id}" />
		<condition property="isSuccess">
			<resourcecontains resource="${rollback.was.log}" substring="BUILD SUCCESSFUL" casesensitive="true" />
		</condition>
		<antcall target="check_remote_work" />
    	<antcall target="rollback_end_time" />
	</target>



</project>
